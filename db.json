{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"67477acb46519f091a2de4bc4aa2e9ac939ffdc1","modified":1684505277787},{"_id":"themes/landscape/.npmignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1683266678081},{"_id":"themes/landscape/README.md","hash":"67fedfb66304f103c412f6be110bf3c40c75d4ac","modified":1683266678082},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1683266678082},{"_id":"themes/landscape/_config.yml","hash":"ce9d2939245209b8f5c5bbbdadc917d86057d032","modified":1683266678083},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1683266678082},{"_id":"themes/landscape/package.json","hash":"6e567a9654e61eb3f548c75edef380c2e135c433","modified":1683266678092},{"_id":"themes/landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1683266678083},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1683266678083},{"_id":"themes/landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1683266678083},{"_id":"themes/landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1683266678084},{"_id":"themes/landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1683266678084},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1683266678084},{"_id":"themes/landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1683266678084},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1683266678084},{"_id":"themes/landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1683266678085},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1683262180572},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1683262180575},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1683266678085},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1683266678091},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1683266678085},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1683266678085},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1683262180584},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"5e3b70c028d518b8f765e29a5e2020e7ba6ed589","modified":1683266678085},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1683266678092},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1683262180588},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1683262180587},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1683262180592},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"017c412bd3d60d22e493f02918e436a32d96bb84","modified":1683266678086},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1683266678086},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1683266678086},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1683266678087},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1683266678087},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1683266678087},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"a36cec48782782bac92622f369c750e5c7396510","modified":1683266678087},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"cf755454675d13a0813a922b575c06b6b74ab9fd","modified":1683266678087},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1683266678089},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1683266678088},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1683266678089},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1683266678090},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1683262180645},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1683262180646},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1683266678090},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1683266678090},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1683262180647},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1683266678090},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1683262182212},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1683262182213},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1683262182251},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1683266678108},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1683266678108},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1683266678109},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1683266678093},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1683266678109},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1683266678088},{"_id":"themes/landscape/source/css/_variables.styl","hash":"57bb02270eef16b4823a64ba663ccf2f247f34e5","modified":1683266678097},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1683266678088},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1683266678089},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1683266678089},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1683262182211},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1683266678104},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1683266678089},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1683266678106},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1683266678088},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1683266678107},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1683266678107},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1683266678107},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1683266678108},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1683266678093},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1683266678093},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1683266678094},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1683266678094},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1683266678094},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1683266678094},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1683266678095},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1683266678095},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1683266678096},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1683266678095},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1683266678096},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1683266678097},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1683262180644},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1683262182209},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1683262182745},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1683262182743},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1683266678100},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1683262181991},{"_id":"source/_posts/blog1.md","hash":"9873c5ec2fdb38102a6bf732160737ef5bfec8cf","modified":1683266678081},{"_id":"source/_posts/dfdf.md","hash":"c0b953eacf39a30136a4b9260bcc55498aa61854","modified":1683271662744},{"_id":"themes/hexo-theme-clean-dark/layout/page.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1683267773068},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/share.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1683267773065},{"_id":"themes/hexo-theme-clean-dark/layout/_widget/recent_comments.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1683267773066},{"_id":"themes/hexo-theme-clean-dark/.gitignore","hash":"b5fac81fb573ba1a21854ccc87edecf601392481","modified":1683267773061},{"_id":"themes/hexo-theme-clean-dark/README.md","hash":"06070c6f7e788ece6b3d71bdadf99f49c143dcf5","modified":1683267773061},{"_id":"themes/hexo-theme-clean-dark/_config.yml","hash":"424c1fb129a82443ba1527de5c41b34977ee64b3","modified":1683267773061},{"_id":"themes/hexo-theme-clean-dark/languages/es-ES.yml","hash":"1e68b87bc3edb2f5d5f7ecf6c361faedd5d75574","modified":1683267773062},{"_id":"themes/hexo-theme-clean-dark/package.json","hash":"ca43370cd62e07eb58e52098dacb78ef41ea1588","modified":1683267773069},{"_id":"themes/hexo-theme-clean-dark/languages/en.yml","hash":"7282ea33b9645841fbf0df66e8a0407d62e51d53","modified":1683267773062},{"_id":"themes/hexo-theme-clean-dark/languages/zh-CN.yml","hash":"db1c202142e4e2836841185702cd9eadedaf6c7c","modified":1683267773062},{"_id":"themes/hexo-theme-clean-dark/layout/about.ejs","hash":"abfc23ce1d02ac682dd56bca52a566cdda67c3c4","modified":1683267773067},{"_id":"themes/hexo-theme-clean-dark/languages/zh-TW.yml","hash":"6f8e88d455c34fc817c75898d907433e5b2f342e","modified":1683267773062},{"_id":"themes/hexo-theme-clean-dark/layout/archive.ejs","hash":"54953002f9e0cbf2d5cd591ef7acac61021071c9","modified":1683267773067},{"_id":"themes/hexo-theme-clean-dark/layout/layout.ejs","hash":"d8df16348c5dabe36a92d176a528e15129923055","modified":1683267773068},{"_id":"themes/hexo-theme-clean-dark/layout/index.ejs","hash":"c7e215e73908bd1d5ea023ec579c3c5168d903b4","modified":1683267773067},{"_id":"themes/hexo-theme-clean-dark/layout/post.ejs","hash":"466ff011edb21e366fc9fb7d38878fb6bfbfae73","modified":1683267773068},{"_id":"themes/hexo-theme-clean-dark/layout/tag.ejs","hash":"b50e42d1fdb82220fb537b43c08fefc7faff7f99","modified":1683267773068},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/header.ejs","hash":"49bf7717b6e8693f9d15b06a30b1261be9473ff6","modified":1683267773064},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/after_footer.ejs","hash":"aa6198ac59c8087366bbf226af7078186d019c23","modified":1683267773063},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/footer.ejs","hash":"c172fa27a65d190547479f60acebeb5480fabf93","modified":1683267773063},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/seo.ejs","hash":"c6ef2e8d882a9cb33de18a783380dd76b3bb7a2c","modified":1683267773064},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/pagination.ejs","hash":"16434b74428d9b2ee6548c1b0bd3f4e4ba346f88","modified":1683267773064},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/comments.ejs","hash":"0c612a00c9ab40fb76034e52f2e7f33c61b3ba7a","modified":1683267773063},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/sidebar.ejs","hash":"bf3ca5b572225a87d33313f810737b1ff5a3afbc","modified":1683267773065},{"_id":"themes/hexo-theme-clean-dark/layout/_widget/archives.ejs","hash":"ce8ad5010545ea1f8e5eacb60689ca958d768e0d","modified":1683267773066},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/toc.ejs","hash":"9002c0a5a68944edeeb32e93dd0e6f61377ffd48","modified":1683267773065},{"_id":"themes/hexo-theme-clean-dark/layout/_widget/links.ejs","hash":"b5eb5d96cbd8cdd9a0c1d84e882832c7a74bd93e","modified":1683267773066},{"_id":"themes/hexo-theme-clean-dark/layout/_widget/categories.ejs","hash":"5a73a0612fc5e1caa8ef9b17756dcf43503a9468","modified":1683267773066},{"_id":"themes/hexo-theme-clean-dark/layout/_partial/social.ejs","hash":"066f22699b182982bf69d1b0d88448828e8c23bf","modified":1683267773065},{"_id":"themes/hexo-theme-clean-dark/layout/_widget/recent_posts.ejs","hash":"b7b7339e993fa29dfa19a94be1f4b1b8ab0e08a2","modified":1683267773066},{"_id":"themes/hexo-theme-clean-dark/layout/_widget/tagcloud.ejs","hash":"5525ee95e545543f4f28f949905ef9fbe39c0395","modified":1683267773066},{"_id":"themes/hexo-theme-clean-dark/source/css/theme.scss","hash":"4210f743efd06ff11b1a8db763a5e5c573b4f1ec","modified":1683267773093},{"_id":"themes/hexo-theme-clean-dark/layout/_widget/tags.ejs","hash":"8c40c0cf6ae150f6c9c647b3bc8fe7ebf5100b2b","modified":1683267773067},{"_id":"themes/hexo-theme-clean-dark/source/css/syntax.scss","hash":"6101b549c1abea52dc72e2c8e387afc2cfbff6ac","modified":1683267773093},{"_id":"themes/hexo-theme-clean-dark/source/js/header.js","hash":"0ed9ffe73b3eed0bf35561cf6e1c7fcf1828b377","modified":1683267773093},{"_id":"themes/hexo-theme-clean-dark/source/js/toc.js","hash":"e189f2459a1ac60c08eac958ede38c5dab2f6f0e","modified":1683267773093},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1683267773069},{"_id":"themes/hexo-theme-clean-dark/source/css/icomoon/icomoon.svg.1","hash":"b940c63bfc6f731ffc934f7b6dcccc35e9c51c76","modified":1683267773090},{"_id":"themes/hexo-theme-clean-dark/source/css/icomoon/style.css","hash":"3acbafbc1b5f3bfbe60f52f71aafa0fb2029c951","modified":1683267773092},{"_id":"themes/hexo-theme-clean-dark/source/css/icomoon/icomoon.svg","hash":"b81b7619d11b4d20821f1d533834e2236d97bb4c","modified":1683267773090},{"_id":"themes/hexo-theme-clean-dark/source/css/icomoon/icomoon.eot","hash":"09d737377e3919aa077b03fad1a28453122441e5","modified":1683267773090},{"_id":"themes/hexo-theme-clean-dark/source/css/icomoon/icomoon.ttf","hash":"60cca846b8d2a575c80b90ae11f592d2d99e96d7","modified":1683267773091},{"_id":"themes/hexo-theme-clean-dark/source/js/webfont/webfont.js","hash":"62035590cb25df3d07cb73411d25da8eb73df1f8","modified":1683267773093},{"_id":"themes/hexo-theme-clean-dark/source/css/icomoon/icomoon.woff","hash":"6591aaef4dde867b527e287ec0248566ba57876e","modified":1683267773091},{"_id":"themes/hexo-theme-clean-dark/source/css/pics/triangles.png","hash":"845b28085613ff5c3c0f367b6bb6567ec51c4aaa","modified":1683267773093},{"_id":"themes/hexo-theme-clean-dark/source/css/pics/random-grey-variations.png","hash":"d8c11bf97e41c8b1ef03c3d4eff69008b2216303","modified":1683267773092},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1683267773070},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1683267773070},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_animated.scss","hash":"c3d081abee1076d36a289afc6488e676bc59f023","modified":1683267773085},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1683267773080},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_bordered-pulled.scss","hash":"39353047bbcce4f3f706666df1547e64546932a0","modified":1683267773085},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_icons.scss","hash":"8ff397452c348cda6569645c48fa58a6c7862bcd","modified":1683267773086},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_fixed-width.scss","hash":"f4af333866ff3c0da59493fc7077965c6e9d46ac","modified":1683267773086},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_larger.scss","hash":"c5cf379c23025aa001f850bd560a87a92e4f711d","modified":1683267773087},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_core.scss","hash":"2dce8814642ef0ee86c65f3d29818c17fd8951f9","modified":1683267773086},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_mixins.scss","hash":"24099bff40cb5dabf4a2dfa7553c9b3187ec37d0","modified":1683267773087},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_path.scss","hash":"011339ce07bb12a5736edd7fdbed0b7f3c63bf72","modified":1683267773088},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_list.scss","hash":"8e9c5708bd91364a749f93555ba65af3c49ff1a6","modified":1683267773087},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_stacked.scss","hash":"c4fe90e7781e8b229bf2657312ba61ecf1026cab","modified":1683267773088},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_variables.scss","hash":"55b41c084541e42818ef6583279c3eba31bb6500","modified":1683267773089},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/_rotated-flipped.scss","hash":"fd48d098af52ffff6f829e7f5a2250a9c3cfc87f","modified":1683267773088},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/animated.less","hash":"472ec14f388c90a7201861e77faec317d038fd9c","modified":1683267773081},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/bordered-pulled.less","hash":"66dc98ad0e4151e8938350f1ee3d0932348b37e8","modified":1683267773081},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/core.less","hash":"5f436a1afd7f1de7dde20ed8c2fd84812b8acf12","modified":1683267773081},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/fixed-width.less","hash":"a9552c8a91766a6d926c43c4c0f74acb62aaf719","modified":1683267773082},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/font-awesome.less","hash":"de7bf31c16f1611156da526f0431188cfabfa86e","modified":1683267773082},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/scss/font-awesome.scss","hash":"5bcc8deb2928a06f06cb0096881e8cc2c5d62817","modified":1683267773089},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/icons.less","hash":"1e2a6f39c10d3af69a1c8e5d9e6a13aad6026952","modified":1683267773082},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/larger.less","hash":"d9610d7f83b0aaf3fdd5fa048117bd8620adf346","modified":1683267773083},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/list.less","hash":"2b203f3bacd6eaa58d0aa11efb9fb661b884eeb9","modified":1683267773083},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/mixins.less","hash":"d3756726479ed417769f1ae0219cbdeea22588af","modified":1683267773083},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/path.less","hash":"dce2ee8b14b3ded7583c474a4291a892d0430a4c","modified":1683267773083},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/rotated-flipped.less","hash":"39ec6a3d98e5a55a2330935d139f95855c139dcf","modified":1683267773083},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/stacked.less","hash":"ee10b7a0bc941f8d0bbd092d4178b9fae9f1661f","modified":1683267773084},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/less/variables.less","hash":"9c6f6edda234582bf405142d09a73836d5ba08b9","modified":1683267773085},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1683267773072},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1683267773073},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1683267773080},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1683267773079},{"_id":"themes/hexo-theme-clean-dark/source/css/font-awesome/fonts/fontawesome-webfont.svg","hash":"788309b1fef5e0a4ebdd4a86b0982f6512fb936a","modified":1683267773076},{"_id":"public/2023/05/05/dfdf/index.html","hash":"2034eaa55c2002d698a9b15a2f751d6aa3caa7ec","modified":1683270196686},{"_id":"public/2023/05/05/hello-world/index.html","hash":"1a8f5550026ae6624030a7a3a2d91bd45f542667","modified":1684505435653},{"_id":"public/2023/05/05/blog1/index.html","hash":"e6c52beaec4236a9cfa0e72ae7625a0d94265a4d","modified":1683270196686},{"_id":"public/archives/index.html","hash":"f89f36fa0be6eb4d91e05ae4ffc8d0dc741bbaf6","modified":1684505435653},{"_id":"public/index.html","hash":"2608ea79512d2d5135790feec504b448000ccead","modified":1684505435653},{"_id":"public/archives/2023/index.html","hash":"246516f1c6ef7c336f95c138db3eb0a644c5c298","modified":1684505435653},{"_id":"public/archives/2023/05/index.html","hash":"bdc8142885148daf8031d14e548f0c54c18d4816","modified":1684505435653},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1683270115247},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1683270115247},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1683270115247},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1683270115247},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1683270115247},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1683270115247},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1683270115247},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1683270115247},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1683270115247},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1683270115247},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1683270115247},{"_id":"public/css/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1683270115247},{"_id":"public/css/icomoon/icomoon.eot","hash":"09d737377e3919aa077b03fad1a28453122441e5","modified":1683270115247},{"_id":"public/css/icomoon/icomoon.svg.1","hash":"b940c63bfc6f731ffc934f7b6dcccc35e9c51c76","modified":1683270115247},{"_id":"public/css/icomoon/icomoon.svg","hash":"b81b7619d11b4d20821f1d533834e2236d97bb4c","modified":1683270115247},{"_id":"public/css/icomoon/icomoon.ttf","hash":"60cca846b8d2a575c80b90ae11f592d2d99e96d7","modified":1683270115247},{"_id":"public/css/icomoon/icomoon.woff","hash":"6591aaef4dde867b527e287ec0248566ba57876e","modified":1683270115247},{"_id":"public/css/pics/triangles.png","hash":"845b28085613ff5c3c0f367b6bb6567ec51c4aaa","modified":1683270115247},{"_id":"public/css/pics/random-grey-variations.png","hash":"d8c11bf97e41c8b1ef03c3d4eff69008b2216303","modified":1683270115247},{"_id":"public/css/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1683270115247},{"_id":"public/css/font-awesome/less/animated.less","hash":"472ec14f388c90a7201861e77faec317d038fd9c","modified":1683270115247},{"_id":"public/css/font-awesome/less/bordered-pulled.less","hash":"66dc98ad0e4151e8938350f1ee3d0932348b37e8","modified":1683270115247},{"_id":"public/css/font-awesome/less/core.less","hash":"5f436a1afd7f1de7dde20ed8c2fd84812b8acf12","modified":1683270115247},{"_id":"public/css/font-awesome/less/fixed-width.less","hash":"a9552c8a91766a6d926c43c4c0f74acb62aaf719","modified":1683270115247},{"_id":"public/css/font-awesome/less/font-awesome.less","hash":"de7bf31c16f1611156da526f0431188cfabfa86e","modified":1683270115247},{"_id":"public/css/font-awesome/less/larger.less","hash":"d9610d7f83b0aaf3fdd5fa048117bd8620adf346","modified":1683270115247},{"_id":"public/css/font-awesome/less/icons.less","hash":"1e2a6f39c10d3af69a1c8e5d9e6a13aad6026952","modified":1683270115247},{"_id":"public/css/font-awesome/less/list.less","hash":"2b203f3bacd6eaa58d0aa11efb9fb661b884eeb9","modified":1683270115247},{"_id":"public/css/font-awesome/less/mixins.less","hash":"d3756726479ed417769f1ae0219cbdeea22588af","modified":1683270115247},{"_id":"public/css/font-awesome/less/path.less","hash":"dce2ee8b14b3ded7583c474a4291a892d0430a4c","modified":1683270115247},{"_id":"public/css/font-awesome/less/rotated-flipped.less","hash":"39ec6a3d98e5a55a2330935d139f95855c139dcf","modified":1683270115247},{"_id":"public/css/font-awesome/less/stacked.less","hash":"ee10b7a0bc941f8d0bbd092d4178b9fae9f1661f","modified":1683270115247},{"_id":"public/css/font-awesome/less/variables.less","hash":"9c6f6edda234582bf405142d09a73836d5ba08b9","modified":1683270115247},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1683270115247},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1683270115247},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1683270115247},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1683270115247},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1683270115247},{"_id":"public/js/header.js","hash":"a0852e26e7d07627aed4796c7d26bb416e0e3426","modified":1683270115247},{"_id":"public/css/theme.css","hash":"6b247e287e9cb7aa473a938fa1eebcd8baf7a5a5","modified":1683270115247},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1683270115247},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1683270115247},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1683270115247},{"_id":"public/css/style.css","hash":"5673af1e8e0b02135e5a5ae176fc47916ba2cd12","modified":1683270115247},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1683270115247},{"_id":"public/css/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1683270115247},{"_id":"public/css/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1683270115247},{"_id":"public/css/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1683270115247},{"_id":"public/css/syntax.css","hash":"1bbe21e8d37c16beb809ef00616a62994763b6fe","modified":1683270115247},{"_id":"public/js/toc.js","hash":"7463f37db48bf86d1a233db313841e1288514430","modified":1683270115247},{"_id":"public/css/icomoon/style.css","hash":"c135e36a25b1f7cbbef77752282c90042c2c9925","modified":1683270115247},{"_id":"public/css/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1683270115247},{"_id":"public/css/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1683270115247},{"_id":"public/js/webfont/webfont.js","hash":"9c030800712c832f2a15040cf02f546884a99808","modified":1683270115247},{"_id":"public/css/font-awesome/scss/font-awesome.css","hash":"87b1f9aa99231c1bc766e495d733daecc02bf2a1","modified":1683270115247},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1683270115247},{"_id":"public/css/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1683270115247},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1683270115247},{"_id":"public/css/font-awesome/fonts/fontawesome-webfont.svg","hash":"788309b1fef5e0a4ebdd4a86b0982f6512fb936a","modified":1683270115247},{"_id":"themes/acorn/.gitkeep","hash":"7dec177b1ffda7ad955cc34be7a1d97d829a6975","modified":1683275883938},{"_id":"themes/acorn/LICENSE","hash":"1eba7caf09a39110ad2f542e3ed8700d1a69c6d3","modified":1683275883940},{"_id":"themes/acorn/_config.yml","hash":"fdd15f38b58dcbdbaf0d37504cdca4714e907978","modified":1683276053318},{"_id":"themes/acorn/README.md","hash":"1d3cbc394b545a5624b17f8d1db0f09ed6180dd1","modified":1683275883941},{"_id":"themes/acorn/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1683275883943},{"_id":"themes/acorn/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1683275883942},{"_id":"themes/acorn/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1683275883944},{"_id":"themes/acorn/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1683275883945},{"_id":"themes/acorn/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1683275883946},{"_id":"themes/acorn/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1683275883946},{"_id":"themes/acorn/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1683275883948},{"_id":"themes/acorn/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1683275883947},{"_id":"themes/acorn/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1683275883949},{"_id":"themes/acorn/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1683275883950},{"_id":"themes/acorn/languages/zh-CN.yml","hash":"50b852f3b01c5cea09bdae6ba1a0a40d781d51c5","modified":1683275883950},{"_id":"themes/acorn/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1683275883950},{"_id":"themes/acorn/layout/archive.ejs","hash":"513f7d493eba5f123986c83a3a880dc52dce3a22","modified":1683275883965},{"_id":"themes/acorn/layout/index.ejs","hash":"da02ad22f69405a16ca3b7f90da922e9927938ed","modified":1683275883966},{"_id":"themes/acorn/layout/layout.ejs","hash":"9cd0f83f600744ecdd13947064524bf5bf998d17","modified":1683275883966},{"_id":"themes/acorn/layout/page.ejs","hash":"1522bc2b7b67aa39b3d9d0294e66db953176976c","modified":1683275883966},{"_id":"themes/acorn/layout/post.ejs","hash":"ef2d2b410eb5be8d0a17bc19405b3371435d0f1b","modified":1683275883967},{"_id":"themes/acorn/layout/plugins.ejs","hash":"9c996468cfcd137b144139bbfcec00756bb4e00a","modified":1683275883967},{"_id":"themes/acorn/layout/_partial/after-footer.ejs","hash":"00f9a16ded5c24cd1b0823c88277327bcf05ece6","modified":1683275883952},{"_id":"themes/acorn/source/404.html","hash":"7da21973cc0b6b307682ea386a8e7c214151f23b","modified":1683275883967},{"_id":"themes/acorn/layout/_partial/album.ejs","hash":"7f54de5a1809c7afec20aaa7f5068811cb4f5a3b","modified":1683275883952},{"_id":"themes/acorn/layout/_partial/archive-post.ejs","hash":"0e53cbfdf3d980c05e9de131ac91ac946d11e6d4","modified":1683275883953},{"_id":"themes/acorn/layout/_partial/archive.ejs","hash":"12016eb4f6ecc2d1852fee234a3b56344929db6f","modified":1683275883953},{"_id":"themes/acorn/layout/_partial/article.ejs","hash":"edb834795b4c97dc8cd455f184dc0973481ac0d2","modified":1683275883954},{"_id":"themes/acorn/layout/_partial/culture.ejs","hash":"73ee4fc85925fbb62744462e60bcb41b4395dd1a","modified":1683275883954},{"_id":"themes/acorn/layout/_partial/footer.ejs","hash":"4dabac2923547954675fc758c1d82b003e93940b","modified":1683275883955},{"_id":"themes/acorn/layout/_partial/gallery.ejs","hash":"fa2bc966265fb2a691c088021465cbe289b27662","modified":1683275883955},{"_id":"themes/acorn/layout/_partial/head.ejs","hash":"9550c63e7232c239128e92f0ea55c79343f6d141","modified":1683275883956},{"_id":"themes/acorn/layout/_partial/header.ejs","hash":"f8d22bdcff6622ce2d5e931d2527a997df75fa3c","modified":1683275883956},{"_id":"themes/acorn/layout/_partial/instapic.ejs","hash":"e1b06bb26702aa4ff377ad16eb48d2a6d794cc0a","modified":1683275883956},{"_id":"themes/acorn/layout/_partial/menu.ejs","hash":"f46ad1e26fbe6e8909cdf9523c7c7dcc82dce73d","modified":1683275883957},{"_id":"themes/acorn/layout/_partial/mobile-nav.ejs","hash":"1b133cd085dc1ba35897c742cda6885ead7216cc","modified":1683275883957},{"_id":"themes/acorn/layout/_partial/products.ejs","hash":"5a2a7c9942e214eeb9cbb01d499b95eded1ea527","modified":1683275883964},{"_id":"themes/acorn/layout/_partial/quotation.ejs","hash":"35275e8c17b22b47761617c877f80e0d684751eb","modified":1683275883965},{"_id":"themes/acorn/layout/_partial/stories.ejs","hash":"c28968e09db87a7fd9cbf4f0df0138e74227ecf5","modified":1683275883965},{"_id":"themes/acorn/source/css/404.styl","hash":"460714e13126a7f1ac78105204513684b0f64ed0","modified":1683275883968},{"_id":"themes/acorn/source/css/_colors.styl","hash":"1ee02cc565fef19410a53849b0f74c3ce30aeaa7","modified":1683275883968},{"_id":"themes/acorn/source/css/_extend.styl","hash":"092e445d3260d5232f1ed111f4c61e1411ee2637","modified":1683275883970},{"_id":"themes/acorn/source/css/_function.styl","hash":"cccc1e04e9df8f871cfa274fb7da7d7af269c406","modified":1683275883970},{"_id":"themes/acorn/layout/_partial/pricing.ejs","hash":"3c4757c01120167317be5fae8f017602f8837665","modified":1683275883964},{"_id":"themes/acorn/source/css/_normalize.styl","hash":"df9ca719f651c45a88ab4d6afa6d29edf51aeba9","modified":1683275883971},{"_id":"themes/acorn/source/css/_mixins.styl","hash":"6d742978e2d0582f9a3243ed31bfd321d5428961","modified":1683275883971},{"_id":"themes/acorn/source/css/_variables.styl","hash":"085f034d421a3d70cb322ba056c7ce1b4b324013","modified":1683275883984},{"_id":"themes/acorn/source/css/style.styl","hash":"8d69815df0f8de5065b997f24c2e38bf057cce55","modified":1683275883984},{"_id":"themes/acorn/source/images/404.svg","hash":"c2a1b37eeaa74c828fb941c870edb6bd64722557","modified":1683275883985},{"_id":"themes/acorn/source/js/mobile-nav.js","hash":"61a09d5571e1cf99177aec5e1e8ec7c7857b7d71","modified":1683275883989},{"_id":"themes/acorn/source/js/lazysizes.min.js","hash":"27192bc19de2a9f69cb684d8bc627c78471ce049","modified":1683275883988},{"_id":"themes/acorn/source/js/script.js","hash":"e77ba85385714b605231bb4421092515a4a2eaf9","modified":1683275883989},{"_id":"themes/acorn/layout/_partial/page/banner.ejs","hash":"a31b08a4134249a06f0f9af5e27c3a98ac6c95e4","modified":1683275883958},{"_id":"themes/acorn/layout/_partial/page/carousel.ejs","hash":"001d4883646614017d7cffe1f91c26d305dde695","modified":1683275883958},{"_id":"themes/acorn/layout/_partial/page/hero.ejs","hash":"dc3098f6fbec78b902a89343dd0f4b157c063c92","modified":1683275883959},{"_id":"themes/acorn/layout/_partial/page/heading.ejs","hash":"549b11899ef20eb55119fbb0c0a98a207711345f","modified":1683275883958},{"_id":"themes/acorn/layout/_partial/page/jumbotron.ejs","hash":"31a28922682c64cfa35144d39df7f0ff6ba411e1","modified":1683275883959},{"_id":"themes/acorn/layout/_partial/page/stories.ejs","hash":"f7e1cc88fd6cc5fe39532559c4fb13a84d497199","modified":1683275883960},{"_id":"themes/acorn/layout/_partial/page/title.ejs","hash":"20b12aacfe77b28fe7c481e3b1bf7e865558c409","modified":1683275883960},{"_id":"themes/acorn/layout/_partial/post/author.ejs","hash":"c25ae4c7dbddcd8959fe7454cff4d5e8adb5a1de","modified":1683275883961},{"_id":"themes/acorn/layout/_partial/post/avatar.ejs","hash":"a386090afa34da0864599bd18c497e004d182833","modified":1683275883961},{"_id":"themes/acorn/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1683275883961},{"_id":"themes/acorn/layout/_partial/post/date.ejs","hash":"bd32313989a70f2cfae678db6a06289e4a1f2c83","modified":1683275883962},{"_id":"themes/acorn/layout/_partial/post/gallery.ejs","hash":"098e16c674335decac5faca19725c867165b845a","modified":1683275883962},{"_id":"themes/acorn/layout/_partial/post/nav.ejs","hash":"7f14fa953240261cccf9932370867c32d01da2cf","modified":1683275883963},{"_id":"themes/acorn/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1683275883963},{"_id":"themes/acorn/layout/_partial/post/title.ejs","hash":"6a4c2bbe8a7ab55c30b29fa45f00777afea24c91","modified":1683275883963},{"_id":"themes/acorn/source/css/_custom/index.styl","hash":"a331524cb04148eee55f393f3a86fe6c42ed8dcc","modified":1683275883969},{"_id":"themes/acorn/source/css/_custom/lazyloading.styl","hash":"a460dbfe5a7def3404d871e40718f05e04efaab8","modified":1683275883969},{"_id":"themes/acorn/source/css/_partial/album.styl","hash":"50eb918ab7efef2301ad4fa8f02cf28522aadee6","modified":1683275883972},{"_id":"themes/acorn/source/css/_partial/archive.styl","hash":"823cb5e59dd6bd2b7696cd7c40c76333c21ff033","modified":1683275883972},{"_id":"themes/acorn/source/css/_partial/article.styl","hash":"210b8f3786eea57fcc9ba19162a75dee9a6cd87e","modified":1683275883973},{"_id":"themes/acorn/source/css/_partial/banner.styl","hash":"3e5fb4609aa3f855d87996919a4d417773277a56","modified":1683275883973},{"_id":"themes/acorn/source/css/_partial/blockquote.styl","hash":"bf462cb879ee12a6d7cc8c264029e2eec70fd1b2","modified":1683275883973},{"_id":"themes/acorn/source/css/_partial/button.styl","hash":"5a4a76595786efde5c15a23d40a57aef57f779b3","modified":1683275883974},{"_id":"themes/acorn/source/css/_partial/card.styl","hash":"f650c84d165ea78af1fb92d9ab5094f6ec6e30f5","modified":1683275883974},{"_id":"themes/acorn/source/css/_partial/carousel.styl","hash":"a764037ba29c1a2d85a6270a34562833f024c6de","modified":1683275883974},{"_id":"themes/acorn/source/css/_partial/footer.styl","hash":"a9958b01aa8c106404566d59b200f8b2674405b2","modified":1683275883974},{"_id":"themes/acorn/source/css/_partial/gallery.styl","hash":"f724f678ccf8b5491954610a80fc9c4ff368ac3b","modified":1683275883975},{"_id":"themes/acorn/source/css/_partial/header.styl","hash":"faa113c96bbf478d7c2c75c4a1497e73f98d4b26","modified":1683275883975},{"_id":"themes/acorn/source/css/_partial/hero.styl","hash":"8c7248a971ad2cda2768e9d12e40e4199ae7f3d2","modified":1683275883975},{"_id":"themes/acorn/source/css/_partial/highlight.styl","hash":"e41c42f750d3f467ddea9683cd166e836e85c010","modified":1683275883976},{"_id":"themes/acorn/source/css/_partial/home.styl","hash":"5b5292d14cd8d707aad98c7a3c780c19528f644f","modified":1683275883976},{"_id":"themes/acorn/source/css/_partial/instapic.styl","hash":"0cfdd5e3a03d1fead382a3b202313828510a765f","modified":1683275883976},{"_id":"themes/acorn/source/css/_partial/jumbotron.styl","hash":"14f0a9ec9637efb020093959bcb1be6bd5425587","modified":1683275883977},{"_id":"themes/acorn/source/css/_partial/layout.styl","hash":"9f5622380ae5682ca269b9e7fefc273d1f95fa72","modified":1683275883977},{"_id":"themes/acorn/source/css/_partial/mobile-nav.styl","hash":"219e084452d6a4cf12ebdaf7ef0560482a4b0afe","modified":1683275883978},{"_id":"themes/acorn/source/css/_partial/main-nav.styl","hash":"27436d6dfbb785814a46cd0f54f59a63e834f028","modified":1683275883977},{"_id":"themes/acorn/source/css/_partial/navbar.styl","hash":"f058f9a063e2bddaf10be61816db73126d6ce8b8","modified":1683275883978},{"_id":"themes/acorn/source/css/_partial/page.styl","hash":"d2abd5966f715deb8c512965e9dbdb8194075ac3","modified":1683275883978},{"_id":"themes/acorn/source/css/_partial/post.styl","hash":"43254efd0d14205d003b765e1460ea515d5c9fb7","modified":1683275883979},{"_id":"themes/acorn/source/css/_partial/section.styl","hash":"65609a122bc76a48e09590438ae9fd5cbe67cbb5","modified":1683275883979},{"_id":"themes/acorn/source/css/_partial/swiper.styl","hash":"21c8c687a7093cf8e2cc40bdf48f10539b610081","modified":1683275883979},{"_id":"themes/acorn/source/css/_partial/title.styl","hash":"3c440efe274a719b1311fb77c85d5bc12bcbd2b0","modified":1683275883980},{"_id":"themes/acorn/source/css/_partial/tocbot.styl","hash":"d837192cbadc703d554902036894732ef3d99550","modified":1683275883980},{"_id":"themes/acorn/source/css/_partial/typography.styl","hash":"ecad3221ea3d09240fafae6cbcd414461aa76606","modified":1683275883980},{"_id":"themes/acorn/source/css/_utilities/borders.styl","hash":"b0ff3daf7efc42c0075ae8d6a4940ed325e1ce40","modified":1683275883981},{"_id":"themes/acorn/source/css/_utilities/display.styl","hash":"6c0a1c3a6e4e2b60f3f4fe7bceacf2c640a59039","modified":1683275883981},{"_id":"themes/acorn/source/css/_utilities/filter.styl","hash":"4265ca441528d12fa3c4275a8b8eee7bdea03512","modified":1683275883981},{"_id":"themes/acorn/source/css/_utilities/flex.styl","hash":"df78323b91d72ee82d3a6a4aded562ecef190186","modified":1683275883982},{"_id":"themes/acorn/source/css/_utilities/grid.styl","hash":"a39e50ed900941409d7150dbc274e7ac076a7dc4","modified":1683275883982},{"_id":"themes/acorn/source/css/_utilities/list.styl","hash":"e9fd48fe21312fff6c1be1bf777e5fc5b9cd86f8","modified":1683275883982},{"_id":"themes/acorn/source/css/_utilities/safari.styl","hash":"51063a35ffb53d360879b692f28424815d594d8d","modified":1683275883983},{"_id":"themes/acorn/source/css/_utilities/shadows.styl","hash":"a39cdeeeb91e749e2cea16e2c33d50929d928065","modified":1683275883983},{"_id":"themes/acorn/source/css/_utilities/sizing.styl","hash":"2ebfec8784c746a6bf72bac0b2fb04a5fcb62dda","modified":1683275883983},{"_id":"themes/acorn/source/images/icons/contact_email.svg","hash":"625fa5705689382ab3432359c7c06651b4488e6e","modified":1683275883986},{"_id":"themes/acorn/source/css/_utilities/spacing.styl","hash":"286b7c020cdd319d1c8dabadbee550ce08a7208c","modified":1683275883983},{"_id":"themes/acorn/source/images/icons/contact_wechat.svg","hash":"441670bb05d6b00fb846a9a77d4344ee1fb93f73","modified":1683275883986},{"_id":"themes/acorn/source/images/icons/contact_weibo.svg","hash":"8dbe37675c645f49d453c018e8e7a93a0b09857f","modified":1683275883987},{"_id":"themes/acorn/source/images/icons/quotes_after.svg","hash":"6783a9783b530ad5ac422e15c6b190d6699891c1","modified":1683275883987},{"_id":"themes/acorn/source/images/icons/quotes_before.svg","hash":"e40c642616274b3ed212d7f598b3d4dfb8757afa","modified":1683275883988},{"_id":"themes/acorn/source/libs/lazysizes/lazysizes.min.js","hash":"27192bc19de2a9f69cb684d8bc627c78471ce049","modified":1683275883992},{"_id":"themes/acorn/source/libs/swiper/swiper-bundle.min.css","hash":"9a85a3d3d4ab0082f25ab6f44cb0ebb15a8bef70","modified":1683275883992},{"_id":"themes/acorn/source/libs/wow/wow.min.js","hash":"e297207404fea99863aea60a1dcd3770f8ecddee","modified":1683275883995},{"_id":"themes/acorn/source/libs/tocbot/tocbot.min.js","hash":"98af336bfc6118bd6aaae5722491e212ab70b5d3","modified":1683275883994},{"_id":"themes/acorn/source/libs/animate/animate.min.css","hash":"cc1a6349fa1f42c9e51e8c9f8dfcf55dfcc93350","modified":1683275883990},{"_id":"themes/acorn/source/libs/feather/feather.min.js","hash":"f85d1d204036274be537ca2ac91d024dce918f1f","modified":1683275883991},{"_id":"themes/acorn/source/libs/swiper/swiper-bundle.min.js","hash":"b8fb2ec64b3eb02f5f3896a6482026f8ae134863","modified":1683275883994},{"_id":"themes/cards/layout/_plugins/comments/giscus/source.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1683276457434},{"_id":"themes/cards/.gitignore","hash":"79ded12c68df458fa71fab47386acb606a50c913","modified":1683276457327},{"_id":"themes/cards/README.md","hash":"a1a9b7fefcacf817c44329703d8a50a1a067b50b","modified":1683276457329},{"_id":"themes/cards/LICENSE","hash":"486967183e8ef251f6d08a3f52c7aed6c415778c","modified":1683276457328},{"_id":"themes/cards/_config.yml","hash":"d1c362e04bc79824255c2ca5651044cdfa8d02b5","modified":1683276457330},{"_id":"themes/cards/gulpfile.js","hash":"7c40edcc26ef864936e213043ae59a4d699a938c","modified":1683276457411},{"_id":"themes/cards/package.json","hash":"e311c7bb8b5a0cb37dda8de2969b2d3d21d800a2","modified":1683276457451},{"_id":"themes/cards/layout/artitalk.ejs","hash":"fd555fc2c9dd3ff461f5bf172c8e5915098fb211","modified":1683276457449},{"_id":"themes/cards/layout/archive.ejs","hash":"0ecd0cf3318d49c4c76efc57a06a729927ba414f","modified":1683276457449},{"_id":"themes/cards/layout/category.ejs","hash":"4afd72c177bb5933c718b5329a4b4f2a35ff99e9","modified":1683276457449},{"_id":"themes/cards/layout/index.ejs","hash":"a12eb50d152bbcec5882d5de44b2fd283f9f3dc0","modified":1683276457450},{"_id":"themes/cards/layout/layout.ejs","hash":"1d50ec0716194043f2bec7067fc644e35cc1b428","modified":1683276457450},{"_id":"themes/cards/layout/links.ejs","hash":"4c106a18b8ebc3312f8f2aa37132d3161e49451d","modified":1683276457450},{"_id":"themes/cards/layout/page.ejs","hash":"b3b8de09f46c511767f9cb0ef8fe9f55b2c3a8d3","modified":1683276457450},{"_id":"themes/cards/layout/post.ejs","hash":"b3b8de09f46c511767f9cb0ef8fe9f55b2c3a8d3","modified":1683276457451},{"_id":"themes/cards/layout/search.ejs","hash":"2d462e01f5a878220bd3a1106a91420767d89457","modified":1683276457451},{"_id":"themes/cards/layout/tag.ejs","hash":"af117ee105b1886fcaa985949d205d6e8d0f84e2","modified":1683276457451},{"_id":"themes/cards/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1683276457412},{"_id":"themes/cards/languages/en.yml","hash":"6dca87fa595fa5ce2cb772a2e99dba49e5184056","modified":1683276457412},{"_id":"themes/cards/languages/zh-CN.yml","hash":"1934a5a451c2a5f5df1f6ea5bab81b4759d21707","modified":1683276457413},{"_id":"themes/cards/languages/zh-TW.yml","hash":"82d82227135048bb8d093d6c5fc5cd39079cb10c","modified":1683276457413},{"_id":"themes/cards/.github/workflows/test.yml","hash":"e2c53c4d4cd6b819d2a8e474d6ac37e10b9c989c","modified":1683276457327},{"_id":"themes/cards/layout/_meta/categories.ejs","hash":"cc108fec44416cc521b320400b09848d11d9d657","modified":1683276457414},{"_id":"themes/cards/layout/_meta/copyright.ejs","hash":"468f9a41111cff51075ca93dc79b095d10978b8b","modified":1683276457414},{"_id":"themes/cards/layout/_meta/date.ejs","hash":"86187c0f4799123085732f7236f8827e7eee6622","modified":1683276457414},{"_id":"themes/cards/layout/_meta/expire.ejs","hash":"4e68e5c69dd023077a6512a220bd3006ccc58b5e","modified":1683276457415},{"_id":"themes/cards/layout/_meta/thumbnail.ejs","hash":"489a21cd9eac8013e8c5029ce3e52b9863d73556","modified":1683276457415},{"_id":"themes/cards/layout/_meta/tags.ejs","hash":"25cc4c82361f22f80fe58f169275aaa4ffc1f98c","modified":1683276457415},{"_id":"themes/cards/layout/_meta/updated.ejs","hash":"1f16f557db0f480adadacd5b970a2f3de6e4d219","modified":1683276457416},{"_id":"themes/cards/layout/_pages/archive.ejs","hash":"0b37962da4a4535cecdf138dd4447e59cf7753c8","modified":1683276457416},{"_id":"themes/cards/layout/_pages/artitalk.ejs","hash":"e1907f27c25f14e3e848cd068173f95c5bc6b844","modified":1683276457417},{"_id":"themes/cards/layout/_pages/category.ejs","hash":"c98966d8b545300acf34229e44d467c48157f0c9","modified":1683276457417},{"_id":"themes/cards/layout/_pages/links.ejs","hash":"8caabddb00faaa202728ab9cc388505c7f7e709f","modified":1683276457418},{"_id":"themes/cards/layout/_pages/post.ejs","hash":"e7b12c622ac03b9468b01742d31682cc8dee9be2","modified":1683276457418},{"_id":"themes/cards/layout/_pages/tag.ejs","hash":"9e3baec8c94814655337b73648991655b9b37c98","modified":1683276457418},{"_id":"themes/cards/layout/_pages/search.ejs","hash":"6a3da4133ca369b9b40b50b3395d1f9b94340b60","modified":1683276457418},{"_id":"themes/cards/scripts/events/index.js","hash":"40cf26344fbe80acaf55a5d8d28a1d8e4162a1eb","modified":1683276457452},{"_id":"themes/cards/scripts/generators/local-search.js","hash":"78ad762ea3a718c54463a59726eb79f053c0ab26","modified":1683276457453},{"_id":"themes/cards/scripts/filters/lazyload.js","hash":"4932556ad86e80251138225ebf9eaa71edfad84e","modified":1683276457453},{"_id":"themes/cards/scripts/tags/fold.js","hash":"d2527e7cf4e7b3bafdc186cb3a44210c35c466bf","modified":1683276457453},{"_id":"themes/cards/scripts/tags/note.js","hash":"bfaff1643538566258e52a4c80c71d961396f734","modified":1683276457454},{"_id":"themes/cards/dist/js/b2t.min.js","hash":"2c3e85a87c6f002330786b495179f65475757180","modified":1683276457409},{"_id":"themes/cards/dist/js/b2t.js","hash":"eb649923e48664e8315217338ea05421636162f0","modified":1683276457409},{"_id":"themes/cards/dist/js/darkmode.js","hash":"1bf5d57bced89da8cc3f776c8dae0435c8430ca6","modified":1683276457410},{"_id":"themes/cards/dist/js/darkmode.min.js","hash":"28f8e637e19b91f1b26fee8d70ff0c24e3e0a4c2","modified":1683276457410},{"_id":"themes/cards/dist/js/local-search.js","hash":"9815aa9b28ac4cdd80dcb6c025574a22af510e09","modified":1683276457410},{"_id":"themes/cards/dist/js/local-search.min.js","hash":"144d2ee795a87bf7869479484976d71cce1586fd","modified":1683276457411},{"_id":"themes/cards/source/js/b2t.js","hash":"eb649923e48664e8315217338ea05421636162f0","modified":1683276457496},{"_id":"themes/cards/source/js/local-search.js","hash":"9815aa9b28ac4cdd80dcb6c025574a22af510e09","modified":1683276457497},{"_id":"themes/cards/source/js/darkmode.js","hash":"1bf5d57bced89da8cc3f776c8dae0435c8430ca6","modified":1683276457496},{"_id":"themes/cards/layout/_plugins/artitalk/main.ejs","hash":"30d6539ea3ddd4bff0a46815f1cb95bbb3ba52fb","modified":1683276457429},{"_id":"themes/cards/layout/_plugins/artitalk/source.ejs","hash":"0d4a4b8c2f161e94c5c8e376fd4c1241348f4c6e","modified":1683276457429},{"_id":"themes/cards/layout/_plugins/analytics/index.ejs","hash":"ba5c31f7867ea46365735db28362d9266d6fa42a","modified":1683276457428},{"_id":"themes/cards/layout/_plugins/back_to_top/main.ejs","hash":"5839783e22ebb0ae792f89272953438285401738","modified":1683276457430},{"_id":"themes/cards/layout/_plugins/back_to_top/source.ejs","hash":"930b6ae1bbe76a8e68c0b5bdaeb5aea641e45a22","modified":1683276457430},{"_id":"themes/cards/layout/_plugins/comments/placeholder.ejs","hash":"0b271c989752143cb993b1d749a67ddcafe1c759","modified":1683276457437},{"_id":"themes/cards/layout/_plugins/darkmode/main.ejs","hash":"7021de51e4af0337cd852d569e45143c639a592f","modified":1683276457440},{"_id":"themes/cards/layout/_plugins/darkmode/source.ejs","hash":"57446551fb6d06f0a5c4ca809da3b8cfe142bd2e","modified":1683276457440},{"_id":"themes/cards/layout/_plugins/fancybox/source.ejs","hash":"67e5f66f93727a1e6fec36baac1fe61f6d113b7d","modified":1683276457440},{"_id":"themes/cards/layout/_plugins/lazyload/source.ejs","hash":"93002195936ff623cade3e200b02aff7e502514f","modified":1683276457442},{"_id":"themes/cards/layout/_plugins/statistics/index.ejs","hash":"8ce999fe1c8c8c7cad2a9d84193122e5f60f8647","modified":1683276457446},{"_id":"themes/cards/layout/_plugins/mermaid/source.ejs","hash":"24a1c1f932d279b531bfc58575c0ecf180efac19","modified":1683276457444},{"_id":"themes/cards/layout/_partial/head/custom.ejs","hash":"dc2a727335ed53e200383994a1ed22ae12e1b93a","modified":1683276457419},{"_id":"themes/cards/layout/_partial/head/icon.ejs","hash":"a6889681b5d98d44c63c0f5619eb6e92648486b1","modified":1683276457419},{"_id":"themes/cards/layout/_partial/head/index.ejs","hash":"0253805cda9b38c061fc6c8ed93df2cfcc45f19d","modified":1683276457420},{"_id":"themes/cards/layout/_partial/head/meta.ejs","hash":"d717e03f3d9dd0160418534c18c8d68834ffab92","modified":1683276457420},{"_id":"themes/cards/layout/_partial/head/opengraph.ejs","hash":"9bec7b194f3b1a0913e3fd7019e782ad85ce9222","modified":1683276457421},{"_id":"themes/cards/layout/_partial/head/style.ejs","hash":"8369a9ab55b57c15bdecbe0481b1284e9459fb4a","modified":1683276457421},{"_id":"themes/cards/layout/_partial/scripts/custom.ejs","hash":"deafcc978d2b08e46b23e185bde09db719ae2cda","modified":1683276457423},{"_id":"themes/cards/layout/_partial/scripts/index.ejs","hash":"63bfcb832ce7f0d1af3f4f9f4115e25bada9e38e","modified":1683276457423},{"_id":"themes/cards/layout/_partial/post/post-content.ejs","hash":"4148b156d53a5194c5cf2282c51d8e3df60a971d","modified":1683276457422},{"_id":"themes/cards/layout/_partial/post/post-entry.ejs","hash":"b618327f809757b1769a899edcd3ddf4cdb7937e","modified":1683276457422},{"_id":"themes/cards/layout/_partial/post/post-list.ejs","hash":"e6d9e02d40afdafbef2ea3cf4ecb13ca5e64d2ef","modified":1683276457422},{"_id":"themes/cards/layout/_partial/source/cover.ejs","hash":"a7df7811c3964dbd8b82ec121881d7b82a5d9238","modified":1683276457424},{"_id":"themes/cards/layout/_partial/source/footer.ejs","hash":"060a67a90a9697dc9b35fb10e18e36dc190f2fb9","modified":1683276457424},{"_id":"themes/cards/layout/_partial/source/header.ejs","hash":"82a333ef02cc7fd518c682fff9b09d5714f18aad","modified":1683276457424},{"_id":"themes/cards/scripts/events/lib/config.js","hash":"83e70857ca781c4812018f9e1e36cd368a9a3ec4","modified":1683276457452},{"_id":"themes/cards/dist/css/style/dark.css","hash":"7fcdbe1639ac2827c845237544e8ad9dae0c4753","modified":1683276457407},{"_id":"themes/cards/dist/css/style/dark.min.css","hash":"9ae7de18ddd35d07c5c33b1e6fe115865fb660ea","modified":1683276457407},{"_id":"themes/cards/dist/css/style/main.min.css","hash":"ed09d0f226b0d6e60554ea8e5127b7a1c8fa0b4e","modified":1683276457408},{"_id":"themes/cards/dist/css/style/main.css","hash":"73e3a52d2d1a84463f0ce0393d8431cb7c2ba688","modified":1683276457408},{"_id":"themes/cards/dist/css/highlight/a11y-dark.css","hash":"6d0c9b42bb12c36095fb765daeae680f6264dc3a","modified":1683276457331},{"_id":"themes/cards/dist/css/highlight/a11y-dark.min.css","hash":"40b0c7bda4c60881c2d1f96f3cb7063c1f8c1950","modified":1683276457331},{"_id":"themes/cards/dist/css/highlight/a11y-light.css","hash":"96010219f371f28085e1f222aa1a7eb001805bcc","modified":1683276457332},{"_id":"themes/cards/dist/css/highlight/agate.css","hash":"a2e0c77549f832217cc1d70bf23c033dd007acdc","modified":1683276457332},{"_id":"themes/cards/dist/css/highlight/a11y-light.min.css","hash":"28e3e98637c6572a43fb605b3234990831ab443a","modified":1683276457332},{"_id":"themes/cards/dist/css/highlight/agate.min.css","hash":"764c57e156be6b006d0765b585e9407f483a0ea1","modified":1683276457333},{"_id":"themes/cards/dist/css/highlight/an-old-hope.css","hash":"94c46eea4ab15cb0f093361bb3c4279cac5f1fe1","modified":1683276457333},{"_id":"themes/cards/dist/css/highlight/an-old-hope.min.css","hash":"99d375b181ab151d518ec280fbd8aa44e3a466f8","modified":1683276457333},{"_id":"themes/cards/dist/css/highlight/androidstudio.css","hash":"0deff643b52a52605b78d54a081707d39df03bed","modified":1683276457334},{"_id":"themes/cards/dist/css/highlight/androidstudio.min.css","hash":"b69593376818a54b9f0f7d83af2e4747b94df02f","modified":1683276457334},{"_id":"themes/cards/dist/css/highlight/arduino-light.css","hash":"34643df1a21951859eef3182a6e771352d9b07fa","modified":1683276457335},{"_id":"themes/cards/dist/css/highlight/arduino-light.min.css","hash":"e88e018876e5e25736d383fee2012e090f2b6320","modified":1683276457335},{"_id":"themes/cards/dist/css/highlight/arta.min.css","hash":"ebbccada11309190f004a1608ca199a45593f061","modified":1683276457336},{"_id":"themes/cards/dist/css/highlight/ascetic.css","hash":"23edee489d7d42ac15e94f2c0df8af9e1bbdecf7","modified":1683276457336},{"_id":"themes/cards/dist/css/highlight/arta.css","hash":"84b10a804a198e9f3010971bc7cfaabbf4299d75","modified":1683276457335},{"_id":"themes/cards/dist/css/highlight/ascetic.min.css","hash":"ddd15ef497ace9672ae3702809cee18b21585a96","modified":1683276457336},{"_id":"themes/cards/dist/css/highlight/atelier-cave-dark.css","hash":"4a7e94f97c73bdb807cb3b3fde8cb3ebf9fabb9c","modified":1683276457337},{"_id":"themes/cards/dist/css/highlight/atelier-cave-dark.min.css","hash":"e1b928300ec193bdd8b98cacd4641a25722af128","modified":1683276457337},{"_id":"themes/cards/dist/css/highlight/atelier-cave-light.css","hash":"ff964bba2eb5a4281d4f273f1af33c7b7cba720f","modified":1683276457338},{"_id":"themes/cards/dist/css/highlight/atelier-cave-light.min.css","hash":"d3d3a7eb8b36ddaf980cfea94a95f2830496675e","modified":1683276457338},{"_id":"themes/cards/dist/css/highlight/atelier-dune-dark.css","hash":"f6769c7b68f938059ec7257a8f07aa214d9569a3","modified":1683276457339},{"_id":"themes/cards/dist/css/highlight/atelier-dune-dark.min.css","hash":"6a205b25da26fb954a59f8bb6dfd1013b7aaefc4","modified":1683276457339},{"_id":"themes/cards/dist/css/highlight/atelier-dune-light.css","hash":"e54adb3a7061bb9c40398d15b4166f94b13edc6a","modified":1683276457340},{"_id":"themes/cards/dist/css/highlight/atelier-dune-light.min.css","hash":"4671ef6eb73d6500cbabb212074a6441b523e9d3","modified":1683276457340},{"_id":"themes/cards/dist/css/highlight/atelier-estuary-dark.css","hash":"23cb99fb223dd7d3c36ab12a1e2e8c9801d87f6b","modified":1683276457341},{"_id":"themes/cards/dist/css/highlight/atelier-estuary-dark.min.css","hash":"a9a111ae9d5f8d2b8f93d21c5eca2ec5cb7094e7","modified":1683276457341},{"_id":"themes/cards/dist/css/highlight/atelier-estuary-light.css","hash":"711dfeb0edbe6f57c570367470b6ab907cf46cf1","modified":1683276457341},{"_id":"themes/cards/dist/css/highlight/atelier-estuary-light.min.css","hash":"67feae44aa8d8a2f613a654491292f26e69cd57a","modified":1683276457342},{"_id":"themes/cards/dist/css/highlight/atelier-forest-dark.css","hash":"2e0a7cdcca2a1d2c4b3e2e8a4249f50cfe59410a","modified":1683276457342},{"_id":"themes/cards/dist/css/highlight/atelier-forest-dark.min.css","hash":"e2a58973042e6eae0a1a92ebb88aed20cd10e4d2","modified":1683276457343},{"_id":"themes/cards/dist/css/highlight/atelier-forest-light.css","hash":"1b76cb6fe52cb4e505ededdcb8b0b8981a9002ed","modified":1683276457343},{"_id":"themes/cards/dist/css/highlight/atelier-forest-light.min.css","hash":"7f12c2cee603c7b965ff21bab54eb5f1338d324f","modified":1683276457343},{"_id":"themes/cards/dist/css/highlight/atelier-heath-dark.css","hash":"ede696513d4997a143e479d7c09cd89749c99933","modified":1683276457344},{"_id":"themes/cards/dist/css/highlight/atelier-heath-dark.min.css","hash":"f5bf201ec4f83c2dea6b8e127816b8b7fe212109","modified":1683276457344},{"_id":"themes/cards/dist/css/highlight/atelier-heath-light.css","hash":"0e85bb6e24f9f2cc1b00a488be3d83e55fcd47b3","modified":1683276457345},{"_id":"themes/cards/dist/css/highlight/atelier-heath-light.min.css","hash":"a20933b74b993127ad69b8b1a24aa256a66a84e4","modified":1683276457345},{"_id":"themes/cards/dist/css/highlight/atelier-lakeside-dark.css","hash":"58e579c0121eedeead5baf31ecb3213b592b019f","modified":1683276457345},{"_id":"themes/cards/dist/css/highlight/atelier-lakeside-dark.min.css","hash":"99c11b68d49c31d4fd0e996affef0995a38ef634","modified":1683276457345},{"_id":"themes/cards/dist/css/highlight/atelier-lakeside-light.css","hash":"25934f2bfe7f71282495569f2173b172f04dc35e","modified":1683276457346},{"_id":"themes/cards/dist/css/highlight/atelier-lakeside-light.min.css","hash":"aaa39ce9a1a309f5ffe29d1aa3e2f45b786ec7c3","modified":1683276457346},{"_id":"themes/cards/dist/css/highlight/atelier-plateau-dark.css","hash":"22cb142ef6f6f4f8687214e15729d6b704bf2b0c","modified":1683276457347},{"_id":"themes/cards/dist/css/highlight/atelier-plateau-dark.min.css","hash":"25b9fc4c296d45b3d3552025664967ec024eb276","modified":1683276457347},{"_id":"themes/cards/dist/css/highlight/atelier-plateau-light.css","hash":"0455d731fb3af3fee0cc489860528fb4919c69ca","modified":1683276457347},{"_id":"themes/cards/dist/css/highlight/atelier-plateau-light.min.css","hash":"f1ae9b640905c36f69f544fcf63dbef2d9eb9fe5","modified":1683276457347},{"_id":"themes/cards/dist/css/highlight/atelier-savanna-dark.css","hash":"c686abc9c55ec430cae77d7da9e5ad90c1f593e8","modified":1683276457348},{"_id":"themes/cards/dist/css/highlight/atelier-savanna-light.css","hash":"b519a41e09b5449f03520b043443652b9ee5dc91","modified":1683276457348},{"_id":"themes/cards/dist/css/highlight/atelier-savanna-dark.min.css","hash":"3e5576e115e28a1b1b33c7ae4c83eda0019219dd","modified":1683276457348},{"_id":"themes/cards/dist/css/highlight/atelier-savanna-light.min.css","hash":"ce32befce7705743c05fea9273f36a07d2c5df7c","modified":1683276457349},{"_id":"themes/cards/dist/css/highlight/atelier-seaside-dark.min.css","hash":"09d70d157050f2c107ec9769429f2ec0dc9f5242","modified":1683276457349},{"_id":"themes/cards/dist/css/highlight/atelier-seaside-dark.css","hash":"a8f0182bff79292ba8ab6c65c562a6692333891d","modified":1683276457349},{"_id":"themes/cards/dist/css/highlight/atelier-seaside-light.css","hash":"0e88d434a404bb1f2c84ab935342c2f4f3901a28","modified":1683276457349},{"_id":"themes/cards/dist/css/highlight/atelier-seaside-light.min.css","hash":"042524c2defd135444cae1ca4d4c4b6e1a605386","modified":1683276457350},{"_id":"themes/cards/dist/css/highlight/atelier-sulphurpool-dark.css","hash":"d56391073d8ea82dc91bdb461c83631a47cca82f","modified":1683276457351},{"_id":"themes/cards/dist/css/highlight/atelier-sulphurpool-dark.min.css","hash":"05fed1e1aaa86634179670bd28f5436e8ee0a548","modified":1683276457351},{"_id":"themes/cards/dist/css/highlight/atelier-sulphurpool-light.css","hash":"f06168bf8e89838c31910697a1f637b30099986f","modified":1683276457351},{"_id":"themes/cards/dist/css/highlight/atelier-sulphurpool-light.min.css","hash":"5ff52ca529ba2ccffffb4e3bf6f9e956a777e00b","modified":1683276457352},{"_id":"themes/cards/dist/css/highlight/atom-one-dark-reasonable.css","hash":"e86ca6ffcdb5371eba9e99e88d7ddb2412950aa1","modified":1683276457352},{"_id":"themes/cards/dist/css/highlight/atom-one-dark-reasonable.min.css","hash":"a6781cb9ece84e59a0bdc083b8cbd90871cfb310","modified":1683276457353},{"_id":"themes/cards/dist/css/highlight/atom-one-dark.css","hash":"031c3c1e59406e0658e7f1197fe6d6a5029c3055","modified":1683276457353},{"_id":"themes/cards/dist/css/highlight/atom-one-dark.min.css","hash":"581d6ef6b41cd5668bebe21fd7051f97a167d094","modified":1683276457353},{"_id":"themes/cards/dist/css/highlight/atom-one-light.css","hash":"c206ead3be5954f4c125311217d8e250edf6e63c","modified":1683276457354},{"_id":"themes/cards/dist/css/highlight/atom-one-light.min.css","hash":"04d57820fd994d5635923eb2e678de126212c136","modified":1683276457354},{"_id":"themes/cards/dist/css/highlight/brown-paper.css","hash":"05b31c40094f2912a370a12ce252b1f56a4b8f38","modified":1683276457355},{"_id":"themes/cards/dist/css/highlight/brown-paper.min.css","hash":"99f7d36749a121e88eb221f49003e3b470572f6d","modified":1683276457355},{"_id":"themes/cards/dist/css/highlight/codepen-embed.css","hash":"d3e1fec332a44f96817129e7ff4c9f23defcbd40","modified":1683276457356},{"_id":"themes/cards/dist/css/highlight/codepen-embed.min.css","hash":"3396d764a9415b6e7ccc03135f3b86382718ba91","modified":1683276457356},{"_id":"themes/cards/dist/css/highlight/color-brewer.css","hash":"1c952672bafab7dff6da2354741e813cc045d8d7","modified":1683276457356},{"_id":"themes/cards/dist/css/highlight/color-brewer.min.css","hash":"dda972c83807b4dcd3e56e9915257b783d438ee6","modified":1683276457357},{"_id":"themes/cards/dist/css/highlight/darcula.css","hash":"5a8a0f2b61c9c935d92d34ef38b989805a6e978e","modified":1683276457357},{"_id":"themes/cards/dist/css/highlight/darcula.min.css","hash":"e4ad74ba9a582397c7e2ad4f1a9ad4c014f08174","modified":1683276457358},{"_id":"themes/cards/dist/css/highlight/dark.css","hash":"cd37c30905f983490a7f0d4647a11171f483f812","modified":1683276457358},{"_id":"themes/cards/dist/css/highlight/dark.min.css","hash":"18f81a3b179647947e889277fb9bb68c09174a1a","modified":1683276457358},{"_id":"themes/cards/dist/css/highlight/default.css","hash":"daab0ef2a4a5e7c856209bcc35de1dbff9665d22","modified":1683276457359},{"_id":"themes/cards/dist/css/highlight/default.min.css","hash":"895ab6c9bcce7de25a512eb93f5ad41f6d65013e","modified":1683276457359},{"_id":"themes/cards/dist/css/highlight/docco.css","hash":"a8fc483604b2cab5ffe166bb598e922024f79014","modified":1683276457360},{"_id":"themes/cards/dist/css/highlight/docco.min.css","hash":"7c67745efeb484c960f40dbe1af1aa7dcfd1c100","modified":1683276457360},{"_id":"themes/cards/dist/css/highlight/dracula.css","hash":"83cb7632a977d99c40596ffe366c171f7a5c15e2","modified":1683276457361},{"_id":"themes/cards/dist/css/highlight/dracula.min.css","hash":"4f3e71043c03bd15fc09e4077a6f2c6c1e90c48b","modified":1683276457361},{"_id":"themes/cards/dist/css/highlight/far.css","hash":"9a2331bd7def5bb1ef35c2575ba5ea1cccab8acf","modified":1683276457362},{"_id":"themes/cards/dist/css/highlight/far.min.css","hash":"33a589d2b51ae38951868a3ed58992199165304e","modified":1683276457362},{"_id":"themes/cards/dist/css/highlight/foundation.css","hash":"4f04dcb43a3144ae0c22c82d971eef24c48363a0","modified":1683276457362},{"_id":"themes/cards/dist/css/highlight/foundation.min.css","hash":"112f071f95b7f25be00a720b96dab8d09627dde9","modified":1683276457363},{"_id":"themes/cards/dist/css/highlight/github-gist.css","hash":"23fc125b60162b14781d356ce84c096c0212f1a3","modified":1683276457363},{"_id":"themes/cards/dist/css/highlight/github-gist.min.css","hash":"0430d1b9ab8f3b44b0c02cd22637ea15d425471c","modified":1683276457363},{"_id":"themes/cards/dist/css/highlight/github.css","hash":"29c4f2ac5fadf5146021eefb44984ac08e9e9688","modified":1683276457364},{"_id":"themes/cards/dist/css/highlight/github.min.css","hash":"6c6e169bdf1ac653caee560de32242a76d05b9e7","modified":1683276457364},{"_id":"themes/cards/dist/css/highlight/gml.css","hash":"fee6d7a0e8d8cbbfb147e9af2812808f9853dd71","modified":1683276457365},{"_id":"themes/cards/dist/css/highlight/gml.min.css","hash":"50fceedb9aa818de0b635ea9b9126d3b815178db","modified":1683276457365},{"_id":"themes/cards/dist/css/highlight/googlecode.css","hash":"7162f4d01403326754b0ec13cf1b67dbd69fb576","modified":1683276457365},{"_id":"themes/cards/dist/css/highlight/googlecode.min.css","hash":"8c727d57d29fa9f846ca21a3b08c4e381c96df9e","modified":1683276457366},{"_id":"themes/cards/dist/css/highlight/gradient-dark.css","hash":"5b59633a52e52151686a2bf6aa04ec4324f3d03e","modified":1683276457366},{"_id":"themes/cards/dist/css/highlight/gradient-dark.min.css","hash":"d474ac5378a2f94879af8432ca7e559cf47124cb","modified":1683276457367},{"_id":"themes/cards/dist/css/highlight/grayscale.css","hash":"e71b26a8c2f0c675598552551c1a6ffa9790a5d0","modified":1683276457367},{"_id":"themes/cards/dist/css/highlight/grayscale.min.css","hash":"62e5aa352c67f6517334ef1a5623f7d0955a17de","modified":1683276457367},{"_id":"themes/cards/dist/css/highlight/gruvbox-dark.min.css","hash":"a953e586545e901a7ea35fb36968b8f1168c4ffb","modified":1683276457368},{"_id":"themes/cards/dist/css/highlight/gruvbox-dark.css","hash":"79b9188de6f9806b986a6847b736898ddee09441","modified":1683276457368},{"_id":"themes/cards/dist/css/highlight/gruvbox-light.min.css","hash":"2e18719fbbaa6e595d6edf46d8f4aae059f4f00b","modified":1683276457369},{"_id":"themes/cards/dist/css/highlight/gruvbox-light.css","hash":"363141bbcb1dd986c69bc356f1b5e195c46a1a44","modified":1683276457369},{"_id":"themes/cards/dist/css/highlight/hopscotch.css","hash":"13a20a61be2c23166d2adc34a0fcd11ffb967073","modified":1683276457369},{"_id":"themes/cards/dist/css/highlight/hopscotch.min.css","hash":"c380f5c4a15082fe68f59b162bc7e0b2b9ddf1af","modified":1683276457370},{"_id":"themes/cards/dist/css/highlight/hybrid.css","hash":"61212f01a83ba84dc1df0dfd48f25595ce08e0fb","modified":1683276457370},{"_id":"themes/cards/dist/css/highlight/hybrid.min.css","hash":"49161be801ad2bdf30878e0c6cf90e115e274ea9","modified":1683276457371},{"_id":"themes/cards/dist/css/highlight/idea.css","hash":"f75a28d7216218341a8319b2a267f5781ae98397","modified":1683276457371},{"_id":"themes/cards/dist/css/highlight/idea.min.css","hash":"751978e0af550e75f03fe1043261b604ca6532b2","modified":1683276457371},{"_id":"themes/cards/dist/css/highlight/ir-black.css","hash":"0d7d59283979b9fc3b6204973b3a344264bfda47","modified":1683276457372},{"_id":"themes/cards/dist/css/highlight/ir-black.min.css","hash":"c7780bf7aaa0dd75c33af5d7b46ebcb974a8cc99","modified":1683276457372},{"_id":"themes/cards/dist/css/highlight/isbl-editor-dark.css","hash":"3c742bdc0fad6cae97bdf30dae7f36d42f9758d9","modified":1683276457373},{"_id":"themes/cards/dist/css/highlight/isbl-editor-dark.min.css","hash":"147a63e78f9770927d98a2311bcf655d4ebb0490","modified":1683276457373},{"_id":"themes/cards/dist/css/highlight/isbl-editor-light.css","hash":"0ca0cc52b5536788e1d898fa3c9256b652d09ce4","modified":1683276457373},{"_id":"themes/cards/dist/css/highlight/isbl-editor-light.min.css","hash":"f382aac50e4761d86abd60d920e4dea6ac5cabde","modified":1683276457373},{"_id":"themes/cards/dist/css/highlight/kimbie.dark.css","hash":"61bd80ed7c41b5122d543620784aadf4e44d2b8e","modified":1683276457374},{"_id":"themes/cards/dist/css/highlight/kimbie.dark.min.css","hash":"2e2937458e07713886ac9ad1da58214fc644f3d8","modified":1683276457374},{"_id":"themes/cards/dist/css/highlight/kimbie.light.css","hash":"a254e40ae09f0b639d00cbd7e99f90469b53de41","modified":1683276457374},{"_id":"themes/cards/dist/css/highlight/kimbie.light.min.css","hash":"ed658a41725be2567c3bf35912d4546effb08b82","modified":1683276457375},{"_id":"themes/cards/dist/css/highlight/lightfair.css","hash":"b00d0919e5370462bb4a490493750b8b4c17ff03","modified":1683276457375},{"_id":"themes/cards/dist/css/highlight/lightfair.min.css","hash":"00d2642f34f83e29d72ef7ef6f1a8d4e54ee9e31","modified":1683276457376},{"_id":"themes/cards/dist/css/highlight/lioshi.css","hash":"48459e415a1c5c9e5c5ccdaa1de16b71abf92891","modified":1683276457376},{"_id":"themes/cards/dist/css/highlight/lioshi.min.css","hash":"10d7ba3da83e3796e8beadf4eab75ee5f50b6e26","modified":1683276457377},{"_id":"themes/cards/dist/css/highlight/magula.css","hash":"3297dd14312ea8c36f1e4602c9516f414077055a","modified":1683276457377},{"_id":"themes/cards/dist/css/highlight/magula.min.css","hash":"98dd8b7a3cf67198b3370d015fc3471f33af6475","modified":1683276457378},{"_id":"themes/cards/dist/css/highlight/mono-blue.css","hash":"d684208c3fc2e3724421ad342d6fc15875f23fc5","modified":1683276457378},{"_id":"themes/cards/dist/css/highlight/mono-blue.min.css","hash":"e2cd69eecc24a8a9bd4620a9a3321eda27295543","modified":1683276457378},{"_id":"themes/cards/dist/css/highlight/monokai-sublime.css","hash":"a0742650bb27f05d1d9572decaa0bb931f9bead3","modified":1683276457379},{"_id":"themes/cards/dist/css/highlight/monokai-sublime.min.css","hash":"a33702e8c2eed2d6123e60dcd936fb62201ce199","modified":1683276457379},{"_id":"themes/cards/dist/css/highlight/monokai.css","hash":"4598a4e47a74a650eab69fee0eebfe8efee7d5a6","modified":1683276457380},{"_id":"themes/cards/dist/css/highlight/monokai.min.css","hash":"cb59c32c4cfac1b01937d738751062fe0fa5b680","modified":1683276457380},{"_id":"themes/cards/dist/css/highlight/night-owl.css","hash":"2f5c43199055deb5966ca5412c7a9a39f2c68b88","modified":1683276457381},{"_id":"themes/cards/dist/css/highlight/night-owl.min.css","hash":"23c8fa03bbb97adfce248d6281cb4525a15ea2e8","modified":1683276457381},{"_id":"themes/cards/dist/css/highlight/nnfx-dark.css","hash":"0328bdb2744dc5cf28e700e0e6ba23777ad701ba","modified":1683276457382},{"_id":"themes/cards/dist/css/highlight/nnfx-dark.min.css","hash":"7985c0c51fad2d2b259be75fa6d28ba7757375ce","modified":1683276457382},{"_id":"themes/cards/dist/css/highlight/nnfx.css","hash":"da49d999c92643a41894fe0265cc8f155ad0842f","modified":1683276457383},{"_id":"themes/cards/dist/css/highlight/nnfx.min.css","hash":"dac3961335b392eaf9dc21b04205bb9de8950766","modified":1683276457383},{"_id":"themes/cards/dist/css/highlight/nord.css","hash":"82148093d2954ab685a8e82602631b551a8777b5","modified":1683276457384},{"_id":"themes/cards/dist/css/highlight/nord.min.css","hash":"6f8ee3e69561ac63f0167a9fd59bd7869bb68789","modified":1683276457385},{"_id":"themes/cards/dist/css/highlight/obsidian.css","hash":"48890593dd858ed8d47b40e34487edf0899ece35","modified":1683276457385},{"_id":"themes/cards/dist/css/highlight/obsidian.min.css","hash":"b5556564dff148dcfab690bd5bd21d98688649b4","modified":1683276457386},{"_id":"themes/cards/dist/css/highlight/ocean.css","hash":"21472b75fd4eb1810764fdc2704522fe249877ca","modified":1683276457387},{"_id":"themes/cards/dist/css/highlight/ocean.min.css","hash":"aebe05218bc97c12f5d211d172582fd482985884","modified":1683276457387},{"_id":"themes/cards/dist/css/highlight/paraiso-dark.css","hash":"3d553a29acc72cd0f5db4ad9c70d755d481b0687","modified":1683276457388},{"_id":"themes/cards/dist/css/highlight/paraiso-dark.min.css","hash":"69ccc87370e85839229315f4987872b00a6f9134","modified":1683276457388},{"_id":"themes/cards/dist/css/highlight/paraiso-light.css","hash":"568814940dfdd36118a7f8665656ac36b643190e","modified":1683276457388},{"_id":"themes/cards/dist/css/highlight/paraiso-light.min.css","hash":"a65b2daa9376612546e8ee7fe38b4e85dc7c944d","modified":1683276457389},{"_id":"themes/cards/dist/css/highlight/pojoaque.css","hash":"3a06d371ea4b1e097860e4a9747d817cd3c5e888","modified":1683276457389},{"_id":"themes/cards/dist/css/highlight/pojoaque.min.css","hash":"1e5444a824894fb2d3f0f1e1775e685f6dccb939","modified":1683276457389},{"_id":"themes/cards/dist/css/highlight/purebasic.css","hash":"2f578beb25d16c45ca0774519df3fe50f3c35760","modified":1683276457390},{"_id":"themes/cards/dist/css/highlight/purebasic.min.css","hash":"a5791683962744aa4cffba407859572692e97cbc","modified":1683276457390},{"_id":"themes/cards/dist/css/highlight/qtcreator_dark.css","hash":"f963aae29d81512550ff699a63b2f3a2439bf404","modified":1683276457390},{"_id":"themes/cards/dist/css/highlight/qtcreator_dark.min.css","hash":"aabb293ddeb3bfe059132fd28cc58794733bf65e","modified":1683276457391},{"_id":"themes/cards/dist/css/highlight/qtcreator_light.css","hash":"edef0e3036cf276b3f70bb4df55003f6a27e56e1","modified":1683276457391},{"_id":"themes/cards/dist/css/highlight/qtcreator_light.min.css","hash":"71d573a97fde751842c68e6c54a9b314d7acfec9","modified":1683276457392},{"_id":"themes/cards/dist/css/highlight/railscasts.css","hash":"2b8d2c1faadc51d312cb0bd7058c5431400c2924","modified":1683276457392},{"_id":"themes/cards/dist/css/highlight/railscasts.min.css","hash":"41b07df897e780e824ec79d01ea6b767bff3e2ef","modified":1683276457392},{"_id":"themes/cards/dist/css/highlight/rainbow.css","hash":"093bec82c2577df4d0d761dee30d5472c4f697f1","modified":1683276457393},{"_id":"themes/cards/dist/css/highlight/rainbow.min.css","hash":"431b95d219c210d57840956c9ff932e3e37007fc","modified":1683276457393},{"_id":"themes/cards/dist/css/highlight/routeros.css","hash":"170a0c7f80668f3012676bb29ef6cdcd098183e3","modified":1683276457393},{"_id":"themes/cards/dist/css/highlight/routeros.min.css","hash":"638caa230a3ca5cf795e004062c884956688a928","modified":1683276457394},{"_id":"themes/cards/dist/css/highlight/school-book.css","hash":"ebfec3f0e1f473593595c8146dcf79e0c445a8b3","modified":1683276457394},{"_id":"themes/cards/dist/css/highlight/school-book.min.css","hash":"11c644f05988be822170d0ab74284a68285306c6","modified":1683276457394},{"_id":"themes/cards/dist/css/highlight/shades-of-purple.css","hash":"41d8f8210d7b13bb1d31c0be2c10427954535b80","modified":1683276457395},{"_id":"themes/cards/dist/css/highlight/solarized-dark.css","hash":"a624f1a85e915db688949b648754a84b215efa72","modified":1683276457395},{"_id":"themes/cards/dist/css/highlight/solarized-dark.min.css","hash":"a045b653baa7ea0a2222fe08c64814fd23ecb4e4","modified":1683276457396},{"_id":"themes/cards/dist/css/highlight/solarized-light.css","hash":"3a8097995857f8557a1ab53db360175227a638cb","modified":1683276457396},{"_id":"themes/cards/dist/css/highlight/shades-of-purple.min.css","hash":"a22966ab0b1683fef53574996761569af8cfe57d","modified":1683276457395},{"_id":"themes/cards/dist/css/highlight/solarized-light.min.css","hash":"68ba2a4acd50d074d147f92f4f72f42a5474f6a6","modified":1683276457396},{"_id":"themes/cards/dist/css/highlight/srcery.css","hash":"c1634ac1680f6df5efc1fecb51a7912d46aceaa8","modified":1683276457397},{"_id":"themes/cards/dist/css/highlight/srcery.min.css","hash":"a66bba1ba24b4f98fe45900571fae95523f1be34","modified":1683276457397},{"_id":"themes/cards/dist/css/highlight/tomorrow-night-blue.css","hash":"873e26f5cb802d941f88d4e83f2695bf23e17401","modified":1683276457398},{"_id":"themes/cards/dist/css/highlight/sunburst.min.css","hash":"3d4069f9e4da371b9578e02cc31ffbf49df6d987","modified":1683276457398},{"_id":"themes/cards/dist/css/highlight/tomorrow-night-blue.min.css","hash":"8c71353470caa02e69d9e2414bfc5962b2daef0c","modified":1683276457398},{"_id":"themes/cards/dist/css/highlight/sunburst.css","hash":"57e3690fe439c511c2585869f2b8f4f62cb3535e","modified":1683276457397},{"_id":"themes/cards/dist/css/highlight/tomorrow-night-bright.css","hash":"d89269a86b0587c8011ea4940ebf90bd99d825bf","modified":1683276457399},{"_id":"themes/cards/dist/css/highlight/tomorrow-night-bright.min.css","hash":"4dd7a13c76f092e3d033ca26a93fc5a70a322393","modified":1683276457399},{"_id":"themes/cards/dist/css/highlight/tomorrow-night-eighties.min.css","hash":"883e7cd3d6ef2855938129c0b9745c27186ac911","modified":1683276457400},{"_id":"themes/cards/dist/css/highlight/tomorrow-night-eighties.css","hash":"217f8dd94f955b452d6055b3a3a802e9f2459f82","modified":1683276457399},{"_id":"themes/cards/dist/css/highlight/tomorrow-night.css","hash":"9012ab4e1d73ed9d71ef9c11ed69d82f70f746cc","modified":1683276457400},{"_id":"themes/cards/dist/css/highlight/tomorrow-night.min.css","hash":"02cec24011a69b81c0fe0c4d28a0403e0e9a4f0f","modified":1683276457401},{"_id":"themes/cards/dist/css/highlight/tomorrow.min.css","hash":"42babfa46c8206a098bbbc1d6b60e7d8ebae8f10","modified":1683276457401},{"_id":"themes/cards/dist/css/highlight/tomorrow.css","hash":"19c7cbb02b4486b3bc1e9cdda6fc77acb69f0b85","modified":1683276457401},{"_id":"themes/cards/dist/css/highlight/vs.css","hash":"0b06af7596e05b5d2928475fbb6902917ef3ed3f","modified":1683276457401},{"_id":"themes/cards/dist/css/highlight/vs.min.css","hash":"2241d358635fa32476f837dc2888bf1574d193f9","modified":1683276457402},{"_id":"themes/cards/dist/css/highlight/vs2015.css","hash":"401f8ccde362ac62a3b1b3bfe79299de16a665db","modified":1683276457403},{"_id":"themes/cards/dist/css/highlight/vs2015.min.css","hash":"cd5ea2acbec33239360aaab2b4dfdf1990ca30a4","modified":1683276457403},{"_id":"themes/cards/dist/css/highlight/xcode.css","hash":"e31ee8ee5e865909d89a06e776e4c95b084318a0","modified":1683276457404},{"_id":"themes/cards/dist/css/highlight/xcode.min.css","hash":"556d87bf9cfeef868a25f8d57b474227c3fe271d","modified":1683276457404},{"_id":"themes/cards/dist/css/highlight/xt256.css","hash":"63fde91354b505bc96fb6562f31397c6605a47d8","modified":1683276457405},{"_id":"themes/cards/dist/css/highlight/xt256.min.css","hash":"29002040d8bd1223c4fd22e43f29d017a15b0893","modified":1683276457405},{"_id":"themes/cards/dist/css/highlight/zenburn.css","hash":"4fb2d4fc4e3e17d1b8c191c4965bed15191bbb61","modified":1683276457406},{"_id":"themes/cards/dist/css/highlight/zenburn.min.css","hash":"88a5e59aa1e974d66c39f140be57b1695d6c6c00","modified":1683276457406},{"_id":"themes/cards/source/css/highlight/a11y-dark.css","hash":"6d0c9b42bb12c36095fb765daeae680f6264dc3a","modified":1683276457454},{"_id":"themes/cards/source/css/highlight/agate.css","hash":"a2e0c77549f832217cc1d70bf23c033dd007acdc","modified":1683276457455},{"_id":"themes/cards/source/css/highlight/an-old-hope.css","hash":"94c46eea4ab15cb0f093361bb3c4279cac5f1fe1","modified":1683276457455},{"_id":"themes/cards/source/css/highlight/a11y-light.css","hash":"96010219f371f28085e1f222aa1a7eb001805bcc","modified":1683276457455},{"_id":"themes/cards/source/css/highlight/androidstudio.css","hash":"0deff643b52a52605b78d54a081707d39df03bed","modified":1683276457456},{"_id":"themes/cards/source/css/highlight/arduino-light.css","hash":"34643df1a21951859eef3182a6e771352d9b07fa","modified":1683276457456},{"_id":"themes/cards/source/css/highlight/arta.css","hash":"84b10a804a198e9f3010971bc7cfaabbf4299d75","modified":1683276457456},{"_id":"themes/cards/source/css/highlight/atelier-cave-dark.css","hash":"4a7e94f97c73bdb807cb3b3fde8cb3ebf9fabb9c","modified":1683276457457},{"_id":"themes/cards/source/css/highlight/ascetic.css","hash":"23edee489d7d42ac15e94f2c0df8af9e1bbdecf7","modified":1683276457456},{"_id":"themes/cards/source/css/highlight/atelier-cave-light.css","hash":"ff964bba2eb5a4281d4f273f1af33c7b7cba720f","modified":1683276457457},{"_id":"themes/cards/source/css/highlight/atelier-dune-dark.css","hash":"f6769c7b68f938059ec7257a8f07aa214d9569a3","modified":1683276457457},{"_id":"themes/cards/source/css/highlight/atelier-dune-light.css","hash":"e54adb3a7061bb9c40398d15b4166f94b13edc6a","modified":1683276457457},{"_id":"themes/cards/source/css/highlight/atelier-estuary-dark.css","hash":"23cb99fb223dd7d3c36ab12a1e2e8c9801d87f6b","modified":1683276457458},{"_id":"themes/cards/source/css/highlight/atelier-estuary-light.css","hash":"711dfeb0edbe6f57c570367470b6ab907cf46cf1","modified":1683276457458},{"_id":"themes/cards/source/css/highlight/atelier-forest-dark.css","hash":"2e0a7cdcca2a1d2c4b3e2e8a4249f50cfe59410a","modified":1683276457458},{"_id":"themes/cards/source/css/highlight/atelier-heath-dark.css","hash":"ede696513d4997a143e479d7c09cd89749c99933","modified":1683276457459},{"_id":"themes/cards/source/css/highlight/atelier-forest-light.css","hash":"1b76cb6fe52cb4e505ededdcb8b0b8981a9002ed","modified":1683276457459},{"_id":"themes/cards/source/css/highlight/atelier-heath-light.css","hash":"0e85bb6e24f9f2cc1b00a488be3d83e55fcd47b3","modified":1683276457459},{"_id":"themes/cards/source/css/highlight/atelier-lakeside-dark.css","hash":"58e579c0121eedeead5baf31ecb3213b592b019f","modified":1683276457459},{"_id":"themes/cards/source/css/highlight/atelier-lakeside-light.css","hash":"25934f2bfe7f71282495569f2173b172f04dc35e","modified":1683276457460},{"_id":"themes/cards/source/css/highlight/atelier-plateau-dark.css","hash":"22cb142ef6f6f4f8687214e15729d6b704bf2b0c","modified":1683276457460},{"_id":"themes/cards/source/css/highlight/atelier-plateau-light.css","hash":"0455d731fb3af3fee0cc489860528fb4919c69ca","modified":1683276457460},{"_id":"themes/cards/source/css/highlight/atelier-savanna-dark.css","hash":"c686abc9c55ec430cae77d7da9e5ad90c1f593e8","modified":1683276457461},{"_id":"themes/cards/source/css/highlight/atelier-savanna-light.css","hash":"b519a41e09b5449f03520b043443652b9ee5dc91","modified":1683276457461},{"_id":"themes/cards/source/css/highlight/atelier-seaside-dark.css","hash":"a8f0182bff79292ba8ab6c65c562a6692333891d","modified":1683276457461},{"_id":"themes/cards/source/css/highlight/atelier-seaside-light.css","hash":"0e88d434a404bb1f2c84ab935342c2f4f3901a28","modified":1683276457461},{"_id":"themes/cards/source/css/highlight/atelier-sulphurpool-dark.css","hash":"d56391073d8ea82dc91bdb461c83631a47cca82f","modified":1683276457462},{"_id":"themes/cards/source/css/highlight/atelier-sulphurpool-light.css","hash":"f06168bf8e89838c31910697a1f637b30099986f","modified":1683276457462},{"_id":"themes/cards/source/css/highlight/atom-one-dark.css","hash":"031c3c1e59406e0658e7f1197fe6d6a5029c3055","modified":1683276457463},{"_id":"themes/cards/source/css/highlight/atom-one-dark-reasonable.css","hash":"e86ca6ffcdb5371eba9e99e88d7ddb2412950aa1","modified":1683276457462},{"_id":"themes/cards/source/css/highlight/atom-one-light.css","hash":"c206ead3be5954f4c125311217d8e250edf6e63c","modified":1683276457463},{"_id":"themes/cards/source/css/highlight/brown-paper.css","hash":"05b31c40094f2912a370a12ce252b1f56a4b8f38","modified":1683276457463},{"_id":"themes/cards/source/css/highlight/codepen-embed.css","hash":"d3e1fec332a44f96817129e7ff4c9f23defcbd40","modified":1683276457464},{"_id":"themes/cards/source/css/highlight/darcula.css","hash":"5a8a0f2b61c9c935d92d34ef38b989805a6e978e","modified":1683276457465},{"_id":"themes/cards/source/css/highlight/color-brewer.css","hash":"1c952672bafab7dff6da2354741e813cc045d8d7","modified":1683276457464},{"_id":"themes/cards/source/css/highlight/dark.css","hash":"cd37c30905f983490a7f0d4647a11171f483f812","modified":1683276457465},{"_id":"themes/cards/source/css/highlight/default.css","hash":"daab0ef2a4a5e7c856209bcc35de1dbff9665d22","modified":1683276457466},{"_id":"themes/cards/source/css/highlight/docco.css","hash":"a8fc483604b2cab5ffe166bb598e922024f79014","modified":1683276457466},{"_id":"themes/cards/source/css/highlight/dracula.css","hash":"83cb7632a977d99c40596ffe366c171f7a5c15e2","modified":1683276457467},{"_id":"themes/cards/source/css/highlight/far.css","hash":"9a2331bd7def5bb1ef35c2575ba5ea1cccab8acf","modified":1683276457467},{"_id":"themes/cards/source/css/highlight/foundation.css","hash":"4f04dcb43a3144ae0c22c82d971eef24c48363a0","modified":1683276457467},{"_id":"themes/cards/source/css/highlight/github-gist.css","hash":"23fc125b60162b14781d356ce84c096c0212f1a3","modified":1683276457468},{"_id":"themes/cards/source/css/highlight/github.css","hash":"29c4f2ac5fadf5146021eefb44984ac08e9e9688","modified":1683276457468},{"_id":"themes/cards/source/css/highlight/gml.css","hash":"fee6d7a0e8d8cbbfb147e9af2812808f9853dd71","modified":1683276457468},{"_id":"themes/cards/source/css/highlight/googlecode.css","hash":"7162f4d01403326754b0ec13cf1b67dbd69fb576","modified":1683276457469},{"_id":"themes/cards/source/css/highlight/gradient-dark.css","hash":"5b59633a52e52151686a2bf6aa04ec4324f3d03e","modified":1683276457469},{"_id":"themes/cards/source/css/highlight/grayscale.css","hash":"e71b26a8c2f0c675598552551c1a6ffa9790a5d0","modified":1683276457470},{"_id":"themes/cards/source/css/highlight/gruvbox-dark.css","hash":"79b9188de6f9806b986a6847b736898ddee09441","modified":1683276457470},{"_id":"themes/cards/source/css/highlight/gruvbox-light.css","hash":"363141bbcb1dd986c69bc356f1b5e195c46a1a44","modified":1683276457470},{"_id":"themes/cards/source/css/highlight/hopscotch.css","hash":"13a20a61be2c23166d2adc34a0fcd11ffb967073","modified":1683276457471},{"_id":"themes/cards/source/css/highlight/hybrid.css","hash":"8315bc3988bebb758771174b185cee950d27067f","modified":1683276457471},{"_id":"themes/cards/source/css/highlight/idea.css","hash":"f75a28d7216218341a8319b2a267f5781ae98397","modified":1683276457471},{"_id":"themes/cards/source/css/highlight/ir-black.css","hash":"0d7d59283979b9fc3b6204973b3a344264bfda47","modified":1683276457472},{"_id":"themes/cards/source/css/highlight/isbl-editor-dark.css","hash":"3c742bdc0fad6cae97bdf30dae7f36d42f9758d9","modified":1683276457472},{"_id":"themes/cards/source/css/highlight/kimbie.dark.css","hash":"61bd80ed7c41b5122d543620784aadf4e44d2b8e","modified":1683276457473},{"_id":"themes/cards/source/css/highlight/isbl-editor-light.css","hash":"0ca0cc52b5536788e1d898fa3c9256b652d09ce4","modified":1683276457472},{"_id":"themes/cards/source/css/highlight/kimbie.light.css","hash":"a254e40ae09f0b639d00cbd7e99f90469b53de41","modified":1683276457473},{"_id":"themes/cards/source/css/highlight/lightfair.css","hash":"b00d0919e5370462bb4a490493750b8b4c17ff03","modified":1683276457474},{"_id":"themes/cards/source/css/highlight/lioshi.css","hash":"48459e415a1c5c9e5c5ccdaa1de16b71abf92891","modified":1683276457474},{"_id":"themes/cards/source/css/highlight/magula.css","hash":"3297dd14312ea8c36f1e4602c9516f414077055a","modified":1683276457474},{"_id":"themes/cards/source/css/highlight/mono-blue.css","hash":"d684208c3fc2e3724421ad342d6fc15875f23fc5","modified":1683276457475},{"_id":"themes/cards/source/css/highlight/monokai-sublime.css","hash":"a0742650bb27f05d1d9572decaa0bb931f9bead3","modified":1683276457475},{"_id":"themes/cards/source/css/highlight/monokai.css","hash":"4598a4e47a74a650eab69fee0eebfe8efee7d5a6","modified":1683276457475},{"_id":"themes/cards/source/css/highlight/night-owl.css","hash":"2f5c43199055deb5966ca5412c7a9a39f2c68b88","modified":1683276457476},{"_id":"themes/cards/source/css/highlight/nnfx.css","hash":"da49d999c92643a41894fe0265cc8f155ad0842f","modified":1683276457476},{"_id":"themes/cards/source/css/highlight/nord.css","hash":"82148093d2954ab685a8e82602631b551a8777b5","modified":1683276457477},{"_id":"themes/cards/source/css/highlight/nnfx-dark.css","hash":"0328bdb2744dc5cf28e700e0e6ba23777ad701ba","modified":1683276457476},{"_id":"themes/cards/source/css/highlight/obsidian.css","hash":"48890593dd858ed8d47b40e34487edf0899ece35","modified":1683276457477},{"_id":"themes/cards/source/css/highlight/ocean.css","hash":"21472b75fd4eb1810764fdc2704522fe249877ca","modified":1683276457478},{"_id":"themes/cards/source/css/highlight/paraiso-dark.css","hash":"3d553a29acc72cd0f5db4ad9c70d755d481b0687","modified":1683276457478},{"_id":"themes/cards/source/css/highlight/paraiso-light.css","hash":"568814940dfdd36118a7f8665656ac36b643190e","modified":1683276457478},{"_id":"themes/cards/source/css/highlight/pojoaque.css","hash":"3a06d371ea4b1e097860e4a9747d817cd3c5e888","modified":1683276457479},{"_id":"themes/cards/source/css/highlight/purebasic.css","hash":"2f578beb25d16c45ca0774519df3fe50f3c35760","modified":1683276457479},{"_id":"themes/cards/source/css/highlight/qtcreator_light.css","hash":"edef0e3036cf276b3f70bb4df55003f6a27e56e1","modified":1683276457480},{"_id":"themes/cards/source/css/highlight/qtcreator_dark.css","hash":"f963aae29d81512550ff699a63b2f3a2439bf404","modified":1683276457479},{"_id":"themes/cards/source/css/highlight/railscasts.css","hash":"2b8d2c1faadc51d312cb0bd7058c5431400c2924","modified":1683276457480},{"_id":"themes/cards/source/css/highlight/rainbow.css","hash":"093bec82c2577df4d0d761dee30d5472c4f697f1","modified":1683276457481},{"_id":"themes/cards/source/css/highlight/routeros.css","hash":"170a0c7f80668f3012676bb29ef6cdcd098183e3","modified":1683276457481},{"_id":"themes/cards/source/css/highlight/school-book.css","hash":"ebfec3f0e1f473593595c8146dcf79e0c445a8b3","modified":1683276457481},{"_id":"themes/cards/source/css/highlight/shades-of-purple.css","hash":"41d8f8210d7b13bb1d31c0be2c10427954535b80","modified":1683276457482},{"_id":"themes/cards/source/css/highlight/solarized-dark.css","hash":"a624f1a85e915db688949b648754a84b215efa72","modified":1683276457482},{"_id":"themes/cards/source/css/highlight/solarized-light.css","hash":"3a8097995857f8557a1ab53db360175227a638cb","modified":1683276457483},{"_id":"themes/cards/source/css/highlight/srcery.css","hash":"c1634ac1680f6df5efc1fecb51a7912d46aceaa8","modified":1683276457483},{"_id":"themes/cards/source/css/highlight/sunburst.css","hash":"57e3690fe439c511c2585869f2b8f4f62cb3535e","modified":1683276457483},{"_id":"themes/cards/source/css/highlight/tomorrow-night-blue.css","hash":"873e26f5cb802d941f88d4e83f2695bf23e17401","modified":1683276457484},{"_id":"themes/cards/source/css/highlight/tomorrow-night-bright.css","hash":"d89269a86b0587c8011ea4940ebf90bd99d825bf","modified":1683276457484},{"_id":"themes/cards/source/css/highlight/tomorrow-night.css","hash":"9012ab4e1d73ed9d71ef9c11ed69d82f70f746cc","modified":1683276457485},{"_id":"themes/cards/source/css/highlight/tomorrow-night-eighties.css","hash":"217f8dd94f955b452d6055b3a3a802e9f2459f82","modified":1683276457484},{"_id":"themes/cards/source/css/highlight/tomorrow.css","hash":"19c7cbb02b4486b3bc1e9cdda6fc77acb69f0b85","modified":1683276457485},{"_id":"themes/cards/source/css/highlight/vs.css","hash":"0b06af7596e05b5d2928475fbb6902917ef3ed3f","modified":1683276457485},{"_id":"themes/cards/source/css/highlight/vs2015.css","hash":"401f8ccde362ac62a3b1b3bfe79299de16a665db","modified":1683276457486},{"_id":"themes/cards/source/css/highlight/xcode.css","hash":"e31ee8ee5e865909d89a06e776e4c95b084318a0","modified":1683276457486},{"_id":"themes/cards/source/css/highlight/xt256.css","hash":"63fde91354b505bc96fb6562f31397c6605a47d8","modified":1683276457486},{"_id":"themes/cards/source/css/highlight/zenburn.css","hash":"4fb2d4fc4e3e17d1b8c191c4965bed15191bbb61","modified":1683276457487},{"_id":"themes/cards/source/css/style/main.styl","hash":"876cda9328b25a4014170de50266366f80bb212e","modified":1683276457495},{"_id":"themes/cards/source/css/style/dark.styl","hash":"6731ca378962c5fd3ed926032536a234de619c5b","modified":1683276457494},{"_id":"themes/cards/layout/_plugins/analytics/baidu/source.ejs","hash":"4653783bc93968e9928405b9a4eba590e186cd76","modified":1683276457425},{"_id":"themes/cards/layout/_plugins/analytics/cloudflare/source.ejs","hash":"3185c2d9f1d8f02342f34d7a864c9cd555185cf7","modified":1683276457426},{"_id":"themes/cards/layout/_plugins/analytics/gtag/source.ejs","hash":"aad677471fb18522d4829e2db28db2331d7fdf0c","modified":1683276457427},{"_id":"themes/cards/layout/_plugins/analytics/umami/source.ejs","hash":"b44a220a31d685e381d9fca0823bc8768355b442","modified":1683276457428},{"_id":"themes/cards/layout/_plugins/analytics/google/source.ejs","hash":"e89b3a858a0ea81f9ccdf07c718435d2c40684ed","modified":1683276457427},{"_id":"themes/cards/layout/_plugins/analytics/cnzz/source.ejs","hash":"a207e907375471424ff21100222d2a3de9bed5c0","modified":1683276457426},{"_id":"themes/cards/layout/_plugins/comments/artalk/source.ejs","hash":"70e47301e29cbaa8d0182453022ae46762657aee","modified":1683276457431},{"_id":"themes/cards/layout/_plugins/comments/artalk/main.ejs","hash":"1f20d61bf6f937df61eb62558d4b3144ac82c05c","modified":1683276457431},{"_id":"themes/cards/layout/_plugins/comments/changyan/main.ejs","hash":"e024738374f0429d5ff37764a98002bb224d620c","modified":1683276457432},{"_id":"themes/cards/layout/_plugins/comments/changyan/source.ejs","hash":"67fc5c6828c1621939808f83ab028ca6410fe5e8","modified":1683276457432},{"_id":"themes/cards/layout/_plugins/comments/disqus/main.ejs","hash":"52a4f290055c14d1ba1fafd42bf616825814ca35","modified":1683276457432},{"_id":"themes/cards/layout/_plugins/comments/disqus/source.ejs","hash":"b3b758cb3b65441c6017896e6ab27de10090823e","modified":1683276457433},{"_id":"themes/cards/layout/_plugins/comments/disqusjs/main.ejs","hash":"889ad31a705b7c922a983512a42ef7648b94e52e","modified":1683276457433},{"_id":"themes/cards/layout/_plugins/comments/disqusjs/source.ejs","hash":"92e4bbdf2da29bd34beef057c328983f736af2c3","modified":1683276457433},{"_id":"themes/cards/layout/_plugins/comments/giscus/main.ejs","hash":"7058f62c76874397505ef3ad0c1dd79433306d3d","modified":1683276457434},{"_id":"themes/cards/layout/_plugins/comments/gitalk/main.ejs","hash":"9de1c8a5a56cd340499003b670addc2915355813","modified":1683276457434},{"_id":"themes/cards/layout/_plugins/comments/gitalk/source.ejs","hash":"e5556d741b0b937c0d12ec56df0e42010316aafe","modified":1683276457435},{"_id":"themes/cards/layout/_plugins/comments/gitment/source.ejs","hash":"1189c4d1ca9c1531118f7567104b450e0c7c43e5","modified":1683276457435},{"_id":"themes/cards/layout/_plugins/comments/gitment/main.ejs","hash":"901376b5450b6d99adaa7e2f9f0d5f4315a6eeaf","modified":1683276457435},{"_id":"themes/cards/layout/_plugins/comments/livere/main.ejs","hash":"4df2f3d12727007eb213a3a26abd327b6d8ed074","modified":1683276457436},{"_id":"themes/cards/layout/_plugins/comments/livere/source.ejs","hash":"9f72c08ed58dd71721079ad1453ce86f13a8c609","modified":1683276457436},{"_id":"themes/cards/layout/_plugins/comments/minivaline/main.ejs","hash":"2dffcca7cc6d2fc4792427a35be7778e5ee3fab2","modified":1683276457436},{"_id":"themes/cards/layout/_plugins/comments/minivaline/source.ejs","hash":"1acf20de61832c49ab388e70d2547762592e566e","modified":1683276457437},{"_id":"themes/cards/layout/_plugins/comments/twikoo/main.ejs","hash":"165890627b0c2bb83e69611d7dd43fd9604c747f","modified":1683276457437},{"_id":"themes/cards/layout/_plugins/comments/twikoo/source.ejs","hash":"17e4b2a3b5d976f4b0af7cac5a5fc9a0d6a99d97","modified":1683276457438},{"_id":"themes/cards/layout/_plugins/comments/valine/main.ejs","hash":"07082120a5b0e36966e8da61c03a21cc654c1e77","modified":1683276457438},{"_id":"themes/cards/layout/_plugins/comments/valine/source.ejs","hash":"246740131d18f4cf1ef3f1ad7abe0a7d413b7e06","modified":1683276457438},{"_id":"themes/cards/layout/_plugins/comments/wildfire/main.ejs","hash":"658c1d353f77a5dcf6cefa260aff3cdab9303f4e","modified":1683276457439},{"_id":"themes/cards/layout/_plugins/comments/wildfire/source.ejs","hash":"1b3093dcb10a0ef55a1880d6e6f9fb2e36716913","modified":1683276457439},{"_id":"themes/cards/layout/_plugins/math/katex/source.ejs","hash":"083c289fdc4227f1ced5f9d54aff178de8a6cfff","modified":1683276457443},{"_id":"themes/cards/layout/_plugins/math/mathjax/source.ejs","hash":"6997e439947707cb4ebc9779f8a0ee8a522f538e","modified":1683276457443},{"_id":"themes/cards/layout/_plugins/search/local-search/main.ejs","hash":"68e0d7357b3db2c44151ee3cf073813b82fe6a21","modified":1683276457444},{"_id":"themes/cards/layout/_plugins/search/local-search/source.ejs","hash":"1d756d1dc1582333eedae4e3ce115803abe9dd6b","modified":1683276457445},{"_id":"themes/cards/layout/_plugins/highlight/highlight/source.ejs","hash":"d55dadb8cecf4370b92ef1cdd1c6c39499dbe0c9","modified":1683276457441},{"_id":"themes/cards/layout/_plugins/highlight/hljs/source.ejs","hash":"577d4d009579038a0ef2082a8b9c9d4459d52394","modified":1683276457441},{"_id":"themes/cards/layout/_plugins/highlight/prismjs/source.ejs","hash":"2705abb2bf79b919d9aed420061e74f9275da67b","modified":1683276457442},{"_id":"themes/cards/layout/_plugins/statistics/busuanzi/page.ejs","hash":"35ab3162f052c2070f9d61fc43aa450d47ed725d","modified":1683276457445},{"_id":"themes/cards/layout/_plugins/statistics/busuanzi/site.ejs","hash":"2b66c5abda002a8e1837ccd5e16924eff45f3d88","modified":1683276457446},{"_id":"themes/cards/layout/_plugins/statistics/busuanzi/source.ejs","hash":"fabb3ecec9adeefc43ad643f3285877db3e78f6d","modified":1683276457446},{"_id":"themes/cards/layout/_plugins/statistics/leancloud/page.ejs","hash":"afb11550886bde05066d685a5bc20886f8fe61f3","modified":1683276457446},{"_id":"themes/cards/layout/_plugins/statistics/leancloud/site.ejs","hash":"6854864a3e3bd9d5ff22a445799ce8cb4a6d0003","modified":1683276457447},{"_id":"themes/cards/layout/_plugins/statistics/leancloud/source.ejs","hash":"6170de0dd3c1d0a314db38889f3248b719f34723","modified":1683276457447},{"_id":"themes/cards/layout/_plugins/tag-plugins/note/source.ejs","hash":"c6170802843c5ede4bbf03f286c5760393a72ed6","modified":1683276457448},{"_id":"themes/cards/layout/_plugins/tag-plugins/fold/source.ejs","hash":"f2981b202a9e55b52709338957d34bdc5ca78cab","modified":1683276457448},{"_id":"themes/cards/source/css/style/_base/_defines.styl","hash":"d8fb879c23b10f8b986206dabe151efd19dfb3e7","modified":1683276457487},{"_id":"themes/cards/source/css/style/_base/base.styl","hash":"8b13657878d48ec0bf74ad786c8dd48ed08bb33e","modified":1683276457488},{"_id":"themes/cards/source/css/style/_base/darkmode.styl","hash":"d2db9d91c68a08d432b6b765ea27dbb795f8f0d8","modified":1683276457488},{"_id":"themes/cards/source/css/style/_base/markdown.styl","hash":"7a7d5d327d84e88a06e17e86942922da2f103ba6","modified":1683276457489},{"_id":"themes/cards/source/css/style/_functions/cover.styl","hash":"8e2d57a223c64ad3257fd81fa85f8bdc8a88c7fb","modified":1683276457489},{"_id":"themes/cards/source/css/style/_functions/footer.styl","hash":"631e38e9ebf225deaaca1a0972a02c8f0379f97f","modified":1683276457490},{"_id":"themes/cards/source/css/style/_functions/header.styl","hash":"294992b66b92f085381cee6d31d9e52741beba52","modified":1683276457490},{"_id":"themes/cards/source/css/style/_functions/navbar.styl","hash":"462a7bc46622460b5a474707a2cbf908724c37bf","modified":1683276457490},{"_id":"themes/cards/source/css/style/_functions/search.styl","hash":"725dcd65fa7813681374cf73bc3ab744da836596","modified":1683276457491},{"_id":"themes/cards/source/css/style/_functions/toc.styl","hash":"6822b7e938b273d4dc0d6465871577ae7d9c7eff","modified":1683276457491},{"_id":"themes/cards/source/css/style/_plugins/fold.styl","hash":"aff7f6e64e21cd666f5173be83608df87fc02973","modified":1683276457494},{"_id":"themes/cards/source/css/style/_plugins/note.styl","hash":"b20df699eb8d743cc03769046b7349712ff8e4d8","modified":1683276457494},{"_id":"themes/cards/source/css/style/_pages/archives.styl","hash":"c9540b89e914c1847e357b7892e1def0f4798592","modified":1683276457492},{"_id":"themes/cards/source/css/style/_pages/links.styl","hash":"1fa2e1b1388c96ebe82146b02d75c853bfedfc7e","modified":1683276457493},{"_id":"themes/cards/source/css/style/_pages/post.styl","hash":"263c1e4fa8f2fbf4808ade5804a1bdbf87bfa91e","modified":1683276457493},{"_id":"themes/cards/source/css/style/_layout/layout.styl","hash":"8ab37493a8db8b12f64adbc19f74728af8821e6c","modified":1683276457492},{"_id":"source/_posts/github的基本使用.md","hash":"2a218b519392fab301134031e0b99df545f9a530","modified":1684505271346},{"_id":"source/_posts/win脚本执行错误处理.md","hash":"e63671860abd95184d71e6af5dbb0b85b68f5275","modified":1684505284166},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1683293782410},{"_id":"themes/butterfly/README_CN.md","hash":"b95c89559c429049caa3f9f461a2b41ae98c0d68","modified":1683293782410},{"_id":"themes/butterfly/README.md","hash":"46869886ed9ce4beedaad5b064789fd15861566e","modified":1683293782410},{"_id":"themes/butterfly/package.json","hash":"1206cdcf23b9203476da79d3ac7897ffc8738d80","modified":1683293782455},{"_id":"themes/butterfly/_config.yml","hash":"da435f48cf76231890f26a85288d03f57b654a39","modified":1683293782410},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1683293782416},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1683293782455},{"_id":"themes/butterfly/plugins.yml","hash":"2d04afe05470194935fbb6b7544793e2b242d1a8","modified":1683293782455},{"_id":"themes/butterfly/languages/default.yml","hash":"d444cbb5c5456aaf27f3fb1b4308634689c7bb53","modified":1683293782410},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1683293782416},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1683293782455},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1683293782455},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"cc8672dc0c2762b694f689cbeb6e34810f1c194e","modified":1683293782410},{"_id":"themes/butterfly/languages/en.yml","hash":"4957fd976c99745d3aa24000a85b2955e8d1cf81","modified":1683293782410},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1683293782416},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1683293782455},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"145ec301db185c8a06de1f34a77ca391e1d2729b","modified":1683293782410},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1683293782410},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1683293782410},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1683293782410},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1683293782410},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1683293782418},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1683293782410},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"b50b0afdc41c54279587410c3f82c8cb3c5ff46d","modified":1683293782418},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1683293782418},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"5f96a28a4eac046b68ccc10e8c24ab01525e3245","modified":1683293782430},{"_id":"themes/butterfly/source/css/var.styl","hash":"e1e37a2e932163886789b72624c7348545003f1d","modified":1683293782489},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1683293782489},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1683293782430},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1683293782490},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1683293782488},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1683293782490},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1683293782460},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1683293782460},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1683293782460},{"_id":"themes/butterfly/scripts/events/init.js","hash":"72605a00bf623b6cbc9fa0f90069ea2ae584c5c0","modified":1683293782460},{"_id":"themes/butterfly/source/js/main.js","hash":"ab1eb2ae2fc7937aa0579d5293432fa986bf49b2","modified":1683293782490},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1683293782460},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1683293782460},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1683293782460},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1683293782460},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"c4dac81869b33fa1590fae60a45b2e915a59c3ec","modified":1683293782490},{"_id":"themes/butterfly/source/js/utils.js","hash":"6b6052cceadd791487b1b3e1da61e7e8cd1e2702","modified":1683293782490},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1683293782467},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a3323fcb11cfd3f3e21230737341beb5d76b40aa","modified":1683293782460},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"b8d95ac1851c37f1dce4b1dd4a1d3ffdff501a03","modified":1683293782460},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1683293782460},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1683293782467},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1683293782467},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1683293782468},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"fc5a80707cf522378be3cf8638ef78bccc88c510","modified":1683293782468},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1683293782460},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1683293782460},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1683293782468},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1683293782468},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1683293782468},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"8ff03b35385f9162e1eb54dceb5fa7f781306caf","modified":1683293782460},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1683293782419},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"7222102f9919f8e961d4f1688425845fb7775ada","modified":1683293782460},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1683293782460},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1683293782419},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"6005907245dd74b153f03afdccfae1abb66bb482","modified":1683293782460},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"ed582d2e0b41970c99e38e964b3cd821997fadea","modified":1683293782420},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1683293782422},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1683293782421},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1683293782422},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fd55f0e09827ef40c53c48d184a553464aac3e03","modified":1683293782422},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1683293782422},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"e9f952f1b66a0116fccb812b14db0f229666e586","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1683293782422},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"f530f8c2b0a7d048cdb8933b0fbe5380843006ff","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"a60d9cc9083142e3d92b618561abd557fcab502b","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"39c205027296dbd9fc9eb3cfd9d033bc5bd031b7","modified":1683293782424},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1683293782430},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"fde51780f525b002885c9f189cccc459542f5dc6","modified":1683293782470},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1683293782430},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"6a7a926b72c5083aa14051a0eca8d49e1c6261f1","modified":1683293782470},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1683293782453},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1683293782453},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1683293782454},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1683293782455},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1683293782453},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1683293782455},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1683293782455},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1683293782455},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"ba94ceb40d7c81372a76103d958dcc2cc6a84f00","modified":1683293782455},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1683293782455},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"558456d85100606c14e0a59801b0ee2ee67aadd9","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d4836a2ce1c87a59cfa8e4986346bf353710277f","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1683293782443},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1683293782471},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1683293782472},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1683293782443},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"3969f599e8657adf8c3ce287d83f5d0a23f276a9","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"077ce6932261cf51696834a25d1d988fec6cd7d0","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"d33f2d9001a82d9a72d6f4088743762fbd016e4c","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"92fd3128edc339ce570c2b1b134b9fc99e830789","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1683293782472},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1683293782480},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1683293782472},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1683293782480},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"824b2b2d2ee72583b9e009c0bb13e29e806534cc","modified":1683293782472},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"d13bda30a5db542f7ff24c7938659c3869758c64","modified":1683293782472},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1683293782480},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1683293782472},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"01ba993e7bd384827c0f5499ae0c5f82e068d844","modified":1683293782480},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"bfa8bdd6b014018551ce0b83e962f61b3b25e2a5","modified":1683293782480},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"d072872714854cdc3d2975fb131ac31cb82b13e3","modified":1683293782480},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1683293782480},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d83389e07f8851f1b9afafe0eacd1bf10ad334ef","modified":1683293782480},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1683293782480},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1683293782480},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"eda63ed2c2e461883090c0b154368e353be3b011","modified":1683293782480},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1683293782480},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"cf90ea339fbb7f345212319627fcd68964024e40","modified":1683293782480},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"bbe930d8425bdaee2a5ba3cade42b617cee42934","modified":1683293782490},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1683293782480},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"7c463ba25b3b54f0f46dfd75971d792816e942a8","modified":1683293782480},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1683293782485},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"27a4a8428d95473f6f4c6d36eb39b803aef4c093","modified":1683293782490},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1683293782485},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1683293782485},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1683293782488},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1683293782485},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"0010c7a10d265c4329f0fd4db85b4a9ea7ba06b5","modified":1683293782430},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1683293782485},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"3b551ab7618b36795480015b5cf565288df5b957","modified":1683293782438},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"d59d43a8caad801222608a341f6845c6f8d1b265","modified":1683293782430},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1683293782487},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"77729ecfae68ad21ff1d22ff2c8aa212f4d405c6","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"d6a2a828689d619943838d42f2c3a45551e2c6c4","modified":1683293782438},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"a29b1faa7a394ed13b101849eb67fba5e7c90347","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"ca1337586aafc85e7f6d730ed0a1984a1a12aba7","modified":1683293782438},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"ed4af213570dd7d3e2165f830f45b3e57f04afd4","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"ccb5c3f2a821b87986998595743387d7c997c16e","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f04263a3bd7efb7f1b250cfee112e82f49805492","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1683293782440},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"645087801624a73cbee63269cfd399e9da39c663","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"bf6b1453096dd7f53d81cde078c233d301e14304","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3f59333064c4fc754c638f13a417b7be2569ca09","modified":1683293782430},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1683293782437},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"306b7aa7d86e46df28fa52f75cead4f9d71cacb2","modified":1683293782437},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1683293782437},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"75ebfe533dd7ee59113b84c2972694cadd92c6a9","modified":1683293782443},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1683293782472},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fad70676346f194f166ac4e714ac6ff37cbf50ea","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1683293782443},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1683293782472},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"bc207dcb771fc2c2c329f29d01708ff6b18443da","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"f434dce30f8faee0db5a8e4d2c81196b0e3605f4","modified":1683293782443},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1683293782472},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"ba04174d977da988a1d49c06641262c413352346","modified":1683293782443},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1683293782472},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1683293782472},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1683293782443},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"4b9c35375e0eb9cf99ad246d5ca838eca64a635d","modified":1683293782450},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1683293782450},{"_id":"public/atom.xml","hash":"92a5d6fbf447805787cfc67dbc12e5a782f1defb","modified":1684505435653},{"_id":"public/sitemap.xml","hash":"12b6e9a21ddc300548c0e679188145de9e1a9cc3","modified":1684505435653},{"_id":"public/sitemap.txt","hash":"cafdb3d6f64efb9f987bf514dc71b9c257784d15","modified":1684505435653},{"_id":"public/tags/git/index.html","hash":"4de985f142251389ba105884ae7fa7a743ec873e","modified":1683298704502},{"_id":"public/2023/05/05/github的基本使用/index.html","hash":"09780ac828eb161a0a4ca0068c22c6126fd0e4ec","modified":1684505435653},{"_id":"public/2023/05/05/win脚本执行错误处理/index.html","hash":"9770af5032c29a77486b81ae3f1c1894ac446fd5","modified":1684505435653},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1684505435653},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1684505435653},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1684505435653},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1684505435653},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1684505435653},{"_id":"public/css/index.css","hash":"13e1ba238c48a995cc2776d0a6886e4d98aef942","modified":1684505435653},{"_id":"public/js/utils.js","hash":"2e74fe8ae5ac20067668a18df5985459faf419f9","modified":1684505435653},{"_id":"public/js/search/local-search.js","hash":"8a0547ecb33ad2939450152adf54fca58e22a424","modified":1684505435653},{"_id":"public/js/tw_cn.js","hash":"76d0c5c172cae44b34b0bd3125fd068b2c3cbd4a","modified":1684505435653},{"_id":"public/js/main.js","hash":"05c825962e365af62096d3f1b4d7c9ee1b5fc2f5","modified":1684505435653},{"_id":"source/_posts/网页设计.md","hash":"0a198ad3a7a10a649c8b7e726f1452c4c0fed6bd","modified":1684505298359},{"_id":"source/_posts/学习笔记/JavaScript练习.md","hash":"a9f22517170e45efa2cec5c591b5d4ea9ce41211","modified":1684505251050},{"_id":"source/_posts/学习笔记/git.md","hash":"ff9a918569686c2b5f3882033e23e2d59f6dc192","modified":1684505251049},{"_id":"source/_posts/学习笔记/javaScript深入.md","hash":"c4816df59d192c670079dec45835b29ef8844b95","modified":1684505251050},{"_id":"source/_posts/学习笔记/maven.md","hash":"2801780c1c8c3f79373a49225e342331092e9bfc","modified":1684505251050},{"_id":"source/_posts/软件设计师.md","hash":"1cfd10a376d41482aac22709e7705fcb561868a2","modified":1684505290805},{"_id":"source/_posts/学习笔记/linux.md","hash":"39b4ea147c26a22ca1fc5ca26a54ed9953606aed","modified":1684505251050},{"_id":"source/_posts/学习笔记/嵌入式.md","hash":"2003beebbc6443e25709f785213968bed7b30909","modified":1684505251050},{"_id":"source/_posts/学习笔记/vue项目学习.md","hash":"64020959566988fc5a51efd17d17c59edd88657d","modified":1684505251050},{"_id":"source/_posts/学习笔记/汇编.md","hash":"7901f47660131eb96417763e8c196d186e332169","modified":1684505251050},{"_id":"source/_posts/学习笔记/计算机组成原理.md","hash":"e0f3e1cfbd0aaaf21acfed5d271de2ed4a0a5c84","modified":1684505251051},{"_id":"source/_posts/学习笔记/英语.md","hash":"5103612119259ecadcffa03aaf9e26fe246780ec","modified":1684505251051},{"_id":"source/_posts/学习笔记/语法学习.md","hash":"bb295876d2123154fc987766b2c52072ac287374","modified":1684505251052},{"_id":"source/_posts/学习笔记/计算机网络.md","hash":"00a431e47a4081190b2dc13197e2de210fa7b827","modified":1684505251051},{"_id":"source/_posts/学习笔记/软件设计与体系结构.md","hash":"b4ca479b2c995a585e7771e07a6521e2b8a0aea3","modified":1684505251052},{"_id":"source/_posts/学习笔记/leetcode/589N叉树的遍历.md","hash":"bcee9ce6eb232c9da4559192edef8427d23ec67c","modified":1684505251052},{"_id":"source/_posts/学习笔记/leetcode/全排列.md","hash":"abcfa7adaed948f3a4c3c0ed5e9c83bd8d7dddb3","modified":1684505251052},{"_id":"source/_posts/学习笔记/leetcode/未命名.md","hash":"75cae23287316a899b1e8c961cd4dc73d69852cf","modified":1684505251052},{"_id":"source/_posts/学习笔记/ssm框架/SSM整合.md","hash":"d73d95b1c4b7020634ce49b6c80ac1427f402481","modified":1684505251053},{"_id":"source/_posts/学习笔记/ssm框架/myBatis.md","hash":"d52977cbccb037d1ac38bc6c37b797fe4d711279","modified":1684505251052},{"_id":"source/_posts/学习笔记/ssm框架/SpringMVC.md","hash":"31a397d5b9e79bd6b22b54849f26a3f720adc5a0","modified":1684505251053},{"_id":"source/_posts/学习笔记/ssm框架/spring.md","hash":"4a1335d3fc7b443433d3b80768e59e29289794e3","modified":1684505251052},{"_id":"source/_posts/学习笔记/web/springBoot.md","hash":"0de13e3e09e62914e651609b5fb1ecd2ace0a44a","modified":1684505251053},{"_id":"source/_posts/学习笔记/win/powershell.md","hash":"7ca204af78f9ed8e18f055be146b1b095d45302a","modified":1684505251053},{"_id":"source/_posts/学习笔记/其他/mysql基础.md","hash":"b6bb8ea2bdaefd083456f39d7e1986c832e36b6a","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/javaweb.md","hash":"433d4897e38bb5de6231cfea14173abfedc35ae0","modified":1684505251053},{"_id":"source/_posts/学习笔记/其他/python.md","hash":"6fdb96d4abca50ea4b4eae120be99526ad461645","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/mysql.txt","hash":"e1c7503c7286c982e90bc66674cf561288f79d4f","modified":1655770356000},{"_id":"source/_posts/学习笔记/其他/ps.md","hash":"2c45c58cbf9af0c60bee496bf6ea4522aa606f68","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/rust知识点.md","hash":"1bb0e584b55816e506b6390ba637d8dedd38c4ab","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/动态规划.md","hash":"94fbf1933d05c35e91ab89f5057927f0cb079e07","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/无线管理员.md","hash":"6fe1898aeb91f3d68be2e0dfef8cc67103032081","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/日期函数格式化字符.md","hash":"0ab3b5fe214c3ac3d26c52fa5a2dedf5728f4ade","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/奇偶数分开.md","hash":"0a20bd445558b4c77a01c88c4891794c6e0b3ec5","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/注册表修改.md","hash":"56ccce33c583e8415b149bfe771f540375d05597","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/模拟登录.md","hash":"5f1d52069f86e82b78fc9a6efb957bbf2ed6d350","modified":1684505251054},{"_id":"source/_posts/学习笔记/其他/移除指定字符使数字最大.md","hash":"cc3b7020550bc8c1ef27a037e8290380598e6189","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/ajax.md","hash":"05171743d3006f55a9e8c8d25f36484556f5d15e","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/axios.md","hash":"59b3851a83918e0a17c5ec15fc76b243b91c01f0","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/css.md","hash":"e080b04eb192295ebb9744007839bf4b3201bf0b","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/express.md","hash":"46fd0f9e65792a84ab31d95cad5eb8cc9ed71afb","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/jsp.md","hash":"382ed792905da12b860d96096c663ceb908b653d","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/node.md","hash":"882392a01dbda8a245e4235fa5536995407c017b","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/router.md","hash":"1a82d09e8da8a7c79dac1cfffa41641bde2ef6d4","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/npm.md","hash":"fb0bba3f8dfdb3b6154af91e9b9f998d13c770f0","modified":1684505251055},{"_id":"source/_posts/学习笔记/前端/scss.md","hash":"f2b83172c9fbf93b5d829ca46f454ae59dc9772b","modified":1684505251056},{"_id":"source/_posts/学习笔记/前端/typescript.md","hash":"006c774f4de19bf83d0666934b9e1741824bad83","modified":1684505251056},{"_id":"source/_posts/学习笔记/前端/vite.md","hash":"9155a224154831310dfaad2a7002ac05afbba1cc","modified":1684505251056},{"_id":"source/_posts/学习笔记/其他/起诉状.docx","hash":"e18f6acbc804095929d67479bcacec6ad2143990","modified":1646360430000},{"_id":"source/_posts/学习笔记/前端/vue3.md","hash":"7e1cd133008caf409aab65f1ab4dc798803f06a7","modified":1684505251056},{"_id":"source/_posts/学习笔记/数据库/mongoDB.md","hash":"faf53db77e47162d488a8282688637b5cfe6b2cc","modified":1684505251057},{"_id":"source/_posts/学习笔记/数据库/mysql.md","hash":"1a35ac883e5beac590b630b22ba600ae9fd1e943","modified":1684505251057},{"_id":"source/_posts/学习笔记/设计模式/抽象工厂模式.md","hash":"9c70b0f635115547967a92335d22e9f5a1109f03","modified":1684505251057},{"_id":"source/_posts/图片/javascript/2022-12-24 day09.gif","hash":"f58ccc5e4318d16bb94ade3149b03d0c95c11cde","modified":1671850980752},{"_id":"source/_posts/图片/javascript/2022-12-26 day11.gif","hash":"2f265587ec2fded60c0292b07726c1350f4715e9","modified":1672104258141},{"_id":"source/_posts/图片/javascript/2022-12-30 day15.gif","hash":"6023deb85f4d4485413efc6fde9ce88934c6f92c","modified":1672386083009},{"_id":"source/_posts/图片/计算机网络/Pasted image 20221229110523.png","hash":"85feab65554d81cdc1becc421b1dc46a66bfbfe1","modified":1672283123446},{"_id":"source/_posts/图片/计算机网络/Pasted image 20221229104753.png","hash":"542030a0eb3d924bb7e353839f7f90ee5c36e212","modified":1672282073508},{"_id":"source/_posts/图片/计算机网络/Pasted image 20221229095145.png","hash":"454dcae24499ed6d5d861194bc1e5bf5bc2d28b2","modified":1672278705196},{"_id":"source/_posts/图片/javascript/2022-12-19 day04.gif","hash":"848e26b2eefc03cc620703abda2e24e7741637a8","modified":1671416132000},{"_id":"source/_posts/图片/javascript/2022-12-25 day10.gif","hash":"6630ae7c87ce4ce2b0fb4b3a78715b442e60cd0b","modified":1671937167287},{"_id":"source/_posts/图片/计算机组成原理/控制器的组成.png","hash":"2270b73a062a601d4468904f6d97961e5a41e84c","modified":1671182712000},{"_id":"source/_posts/图片/javascript/2022-12-23 day08.gif","hash":"b7caffa2a522541e414c75c1d21ab822df7cdffa","modified":1671781325030},{"_id":"source/_posts/图片/javascript/2022-12-28 day13.gif","hash":"31ae42fdd4592e1f479f328ad96f890924a6507c","modified":1672217728023},{"_id":"source/_posts/图片/计算机组成原理/指令周期的流程控制.png","hash":"f91495c51cf14976aa694a29d8017169b8ed64cc","modified":1671163264000},{"_id":"source/_posts/图片/计算机组成原理/运算器的组成.png","hash":"e3471bb88e8688bc7d00f7740dc8e0834704c604","modified":1671182676000},{"_id":"source/_posts/图片/javascript/2022-12-29 day14.gif","hash":"6d536a0133e37a1cc5fe308475f5de77543afbad","modified":1672300503717},{"_id":"source/_posts/图片/计算机组成原理/指令周期.png","hash":"455b1965132ac7c110e2c0725583fc6ff3e23f7c","modified":1671161648000},{"_id":"source/_posts/图片/javascript/2022-12-17 day02.gif","hash":"1b347fafcb4c3fa749f47e5f8afda63595730cc3","modified":1671272806000},{"_id":"source/_posts/图片/计算机组成原理/取指周期.png","hash":"6903fc0569f5b01feabbd7736265043d986cf58e","modified":1671163912000},{"_id":"source/_posts/图片/计算机组成原理/cpu单总线结构.png","hash":"4dc75f56f9001efc2f0ad4d25b395ab6c44331bb","modified":1671183016000},{"_id":"source/_posts/图片/计算机组成原理/一些指令的周期.png","hash":"b959ff33d2da5cd13072fe12ab1029a749e5bb43","modified":1671162444000},{"_id":"source/_posts/图片/计算机组成原理/指令周期-机器周期-时钟周期.png","hash":"6048c466ef934d4dab09b710f3a052281e4773eb","modified":1671162380000},{"_id":"source/_posts/图片/计算机组成原理/cpu的内部结构.png","hash":"5dc57d1dff403c485127807342753c2b1c3ba4a4","modified":1671182924000},{"_id":"source/_posts/图片/计算机组成原理/指令系统.jpg","hash":"7f8be0d8e1b907fefdfb5b196fa18416d0e1473f","modified":1671111310000},{"_id":"source/_posts/图片/计算机组成原理/指令周期的小节回顾.png","hash":"8559eecd51ff9f6df471234aa80969da67331de4","modified":1671164066000},{"_id":"source/_posts/图片/计算机组成原理/指令周期的触发器.png","hash":"f24c9f16057e3c0fd7beef721dfe54fd51f63674","modified":1671163370000},{"_id":"source/_posts/图片/计算机组成原理/运算器和控制器的功能.png","hash":"35f8ec490f2d128a4a7b121f82797a18b98dd59b","modified":1671182752000},{"_id":"source/_posts/图片/javascript/2022-12-27 day12.gif","hash":"7682e9a234c028bb7c34b4874b2c819bc810c928","modified":1672107685149},{"_id":"source/_posts/图片/计算机组成原理/微指令的线路的设计.png","hash":"d012db692ce5b5d8361491fb26db448e787d73d1","modified":1671269476000},{"_id":"source/_posts/图片/计算机组成原理/指令执行的方案.png","hash":"b445d5077b8610a06b07cfec78d05111af56add3","modified":1671163992000},{"_id":"source/_posts/图片/javascript/2022-12-21 day06.gif","hash":"22ec36845e68022959586958a6818656cf1967db","modified":1671685753044},{"_id":"source/_posts/图片/计算机组成原理/中断周期.png","hash":"3f744c1b9bfb3571acd21a0857442038c4817324","modified":1671163930000},{"_id":"source/_posts/图片/计算机组成原理/运算器的基本结构.png","hash":"5daca116e097ac15207af7fecb587125f09f530b","modified":1671182794000},{"_id":"source/_posts/图片/计算机组成原理/控制器的基本结构.png","hash":"83bf7912fc7ec2c16118151cf0ce024c3cd9a149","modified":1671182868000},{"_id":"source/_posts/图片/javascript/2022-12-16 day01.gif","hash":"4c38e3795f45dd9df733cc5a81f643eaa1c8bfe8","modified":1671180472000},{"_id":"source/_posts/图片/计算机组成原理/硬布线控制器.png","hash":"24cd5087dfdf1cd5909b88f9ee8d59a07e0f230c","modified":1671266478000},{"_id":"source/_posts/图片/javascript/2022-12-31 day16.gif","hash":"13e770b4bdefd6f0ff327f3f53ceb0659e4e9aa5","modified":1672494722316},{"_id":"source/_posts/图片/javascript/2022-12-18 day03.gif","hash":"c03ef0aa65a8016c11109c920cf05aed087ad7eb","modified":1671355614000},{"_id":"source/_posts/图片/javascript/2022-12-22 day07.gif","hash":"4eff59450d0062f47509c1499009f34e1f3d3c64","modified":1671680945152},{"_id":"source/_posts/图片/javascript/2022-12-20 day05.gif","hash":"bab2f605a8362db5ab5be6448e121dd456862c1a","modified":1671537714893},{"_id":"public/tags/win/index.html","hash":"07baf6b42e384c499847c2d0194e4a4fd589e552","modified":1684505435653},{"_id":"public/tags/powershell/index.html","hash":"01def7f92bb9360ec4c3e0d647efeb04bca4f953","modified":1684505435653},{"_id":"public/2023/05/05/软件设计师/index.html","hash":"0a43e8c21e7e5c5208097ebd63b6769c69ff9de8","modified":1684505435653},{"_id":"public/2023/05/05/网页设计/index.html","hash":"488b1d90ba79ea0299d6384da7dcab30ecaa8f73","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/JavaScript练习/index.html","hash":"3edf29d077c5c1346e8aa1ed7000eaeb39bf04ce","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/git/index.html","hash":"537cf0b0e33fbf3abbc0eefd261ef2bad441ac4c","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/javaScript深入/index.html","hash":"2952e1bf581cb7c4acc21a1de9105fd20aaf70b3","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/maven/index.html","hash":"392ade642c02bb42511ec578de688e7399418bba","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/linux/index.html","hash":"98a0a1df7288d0fa84a07538f4ec923cf2ea22c3","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/vue项目学习/index.html","hash":"af6e3c11b6fa9b8e472852c274bdc57ffad218dc","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/嵌入式/index.html","hash":"5127e41b14e47761ecd6ef49b76d521f74486db6","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/汇编/index.html","hash":"2b44a37b682dc1672cf1e109abfa089a92592523","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/英语/index.html","hash":"c2707163c6eb15a5a5032599b9caf4accfd111c9","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/软件设计与体系结构/index.html","hash":"30b2e543a6718ddbcc048cf26008c9bdd2342e0b","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/leetcode/589N叉树的遍历/index.html","hash":"d43eb717afc24035d1a4bd16a810b094c8c10d31","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/leetcode/全排列/index.html","hash":"06321434a25745d588e1a7d5954d3417ca7ff0d9","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/计算机网络/index.html","hash":"bcbb137b59428a34aea240ab418699c8210cf377","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/leetcode/未命名/index.html","hash":"d72fcd8df1052a0d0198d1db38dfca1b22d63800","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/ssm框架/SSM整合/index.html","hash":"feef8b96a0d8d506b5083d868e6975d622d36a04","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/ssm框架/myBatis/index.html","hash":"735e9bdec83f03c417ba6b38058bf8196506d10d","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/ssm框架/spring/index.html","hash":"83f6f7a2f8184c26aa19ef683d3f41f72c6ea943","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/ssm框架/SpringMVC/index.html","hash":"3b1ad81bcf006f37221f63cd739d70f5d634ac0b","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/web/springBoot/index.html","hash":"87f72de33635991a3a3fa0b21d2c68d7640431c9","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/win/powershell/index.html","hash":"b12236d3e5177351ed0b1ab2306adf0e7fea928d","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/语法学习/index.html","hash":"e501a21f1bd3fa63b7d92f786a1a53dd63389da0","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/计算机组成原理/index.html","hash":"7ae278ac8df7ed2d60459da34c382e238f2f2e6e","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/ps/index.html","hash":"c8d9184856f87f3384dc07c2d706a1c0138fb8ed","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/mysql基础/index.html","hash":"fcb4f311a5b82e37b0593a0295102a0a28ed4945","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/javaweb/index.html","hash":"3822f7aeb425ddf25908bc057248bf145b9bc263","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/python/index.html","hash":"3f01a16588d1258c520c0d5ff1fa08426335342c","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/rust知识点/index.html","hash":"6b63efe4b531e65e848b310aaa35b03a503b7ac7","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/动态规划/index.html","hash":"d18076bc3c4d2b688497f2f2cb16b5f449c708e4","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/奇偶数分开/index.html","hash":"c6e4e1c0aa105aaf1cfd8a3c3404f4d667848051","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/无线管理员/index.html","hash":"bdb98d0e2ffc821741c6776d57282e26338e10f6","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/日期函数格式化字符/index.html","hash":"9b98cc352809842491ebb58fc843f9daf0e81e37","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/模拟登录/index.html","hash":"8f3c18623322f440b038491216c03788c16be53d","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/注册表修改/index.html","hash":"6feb29215e5a748ca8e6a3a14686d03eb44d73cf","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/其他/移除指定字符使数字最大/index.html","hash":"8781dce2c1475e9dcba199b7aceb837c6d5828da","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/ajax/index.html","hash":"52d4c18bdd53cc202955f136d3b4312c359cb9f8","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/axios/index.html","hash":"d56aff755f5a87c2eca0e81e55cdafe23a90cf64","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/express/index.html","hash":"4717e6de336b06832a3f2ba29142f798da98c875","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/css/index.html","hash":"c466859c900c795d5e79a4130b00290b46623807","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/jsp/index.html","hash":"344be4e0d80052340c7cf246b59b922c091805e9","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/node/index.html","hash":"c5b586bb069a9581bb3a36b68c569af5037348d2","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/npm/index.html","hash":"74c81d4b06d5590b34c9e2fa1c56566682bec858","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/router/index.html","hash":"1411427fbdd31895904f29398f0787627645a2ad","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/scss/index.html","hash":"9e5cd4df24ed38397860922abfb5583a1a700c70","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/typescript/index.html","hash":"20c3318ca071fbea15386ef8662857421f59213c","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/vite/index.html","hash":"9075b8a33e15273afc012bc14c63719d08830e13","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/前端/vue3/index.html","hash":"170896934582a15a5696349f851c1d59bd84cb4e","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/数据库/mongoDB/index.html","hash":"4909a056bac512a8439dbe0e6cb64f717ad3a464","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/数据库/mysql/index.html","hash":"3f24cbd65b8c4cd7bcfe1e5ecc296f2a13515ee7","modified":1684505435653},{"_id":"public/2023/05/05/学习笔记/设计模式/抽象工厂模式/index.html","hash":"4075dcbbb554a23d729e9ed15f1781a39f90edfc","modified":1684505435653},{"_id":"public/archives/page/2/index.html","hash":"0f1a214c032d408075df05b30955d8d3726403bc","modified":1684505435653},{"_id":"public/archives/page/3/index.html","hash":"a55593e6b22291f29e4d0076da42fb55c6adf6c5","modified":1684505435653},{"_id":"public/archives/page/4/index.html","hash":"d39b1bc9fd876ad89b886852643988975711b064","modified":1684505435653},{"_id":"public/archives/page/5/index.html","hash":"a899e7ceb634df88502081d7c7dade197cccd4a3","modified":1684505435653},{"_id":"public/archives/page/6/index.html","hash":"16649e38ed67a8a39a5d80e103f95b3fdb7c5c1f","modified":1684505435653},{"_id":"public/archives/2023/page/2/index.html","hash":"5aae4bd1f1f9d7d2b0c62dc60524f471a5e71fde","modified":1684505435653},{"_id":"public/archives/2023/page/3/index.html","hash":"b902ed8b1d95d2bc9d7ed77d92d837f527a135e1","modified":1684505435653},{"_id":"public/archives/2023/page/4/index.html","hash":"9fc2775907046f534a7034dda6d8a4179751f59e","modified":1684505435653},{"_id":"public/archives/2023/page/5/index.html","hash":"efca2eb87b1414c44eee21997b16a4f1ace25e8c","modified":1684505435653},{"_id":"public/archives/2023/page/6/index.html","hash":"875dd078ee67ef4e7419d24a6b9572682ac5688f","modified":1684505435653},{"_id":"public/archives/2023/05/page/2/index.html","hash":"eddbcf5a7fb869e710bca034d388554702b0c7cf","modified":1684505435653},{"_id":"public/archives/2023/05/page/3/index.html","hash":"ddd6a40819dcfbe20589b7ce950eb625fcde6a52","modified":1684505435653},{"_id":"public/archives/2023/05/page/4/index.html","hash":"eebfa673050f49c60aa6bc9b4c75452407f39625","modified":1684505435653},{"_id":"public/archives/2023/05/page/5/index.html","hash":"2e5f138b4794f991b241f2710bf38a754668f1df","modified":1684505435653},{"_id":"public/archives/2023/05/page/6/index.html","hash":"b2dd07a20dce28269fe9a0fcdc016dd18be72bd6","modified":1684505435653},{"_id":"public/page/2/index.html","hash":"32bb8f9fed3609ae0d3eb33305063da6bda06d6e","modified":1684505435653},{"_id":"public/page/3/index.html","hash":"6e0bf8f66c6a3192ae3dfcb6548178ced3c54c55","modified":1684505435653},{"_id":"public/page/4/index.html","hash":"8f70d8dafc8e9d45427b0fa94030c613f0e850dd","modified":1684505435653},{"_id":"public/page/5/index.html","hash":"8bca8be5da7df505c7ca36fa4257495db7e68cd1","modified":1684505435653},{"_id":"public/page/6/index.html","hash":"73557d4ec5f258566d4c24bbd9d23773d8407c6c","modified":1684505435653}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"hello-world","date":"2023-05-05T13:30:42.000Z","_content":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: hello-world\ndate: 2023-05-05 21:30:42\ntags:  \n---\n---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2023-05-19T14:07:57.787Z","_id":"clha33vvt0000y05f3uuq41wf","comments":1,"layout":"post","photos":[],"link":"","content":"<hr>\n<h2 id=\"title-Hello-World\"><a href=\"#title-Hello-World\" class=\"headerlink\" title=\"title: Hello World\"></a>title: Hello World</h2><p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<hr>\n<h2 id=\"title-Hello-World\"><a href=\"#title-Hello-World\" class=\"headerlink\" title=\"title: Hello World\"></a>title: Hello World</h2><p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"github的基本使用","date":"2023-05-05T13:30:42.000Z","_content":"---\ntitle: github的基本使用\ndate: 2023-05-05 14:05:54\ntags: git\n---\n## 常用的命令\n```shell\nGit init  # 初始化仓库\nGit add . # 将所有文件添加到仓库\nGit commit -m # '提交信息' 将文件提交到仓库\ngit config --global user. email ' 2435960154@qq.com ' # 初始化邮箱\ngit config --global user. name 'wrw' # 初始化用户名\ngit branch # 查看分支\ngit push origin master # 推送到远程服务器\ngit remote add origin https://github.com/wrwwww/wrwwww.github.io\ngit branch -M main\ngit push -u origin main\n\n\ngit init\ngit add README.md\ngit branch -M main\ngit remote add origin https://github.com/wrwwww/wrwwww.github.io\ngit push -u origin main\n\n先输入git remote rm origin 删除关联的origin的远程库\n2、关联自己的仓库 git remote add origin https://gitee.com/xxxxxx.git\n3、最后git push origin master，这样就推送到自己的仓库了。\n```\n \n","source":"_posts/github的基本使用.md","raw":"---\ntitle: github的基本使用\ndate: 2023-05-05 21:30:42\ntags:  \n---\n---\ntitle: github的基本使用\ndate: 2023-05-05 14:05:54\ntags: git\n---\n## 常用的命令\n```shell\nGit init  # 初始化仓库\nGit add . # 将所有文件添加到仓库\nGit commit -m # '提交信息' 将文件提交到仓库\ngit config --global user. email ' 2435960154@qq.com ' # 初始化邮箱\ngit config --global user. name 'wrw' # 初始化用户名\ngit branch # 查看分支\ngit push origin master # 推送到远程服务器\ngit remote add origin https://github.com/wrwwww/wrwwww.github.io\ngit branch -M main\ngit push -u origin main\n\n\ngit init\ngit add README.md\ngit branch -M main\ngit remote add origin https://github.com/wrwwww/wrwwww.github.io\ngit push -u origin main\n\n先输入git remote rm origin 删除关联的origin的远程库\n2、关联自己的仓库 git remote add origin https://gitee.com/xxxxxx.git\n3、最后git push origin master，这样就推送到自己的仓库了。\n```\n \n","slug":"github的基本使用","published":1,"updated":"2023-05-19T14:07:51.346Z","_id":"clhallgk80000zg5fei1lfd3w","comments":1,"layout":"post","photos":[],"link":"","content":"<hr>\n<h2 id=\"title-github的基本使用date-2023-05-05-14-05-54tags-git\"><a href=\"#title-github的基本使用date-2023-05-05-14-05-54tags-git\" class=\"headerlink\" title=\"title: github的基本使用date: 2023-05-05 14:05:54tags: git\"></a>title: github的基本使用<br>date: 2023-05-05 14:05:54<br>tags: git</h2><h2 id=\"常用的命令\"><a href=\"#常用的命令\" class=\"headerlink\" title=\"常用的命令\"></a>常用的命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git init  # 初始化仓库</span><br><span class=\"line\">Git add . # 将所有文件添加到仓库</span><br><span class=\"line\">Git commit -m # &#x27;提交信息&#x27; 将文件提交到仓库</span><br><span class=\"line\">git config --global user. email &#x27; 2435960154@qq.com &#x27; # 初始化邮箱</span><br><span class=\"line\">git config --global user. name &#x27;wrw&#x27; # 初始化用户名</span><br><span class=\"line\">git branch # 查看分支</span><br><span class=\"line\">git push origin master # 推送到远程服务器</span><br><span class=\"line\">git remote add origin https://github.com/wrwwww/wrwwww.github.io</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin https://github.com/wrwwww/wrwwww.github.io</span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\">先输入git remote rm origin 删除关联的origin的远程库</span><br><span class=\"line\">2、关联自己的仓库 git remote add origin https://gitee.com/xxxxxx.git</span><br><span class=\"line\">3、最后git push origin master，这样就推送到自己的仓库了。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<hr>\n<h2 id=\"title-github的基本使用date-2023-05-05-14-05-54tags-git\"><a href=\"#title-github的基本使用date-2023-05-05-14-05-54tags-git\" class=\"headerlink\" title=\"title: github的基本使用date: 2023-05-05 14:05:54tags: git\"></a>title: github的基本使用<br>date: 2023-05-05 14:05:54<br>tags: git</h2><h2 id=\"常用的命令\"><a href=\"#常用的命令\" class=\"headerlink\" title=\"常用的命令\"></a>常用的命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git init  # 初始化仓库</span><br><span class=\"line\">Git add . # 将所有文件添加到仓库</span><br><span class=\"line\">Git commit -m # &#x27;提交信息&#x27; 将文件提交到仓库</span><br><span class=\"line\">git config --global user. email &#x27; 2435960154@qq.com &#x27; # 初始化邮箱</span><br><span class=\"line\">git config --global user. name &#x27;wrw&#x27; # 初始化用户名</span><br><span class=\"line\">git branch # 查看分支</span><br><span class=\"line\">git push origin master # 推送到远程服务器</span><br><span class=\"line\">git remote add origin https://github.com/wrwwww/wrwwww.github.io</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin https://github.com/wrwwww/wrwwww.github.io</span><br><span class=\"line\">git push -u origin main</span><br><span class=\"line\"></span><br><span class=\"line\">先输入git remote rm origin 删除关联的origin的远程库</span><br><span class=\"line\">2、关联自己的仓库 git remote add origin https://gitee.com/xxxxxx.git</span><br><span class=\"line\">3、最后git push origin master，这样就推送到自己的仓库了。</span><br></pre></td></tr></table></figure>\n"},{"title":"win脚本执行错误处理","date":"2023-05-05T13:30:42.000Z","_content":"---\ntitle: win脚本执行错误处理\ndate: 2023-05-05 21:30:42\ntags: [win,powershell]\n---\n```shell\nPS D:\\code\\wrwwww.github.io> npm install -g pnpm\n\nadded 1 package in 11s\n\n1 package is looking for funding\n  run `npm fund` for details\nPS D:\\code\\wrwwww.github.io> pnpm -v\npnpm : 无法加载文件 C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http\ns:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ pnpm -v\n+ ~~~~\n    + CategoryInfo          : SecurityError: (:) []，PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess\nPS D:\\code\\wrwwww.github.io> pnpm\npnpm : 无法加载文件 C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http\ns:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ pnpm\n+ ~~~~\n    + CategoryInfo          : SecurityError: (:) []，PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess\n```\n> 原因是： 首次在计算机上启动 Windows PowerShell 时，现用执行策略很可能是 Restricted（默认设置）。Restricted 策略不允许任何脚本运行。\n解决办法:powershell使用管理员执行\n```shell\nset-ExecutionPolicy RemoteSigned\n```","source":"_posts/win脚本执行错误处理.md","raw":"---\ntitle: win脚本执行错误处理\ndate: 2023-05-05 21:30:42\ntags:  \n---\n---\ntitle: win脚本执行错误处理\ndate: 2023-05-05 21:30:42\ntags: [win,powershell]\n---\n```shell\nPS D:\\code\\wrwwww.github.io> npm install -g pnpm\n\nadded 1 package in 11s\n\n1 package is looking for funding\n  run `npm fund` for details\nPS D:\\code\\wrwwww.github.io> pnpm -v\npnpm : 无法加载文件 C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http\ns:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ pnpm -v\n+ ~~~~\n    + CategoryInfo          : SecurityError: (:) []，PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess\nPS D:\\code\\wrwwww.github.io> pnpm\npnpm : 无法加载文件 C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http\ns:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ pnpm\n+ ~~~~\n    + CategoryInfo          : SecurityError: (:) []，PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess\n```\n> 原因是： 首次在计算机上启动 Windows PowerShell 时，现用执行策略很可能是 Restricted（默认设置）。Restricted 策略不允许任何脚本运行。\n解决办法:powershell使用管理员执行\n```shell\nset-ExecutionPolicy RemoteSigned\n```","slug":"win脚本执行错误处理","published":1,"updated":"2023-05-19T14:08:04.166Z","_id":"clhallgkf0003zg5f59868wmd","comments":1,"layout":"post","photos":[],"link":"","content":"<hr>\n<h2 id=\"title-win脚本执行错误处理date-2023-05-05-21-30-42tags-win-powershell\"><a href=\"#title-win脚本执行错误处理date-2023-05-05-21-30-42tags-win-powershell\" class=\"headerlink\" title=\"title: win脚本执行错误处理date: 2023-05-05 21:30:42tags: [win,powershell]\"></a>title: win脚本执行错误处理<br>date: 2023-05-05 21:30:42<br>tags: [win,powershell]</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\code\\wrwwww.github.io&gt; npm install -g pnpm</span><br><span class=\"line\"></span><br><span class=\"line\">added 1 package in 11s</span><br><span class=\"line\"></span><br><span class=\"line\">1 package is looking for funding</span><br><span class=\"line\">  run `npm fund` for details</span><br><span class=\"line\">PS D:\\code\\wrwwww.github.io&gt; pnpm -v</span><br><span class=\"line\">pnpm : 无法加载文件 C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http</span><br><span class=\"line\">s:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br><span class=\"line\">所在位置 行:1 字符: 1</span><br><span class=\"line\">+ pnpm -v</span><br><span class=\"line\">+ ~~~~</span><br><span class=\"line\">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class=\"line\">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br><span class=\"line\">PS D:\\code\\wrwwww.github.io&gt; pnpm</span><br><span class=\"line\">pnpm : 无法加载文件 C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http</span><br><span class=\"line\">s:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br><span class=\"line\">所在位置 行:1 字符: 1</span><br><span class=\"line\">+ pnpm</span><br><span class=\"line\">+ ~~~~</span><br><span class=\"line\">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class=\"line\">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>原因是： 首次在计算机上启动 Windows PowerShell 时，现用执行策略很可能是 Restricted（默认设置）。Restricted 策略不允许任何脚本运行。<br>解决办法:powershell使用管理员执行</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<hr>\n<h2 id=\"title-win脚本执行错误处理date-2023-05-05-21-30-42tags-win-powershell\"><a href=\"#title-win脚本执行错误处理date-2023-05-05-21-30-42tags-win-powershell\" class=\"headerlink\" title=\"title: win脚本执行错误处理date: 2023-05-05 21:30:42tags: [win,powershell]\"></a>title: win脚本执行错误处理<br>date: 2023-05-05 21:30:42<br>tags: [win,powershell]</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\code\\wrwwww.github.io&gt; npm install -g pnpm</span><br><span class=\"line\"></span><br><span class=\"line\">added 1 package in 11s</span><br><span class=\"line\"></span><br><span class=\"line\">1 package is looking for funding</span><br><span class=\"line\">  run `npm fund` for details</span><br><span class=\"line\">PS D:\\code\\wrwwww.github.io&gt; pnpm -v</span><br><span class=\"line\">pnpm : 无法加载文件 C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http</span><br><span class=\"line\">s:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br><span class=\"line\">所在位置 行:1 字符: 1</span><br><span class=\"line\">+ pnpm -v</span><br><span class=\"line\">+ ~~~~</span><br><span class=\"line\">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class=\"line\">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br><span class=\"line\">PS D:\\code\\wrwwww.github.io&gt; pnpm</span><br><span class=\"line\">pnpm : 无法加载文件 C:\\Users\\admin\\AppData\\Roaming\\npm\\pnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http</span><br><span class=\"line\">s:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br><span class=\"line\">所在位置 行:1 字符: 1</span><br><span class=\"line\">+ pnpm</span><br><span class=\"line\">+ ~~~~</span><br><span class=\"line\">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class=\"line\">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>原因是： 首次在计算机上启动 Windows PowerShell 时，现用执行策略很可能是 Restricted（默认设置）。Restricted 策略不允许任何脚本运行。<br>解决办法:powershell使用管理员执行</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>"},{"title":"win脚本执行错误处理","date":"2023-05-05T13:30:42.000Z","_content":"# 计算机系统\n## 原码,反码,补码\n### 表示范围\n\n<table>\n</table>\n# 程序设计语言\n# 数据结构\n# 知识产权\n# 数据库\n# 面向对象\n# uml\n# 设计模式\n# 操作系统\n# 结构化开发\n# 软件工程\n# 信息安全\n## 加密算法\n### 对称加密(私有秘钥)\n有 Des,3Des,Rc-5,IDEA,AES,RC4\n### 非对称加密(公开秘钥)\nRSA,DSA,ECC\n### 摘要算法\nHash,MD5(128位),sha-1(160位)\n加密是为了防止窃听,摘要是为了保证没有被更改\n# 计算机网络\n# 算法","source":"_posts/软件设计师.md","raw":"---\ntitle: win脚本执行错误处理\ndate: 2023-05-05 21:30:42\ntags: [win,powershell]\n---\n# 计算机系统\n## 原码,反码,补码\n### 表示范围\n\n<table>\n</table>\n# 程序设计语言\n# 数据结构\n# 知识产权\n# 数据库\n# 面向对象\n# uml\n# 设计模式\n# 操作系统\n# 结构化开发\n# 软件工程\n# 信息安全\n## 加密算法\n### 对称加密(私有秘钥)\n有 Des,3Des,Rc-5,IDEA,AES,RC4\n### 非对称加密(公开秘钥)\nRSA,DSA,ECC\n### 摘要算法\nHash,MD5(128位),sha-1(160位)\n加密是为了防止窃听,摘要是为了保证没有被更改\n# 计算机网络\n# 算法","slug":"软件设计师","published":1,"updated":"2023-05-19T14:08:10.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oab0000wwvn3z147o3r","content":"<h1 id=\"计算机系统\"><a href=\"#计算机系统\" class=\"headerlink\" title=\"计算机系统\"></a>计算机系统</h1><h2 id=\"原码-反码-补码\"><a href=\"#原码-反码-补码\" class=\"headerlink\" title=\"原码,反码,补码\"></a>原码,反码,补码</h2><h3 id=\"表示范围\"><a href=\"#表示范围\" class=\"headerlink\" title=\"表示范围\"></a>表示范围</h3><table>\n</table>\n# 程序设计语言\n# 数据结构\n# 知识产权\n# 数据库\n# 面向对象\n# uml\n# 设计模式\n# 操作系统\n# 结构化开发\n# 软件工程\n# 信息安全\n## 加密算法\n### 对称加密(私有秘钥)\n有 Des,3Des,Rc-5,IDEA,AES,RC4\n### 非对称加密(公开秘钥)\nRSA,DSA,ECC\n### 摘要算法\nHash,MD5(128位),sha-1(160位)\n加密是为了防止窃听,摘要是为了保证没有被更改\n# 计算机网络\n# 算法","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"计算机系统\"><a href=\"#计算机系统\" class=\"headerlink\" title=\"计算机系统\"></a>计算机系统</h1><h2 id=\"原码-反码-补码\"><a href=\"#原码-反码-补码\" class=\"headerlink\" title=\"原码,反码,补码\"></a>原码,反码,补码</h2><h3 id=\"表示范围\"><a href=\"#表示范围\" class=\"headerlink\" title=\"表示范围\"></a>表示范围</h3><table>\n</table>\n# 程序设计语言\n# 数据结构\n# 知识产权\n# 数据库\n# 面向对象\n# uml\n# 设计模式\n# 操作系统\n# 结构化开发\n# 软件工程\n# 信息安全\n## 加密算法\n### 对称加密(私有秘钥)\n有 Des,3Des,Rc-5,IDEA,AES,RC4\n### 非对称加密(公开秘钥)\nRSA,DSA,ECC\n### 摘要算法\nHash,MD5(128位),sha-1(160位)\n加密是为了防止窃听,摘要是为了保证没有被更改\n# 计算机网络\n# 算法"},{"title":"音乐播放器的设计","date":"2023-05-05T13:30:42.000Z","_content":"音乐播放器的设计\n1. audio对象\n2. 播放列表\n3. 播放顺序列表\n4. 播放历史列表\n\n侧边栏设计\n设计侧边栏的时候如果用户登录才考虑加入用户喜欢的,用户收藏的,\n\n\n函数柯力化\n```JavaScript\nfunction findIndex(list, music) {\n\n  return list.findIndex((item) => {\n\n    return item.id === music.id\n\n  })\n\n}\n\nfindIndex(item);\n\n```\n\n","source":"_posts/网页设计.md","raw":"---\ntitle: 音乐播放器的设计\ndate: 2023-05-05 21:30:42\ntags:  \n---\n音乐播放器的设计\n1. audio对象\n2. 播放列表\n3. 播放顺序列表\n4. 播放历史列表\n\n侧边栏设计\n设计侧边栏的时候如果用户登录才考虑加入用户喜欢的,用户收藏的,\n\n\n函数柯力化\n```JavaScript\nfunction findIndex(list, music) {\n\n  return list.findIndex((item) => {\n\n    return item.id === music.id\n\n  })\n\n}\n\nfindIndex(item);\n\n```\n\n","slug":"网页设计","published":1,"updated":"2023-05-19T14:08:18.359Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oac0001wwvndwx481oq","content":"<p>音乐播放器的设计</p>\n<ol>\n<li>audio对象</li>\n<li>播放列表</li>\n<li>播放顺序列表</li>\n<li>播放历史列表</li>\n</ol>\n<p>侧边栏设计<br>设计侧边栏的时候如果用户登录才考虑加入用户喜欢的,用户收藏的,</p>\n<p>函数柯力化</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findIndex</span>(<span class=\"params\">list, music</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> list.<span class=\"title function_\">findIndex</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.<span class=\"property\">id</span> === music.<span class=\"property\">id</span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">findIndex</span>(item);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>音乐播放器的设计</p>\n<ol>\n<li>audio对象</li>\n<li>播放列表</li>\n<li>播放顺序列表</li>\n<li>播放历史列表</li>\n</ol>\n<p>侧边栏设计<br>设计侧边栏的时候如果用户登录才考虑加入用户喜欢的,用户收藏的,</p>\n<p>函数柯力化</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">findIndex</span>(<span class=\"params\">list, music</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> list.<span class=\"title function_\">findIndex</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> item.<span class=\"property\">id</span> === music.<span class=\"property\">id</span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">findIndex</span>(item);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"JavaScript练习","date":"2023-05-05T13:30:42.000Z","_content":"# HTML+Css+JavaScript 50天项目练习\n\n## 2022-12-16  day01\n### 效果图\n![[2022-12-16 day01.gif]]\n### 收获\n```javascript\n// 通过css选择器去选择指定的dom节点\nlet panels = document.querySelectorAll('.panel')\n// 之前都是直接操作className\npanels[i] += \" active\"\npanels[i] = \"panel\"\n// 通过classList来添加或者删除class\npanels[i].classList.add(\"active\");\npanel.classList.remove('active')\n```\n```css\n/* 在active类后对相关的元素进行操作 */\n.mian-warp .panel.active h3 {\n    opacity: 1;\n    transition: opacity 0.3s ease-in 0.4s;\n}\n/* 元素想要垂直水平居中可以设置父元素为flex\n   其中align-items使得子元素垂直居中\n   justify-content使得字元素水平居中\n   overflow是防止出现滚动条\n*/\nbody {\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n}\n/* flex元素在不设置大小的时候，可以直接设置flex来变得比其他同级要大\n   于此同时使用vh,或者vw来适应浏览器窗口大小的变化\n*/\n.mian-warp .panel {\n    height: 80vh;\n    flex: 0.5;\n    margin: 10px;\n}\n.mian-warp .panel.active {\n    flex: 5;\n}\n\n```\n## 2022-12-17 day02\n### 效果图\n![[2022-12-17 day02.gif]]\n### 收获\n```javascript\n// 可以直接设置按钮失效\nnext.disabled = false\n```\n```css\n/**\n我是在除第一的后面几个添加两个伪类一个是灰色背景一个是有颜色的\n  not选择器，决定不选哪些\n**/\nli:not(:first-child)::before {   \n}\n/**\n学习到可以通过设置一个大的背景通过遍历节点来控制蓝色进度条的长度\n**/\n```\n\n \n##  2022-12-18 day03\n### 效果图\n![[2022-12-18 day03.gif]]\n### 收获\n```javascript\n// js就是普通的点击事件\n```\n```css\n/**\n\t‘+’兄弟选择器的使用\n\t实现牵一发而动全身，一个兄弟动跟前的兄弟也动\n     .main.active+nav .nav-items li:nth-child(2) {}\n\t旋转角度以及焦点\n\t transform-origin: top left;\n\t 猫头鹰选择器 body * + *{}\n**/\n```\n##  2022-12-19 day04\n### 效果图\n![[2022-12-19 day04.gif]]\n\n\n### 收获\n```javascript\n // javascript实现很简单就是点击按钮的时候\n // 简单的将输入框的宽度增加缩小\n```\n```css\n/**\n css中需要注意的就是input和button是行内块，他们的基线不同\n 使用vertical-align:middle;来统一基线，达到两个元素齐平\n 因为是行内元素要让他两相连可以在html结构中不换行书写\n 以及在html加载结束后才开始加载js\n window.onload=function(){}\n ()()立即执行的匿名函数\n**/\n```\n\n## 2022-12-20 day05\n### 效果图\n![[2022-12-20 day05.gif]]\n\n\n### 收获\n```javascript\n// setInterval的使用\nlet t=setInterval(blurring,20);\nfunction blurring(){\n        idx+=1;\n        if(idx>99){\n            clearInterval(t);\n        }\n}\n// 以及将99分为30部分\n// idx在99中的比率,*30就为等比例\n\n```\n```css\n\n```\n\n## 2022-12-21 day06\n### 效果图\n \n ![[2022-12-21 day06.gif]]\n\n### 收获\n```javascript\n// 当前窗口的高度\n window.innerHeight\n // dom元素e距离窗口顶部的距离\n e.getBoundingClientRect().top\n```\n```css\n\n```\n\n\n## 2022-12-22 day07\n### 效果图\n ![[2022-12-22 day07.gif]]\n\n\n### 收获\n```javascript\n \n\n```\n```css\n\n```\n\n\n## 2022-12-23 day08\n### 效果图\n \n![[2022-12-23 day08.gif]]\n\n### 收获\n```javascript\n \n// 利用js将原来的字符串分为字符,并且单独加上一个过渡延迟\nlabels.forEach(label => {\nlabel.innerHTML = label.innerText\n.split('').map((letter, idx) => `<span style=\"transitiondelay:${idx*50}ms\">${letter}</span>`)\n        .join('')\n```\n```css\n\n```\n\n##  2022-12-24 day09\n### 效果图\n \n![[图片/javascript/2022-12-24 day09.gif]]\n### 收获\n```javascript\n// 播放音乐,选中audio的dom对象\n\tsong.play();\n\n\n```\n```html\n<audio class=\"a1\" src=\"./Sound Board - 50项目50天.mp3\"></audio>\n\n```\n\n## 2022-12-25 day10\n### 效果图 \n![[2022-12-25 day10.gif]]\n### 收获\n```javascript\n// fetch的使用\n    async function get_jokes(){\n\t\t// 请求url\n        let a=await fetch(\"https://icanhazdadjoke.com/\",\n        // 请求头\n        {\n\t        headers:{\n\t            Accept:  \"application/json\"\n\t        }\n        })\n        // 响应\n        .then(resp=>resp.json())\n\n        jokes.innerText=await a.joke;\n\n    }\n```\n```css\n\n```\n\n##  2022-12-26 day11\n### 效果图 \n![[2022-12-26 day11.gif]]\n### 收获\n```javascript\n// 使用innerHTML插入网页\n// 以及key监听事件\n```\n```css\n\n```\n##  2022-12-27 day12\n### 效果图 \n![[2022-12-27 day12.gif]]\n### 收获\n```javascript\n// 给父元素类名做操作\n// toggle有就remove,没有就add\ne.parentElement.classList.toggle(\"active\");\n```\n```css\n\n```\n\n## 2022-12-28 day13\n### 效果图 \n![[2022-12-28 day13.gif]]\n\n### 收获\n```javascript\n//定时器,延时器的使用\nlet track=setInterval(track1,100);\n    function track1(){\n        buttons.forEach(e=>e.classList.remove(\"active\"));\n      buttons[Math.floor(Math.random()*buttons.length)].classList.add(\"active\");\n    }\n    setTimeout(function(){\n        clearInterval(track);\n    },2000);\n    //以及添加按钮监听事件,在按钮按了之后就清空按钮,重新绘制计算按钮\n    \n```\n \n## 2022-12-29 day14\n### 效果图 \n![[图片/javascript/2022-12-29 day14.gif]]\n### 收获\n```css\n\n```\n\n## 2022-12-30 day15\n### 效果图 \n\n![[2022-12-30 day15.gif]]\n### 收获\n```javascript\n// +的妙用\n// 1.当 + 号的两边都是number类型的时候，此时 + 号 代表数学符号加法\n// 2. 当 + 号写在一个数据前面的时候，此时 + 号代表数学符号 正号\n// 可以给字符串隐式转换\n// 3. 当 + 号的两边，只要有一边是string类型的时候，此时 + 号代表字符串的连接符\n```\n```css\n\n```\n## 2022-12-31 day16\n### 效果图 \n![[2022-12-31 day16.gif]]\n### 收获\n```javascript\n// 底下水瓶的逻辑\n// 点按指定水瓶后前面的水瓶都点亮\n// 当水瓶是点亮的最后一个,再次点击就会切换状态\n```\n```css\n\n```\n\n明天考虑实现一个玩文件里添加指定内容的东西,最好是动态的.\n\n\n\n\n\n# 模板\n## 时间\n### 效果图 \n\n### 收获\n```javascript\n\n```\n```css\n\n```\n\n","source":"_posts/学习笔记/JavaScript练习.md","raw":"---\ntitle: JavaScript练习\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# HTML+Css+JavaScript 50天项目练习\n\n## 2022-12-16  day01\n### 效果图\n![[2022-12-16 day01.gif]]\n### 收获\n```javascript\n// 通过css选择器去选择指定的dom节点\nlet panels = document.querySelectorAll('.panel')\n// 之前都是直接操作className\npanels[i] += \" active\"\npanels[i] = \"panel\"\n// 通过classList来添加或者删除class\npanels[i].classList.add(\"active\");\npanel.classList.remove('active')\n```\n```css\n/* 在active类后对相关的元素进行操作 */\n.mian-warp .panel.active h3 {\n    opacity: 1;\n    transition: opacity 0.3s ease-in 0.4s;\n}\n/* 元素想要垂直水平居中可以设置父元素为flex\n   其中align-items使得子元素垂直居中\n   justify-content使得字元素水平居中\n   overflow是防止出现滚动条\n*/\nbody {\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n}\n/* flex元素在不设置大小的时候，可以直接设置flex来变得比其他同级要大\n   于此同时使用vh,或者vw来适应浏览器窗口大小的变化\n*/\n.mian-warp .panel {\n    height: 80vh;\n    flex: 0.5;\n    margin: 10px;\n}\n.mian-warp .panel.active {\n    flex: 5;\n}\n\n```\n## 2022-12-17 day02\n### 效果图\n![[2022-12-17 day02.gif]]\n### 收获\n```javascript\n// 可以直接设置按钮失效\nnext.disabled = false\n```\n```css\n/**\n我是在除第一的后面几个添加两个伪类一个是灰色背景一个是有颜色的\n  not选择器，决定不选哪些\n**/\nli:not(:first-child)::before {   \n}\n/**\n学习到可以通过设置一个大的背景通过遍历节点来控制蓝色进度条的长度\n**/\n```\n\n \n##  2022-12-18 day03\n### 效果图\n![[2022-12-18 day03.gif]]\n### 收获\n```javascript\n// js就是普通的点击事件\n```\n```css\n/**\n\t‘+’兄弟选择器的使用\n\t实现牵一发而动全身，一个兄弟动跟前的兄弟也动\n     .main.active+nav .nav-items li:nth-child(2) {}\n\t旋转角度以及焦点\n\t transform-origin: top left;\n\t 猫头鹰选择器 body * + *{}\n**/\n```\n##  2022-12-19 day04\n### 效果图\n![[2022-12-19 day04.gif]]\n\n\n### 收获\n```javascript\n // javascript实现很简单就是点击按钮的时候\n // 简单的将输入框的宽度增加缩小\n```\n```css\n/**\n css中需要注意的就是input和button是行内块，他们的基线不同\n 使用vertical-align:middle;来统一基线，达到两个元素齐平\n 因为是行内元素要让他两相连可以在html结构中不换行书写\n 以及在html加载结束后才开始加载js\n window.onload=function(){}\n ()()立即执行的匿名函数\n**/\n```\n\n## 2022-12-20 day05\n### 效果图\n![[2022-12-20 day05.gif]]\n\n\n### 收获\n```javascript\n// setInterval的使用\nlet t=setInterval(blurring,20);\nfunction blurring(){\n        idx+=1;\n        if(idx>99){\n            clearInterval(t);\n        }\n}\n// 以及将99分为30部分\n// idx在99中的比率,*30就为等比例\n\n```\n```css\n\n```\n\n## 2022-12-21 day06\n### 效果图\n \n ![[2022-12-21 day06.gif]]\n\n### 收获\n```javascript\n// 当前窗口的高度\n window.innerHeight\n // dom元素e距离窗口顶部的距离\n e.getBoundingClientRect().top\n```\n```css\n\n```\n\n\n## 2022-12-22 day07\n### 效果图\n ![[2022-12-22 day07.gif]]\n\n\n### 收获\n```javascript\n \n\n```\n```css\n\n```\n\n\n## 2022-12-23 day08\n### 效果图\n \n![[2022-12-23 day08.gif]]\n\n### 收获\n```javascript\n \n// 利用js将原来的字符串分为字符,并且单独加上一个过渡延迟\nlabels.forEach(label => {\nlabel.innerHTML = label.innerText\n.split('').map((letter, idx) => `<span style=\"transitiondelay:${idx*50}ms\">${letter}</span>`)\n        .join('')\n```\n```css\n\n```\n\n##  2022-12-24 day09\n### 效果图\n \n![[图片/javascript/2022-12-24 day09.gif]]\n### 收获\n```javascript\n// 播放音乐,选中audio的dom对象\n\tsong.play();\n\n\n```\n```html\n<audio class=\"a1\" src=\"./Sound Board - 50项目50天.mp3\"></audio>\n\n```\n\n## 2022-12-25 day10\n### 效果图 \n![[2022-12-25 day10.gif]]\n### 收获\n```javascript\n// fetch的使用\n    async function get_jokes(){\n\t\t// 请求url\n        let a=await fetch(\"https://icanhazdadjoke.com/\",\n        // 请求头\n        {\n\t        headers:{\n\t            Accept:  \"application/json\"\n\t        }\n        })\n        // 响应\n        .then(resp=>resp.json())\n\n        jokes.innerText=await a.joke;\n\n    }\n```\n```css\n\n```\n\n##  2022-12-26 day11\n### 效果图 \n![[2022-12-26 day11.gif]]\n### 收获\n```javascript\n// 使用innerHTML插入网页\n// 以及key监听事件\n```\n```css\n\n```\n##  2022-12-27 day12\n### 效果图 \n![[2022-12-27 day12.gif]]\n### 收获\n```javascript\n// 给父元素类名做操作\n// toggle有就remove,没有就add\ne.parentElement.classList.toggle(\"active\");\n```\n```css\n\n```\n\n## 2022-12-28 day13\n### 效果图 \n![[2022-12-28 day13.gif]]\n\n### 收获\n```javascript\n//定时器,延时器的使用\nlet track=setInterval(track1,100);\n    function track1(){\n        buttons.forEach(e=>e.classList.remove(\"active\"));\n      buttons[Math.floor(Math.random()*buttons.length)].classList.add(\"active\");\n    }\n    setTimeout(function(){\n        clearInterval(track);\n    },2000);\n    //以及添加按钮监听事件,在按钮按了之后就清空按钮,重新绘制计算按钮\n    \n```\n \n## 2022-12-29 day14\n### 效果图 \n![[图片/javascript/2022-12-29 day14.gif]]\n### 收获\n```css\n\n```\n\n## 2022-12-30 day15\n### 效果图 \n\n![[2022-12-30 day15.gif]]\n### 收获\n```javascript\n// +的妙用\n// 1.当 + 号的两边都是number类型的时候，此时 + 号 代表数学符号加法\n// 2. 当 + 号写在一个数据前面的时候，此时 + 号代表数学符号 正号\n// 可以给字符串隐式转换\n// 3. 当 + 号的两边，只要有一边是string类型的时候，此时 + 号代表字符串的连接符\n```\n```css\n\n```\n## 2022-12-31 day16\n### 效果图 \n![[2022-12-31 day16.gif]]\n### 收获\n```javascript\n// 底下水瓶的逻辑\n// 点按指定水瓶后前面的水瓶都点亮\n// 当水瓶是点亮的最后一个,再次点击就会切换状态\n```\n```css\n\n```\n\n明天考虑实现一个玩文件里添加指定内容的东西,最好是动态的.\n\n\n\n\n\n# 模板\n## 时间\n### 效果图 \n\n### 收获\n```javascript\n\n```\n```css\n\n```\n\n","slug":"学习笔记/JavaScript练习","published":1,"updated":"2023-05-19T14:07:31.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oaf0003wwvnaauc6xq8","content":"<h1 id=\"HTML-Css-JavaScript-50天项目练习\"><a href=\"#HTML-Css-JavaScript-50天项目练习\" class=\"headerlink\" title=\"HTML+Css+JavaScript 50天项目练习\"></a>HTML+Css+JavaScript 50天项目练习</h1><h2 id=\"2022-12-16-day01\"><a href=\"#2022-12-16-day01\" class=\"headerlink\" title=\"2022-12-16  day01\"></a>2022-12-16  day01</h2><h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-16 day01.gif]]</p>\n<h3 id=\"收获\"><a href=\"#收获\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过css选择器去选择指定的dom节点</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> panels = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;.panel&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 之前都是直接操作className</span></span><br><span class=\"line\">panels[i] += <span class=\"string\">&quot; active&quot;</span></span><br><span class=\"line\">panels[i] = <span class=\"string\">&quot;panel&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 通过classList来添加或者删除class</span></span><br><span class=\"line\">panels[i].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;active&quot;</span>);</span><br><span class=\"line\">panel.<span class=\"property\">classList</span>.<span class=\"title function_\">remove</span>(<span class=\"string\">&#x27;active&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 在active类后对相关的元素进行操作 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.mian-warp</span> <span class=\"selector-class\">.panel</span><span class=\"selector-class\">.active</span> <span class=\"selector-tag\">h3</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: opacity <span class=\"number\">0.3s</span> ease-in <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 元素想要垂直水平居中可以设置父元素为flex</span></span><br><span class=\"line\"><span class=\"comment\">   其中align-items使得子元素垂直居中</span></span><br><span class=\"line\"><span class=\"comment\">   justify-content使得字元素水平居中</span></span><br><span class=\"line\"><span class=\"comment\">   overflow是防止出现滚动条</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* flex元素在不设置大小的时候，可以直接设置flex来变得比其他同级要大</span></span><br><span class=\"line\"><span class=\"comment\">   于此同时使用vh,或者vw来适应浏览器窗口大小的变化</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.mian-warp</span> <span class=\"selector-class\">.panel</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">80vh</span>;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">0.5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.mian-warp</span> <span class=\"selector-class\">.panel</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-17-day02\"><a href=\"#2022-12-17-day02\" class=\"headerlink\" title=\"2022-12-17 day02\"></a>2022-12-17 day02</h2><h3 id=\"效果图-1\"><a href=\"#效果图-1\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-17 day02.gif]]</p>\n<h3 id=\"收获-1\"><a href=\"#收获-1\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 可以直接设置按钮失效</span></span><br><span class=\"line\">next.<span class=\"property\">disabled</span> = <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">我是在除第一的后面几个添加两个伪类一个是灰色背景一个是有颜色的</span></span><br><span class=\"line\"><span class=\"comment\">  not选择器，决定不选哪些</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:not</span>(<span class=\"selector-pseudo\">:first</span>-child)<span class=\"selector-pseudo\">::before</span> &#123;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">学习到可以通过设置一个大的背景通过遍历节点来控制蓝色进度条的长度</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-18-day03\"><a href=\"#2022-12-18-day03\" class=\"headerlink\" title=\"2022-12-18 day03\"></a>2022-12-18 day03</h2><h3 id=\"效果图-2\"><a href=\"#效果图-2\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-18 day03.gif]]</p>\n<h3 id=\"收获-2\"><a href=\"#收获-2\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// js就是普通的点击事件</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t‘+’兄弟选择器的使用</span></span><br><span class=\"line\"><span class=\"comment\">\t实现牵一发而动全身，一个兄弟动跟前的兄弟也动</span></span><br><span class=\"line\"><span class=\"comment\">     .main.active+nav .nav-items li:nth-child(2) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t旋转角度以及焦点</span></span><br><span class=\"line\"><span class=\"comment\">\t transform-origin: top left;</span></span><br><span class=\"line\"><span class=\"comment\">\t 猫头鹰选择器 body * + *&#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-19-day04\"><a href=\"#2022-12-19-day04\" class=\"headerlink\" title=\"2022-12-19 day04\"></a>2022-12-19 day04</h2><h3 id=\"效果图-3\"><a href=\"#效果图-3\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-19 day04.gif]]</p>\n<h3 id=\"收获-3\"><a href=\"#收获-3\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// javascript实现很简单就是点击按钮的时候</span></span><br><span class=\"line\"><span class=\"comment\">// 简单的将输入框的宽度增加缩小</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> css中需要注意的就是input和button是行内块，他们的基线不同</span></span><br><span class=\"line\"><span class=\"comment\"> 使用vertical-align:middle;来统一基线，达到两个元素齐平</span></span><br><span class=\"line\"><span class=\"comment\"> 因为是行内元素要让他两相连可以在html结构中不换行书写</span></span><br><span class=\"line\"><span class=\"comment\"> 以及在html加载结束后才开始加载js</span></span><br><span class=\"line\"><span class=\"comment\"> window.onload=function()&#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> ()()立即执行的匿名函数</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-20-day05\"><a href=\"#2022-12-20-day05\" class=\"headerlink\" title=\"2022-12-20 day05\"></a>2022-12-20 day05</h2><h3 id=\"效果图-4\"><a href=\"#效果图-4\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-20 day05.gif]]</p>\n<h3 id=\"收获-4\"><a href=\"#收获-4\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// setInterval的使用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> t=<span class=\"built_in\">setInterval</span>(blurring,<span class=\"number\">20</span>);</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">blurring</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        idx+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(idx&gt;<span class=\"number\">99</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">clearInterval</span>(t);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 以及将99分为30部分</span></span><br><span class=\"line\"><span class=\"comment\">// idx在99中的比率,*30就为等比例</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-21-day06\"><a href=\"#2022-12-21-day06\" class=\"headerlink\" title=\"2022-12-21 day06\"></a>2022-12-21 day06</h2><h3 id=\"效果图-5\"><a href=\"#效果图-5\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p> ![[2022-12-21 day06.gif]]</p>\n<h3 id=\"收获-5\"><a href=\"#收获-5\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 当前窗口的高度</span></span><br><span class=\"line\"> <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span></span><br><span class=\"line\"> <span class=\"comment\">// dom元素e距离窗口顶部的距离</span></span><br><span class=\"line\"> e.<span class=\"title function_\">getBoundingClientRect</span>().<span class=\"property\">top</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"2022-12-22-day07\"><a href=\"#2022-12-22-day07\" class=\"headerlink\" title=\"2022-12-22 day07\"></a>2022-12-22 day07</h2><h3 id=\"效果图-6\"><a href=\"#效果图-6\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p> ![[2022-12-22 day07.gif]]</p>\n<h3 id=\"收获-6\"><a href=\"#收获-6\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"2022-12-23-day08\"><a href=\"#2022-12-23-day08\" class=\"headerlink\" title=\"2022-12-23 day08\"></a>2022-12-23 day08</h2><h3 id=\"效果图-7\"><a href=\"#效果图-7\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-23 day08.gif]]</p>\n<h3 id=\"收获-7\"><a href=\"#收获-7\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 利用js将原来的字符串分为字符,并且单独加上一个过渡延迟</span></span><br><span class=\"line\">labels.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">label</span> =&gt;</span> &#123;</span><br><span class=\"line\">label.<span class=\"property\">innerHTML</span> = label.<span class=\"property\">innerText</span></span><br><span class=\"line\">.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">letter, idx</span>) =&gt;</span> <span class=\"string\">`&lt;span style=&quot;transitiondelay:<span class=\"subst\">$&#123;idx*<span class=\"number\">50</span>&#125;</span>ms&quot;&gt;<span class=\"subst\">$&#123;letter&#125;</span>&lt;/span&gt;`</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-24-day09\"><a href=\"#2022-12-24-day09\" class=\"headerlink\" title=\"2022-12-24 day09\"></a>2022-12-24 day09</h2><h3 id=\"效果图-8\"><a href=\"#效果图-8\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[图片&#x2F;javascript&#x2F;2022-12-24 day09.gif]]</p>\n<h3 id=\"收获-8\"><a href=\"#收获-8\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 播放音乐,选中audio的dom对象</span></span><br><span class=\"line\">\tsong.<span class=\"title function_\">play</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;a1&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./Sound Board - 50项目50天.mp3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-25-day10\"><a href=\"#2022-12-25-day10\" class=\"headerlink\" title=\"2022-12-25 day10\"></a>2022-12-25 day10</h2><h3 id=\"效果图-9\"><a href=\"#效果图-9\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-25 day10.gif]]</p>\n<h3 id=\"收获-9\"><a href=\"#收获-9\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// fetch的使用</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">get_jokes</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 请求url</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> a=<span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"string\">&quot;https://icanhazdadjoke.com/&quot;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 请求头</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">\t        <span class=\"attr\">headers</span>:&#123;</span><br><span class=\"line\">\t            <span class=\"title class_\">Accept</span>:  <span class=\"string\">&quot;application/json&quot;</span></span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"comment\">// 响应</span></span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span>=&gt;</span>resp.<span class=\"title function_\">json</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">        jokes.<span class=\"property\">innerText</span>=<span class=\"keyword\">await</span> a.<span class=\"property\">joke</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-26-day11\"><a href=\"#2022-12-26-day11\" class=\"headerlink\" title=\"2022-12-26 day11\"></a>2022-12-26 day11</h2><h3 id=\"效果图-10\"><a href=\"#效果图-10\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-26 day11.gif]]</p>\n<h3 id=\"收获-10\"><a href=\"#收获-10\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用innerHTML插入网页</span></span><br><span class=\"line\"><span class=\"comment\">// 以及key监听事件</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-27-day12\"><a href=\"#2022-12-27-day12\" class=\"headerlink\" title=\"2022-12-27 day12\"></a>2022-12-27 day12</h2><h3 id=\"效果图-11\"><a href=\"#效果图-11\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-27 day12.gif]]</p>\n<h3 id=\"收获-11\"><a href=\"#收获-11\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 给父元素类名做操作</span></span><br><span class=\"line\"><span class=\"comment\">// toggle有就remove,没有就add</span></span><br><span class=\"line\">e.<span class=\"property\">parentElement</span>.<span class=\"property\">classList</span>.<span class=\"title function_\">toggle</span>(<span class=\"string\">&quot;active&quot;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-28-day13\"><a href=\"#2022-12-28-day13\" class=\"headerlink\" title=\"2022-12-28 day13\"></a>2022-12-28 day13</h2><h3 id=\"效果图-12\"><a href=\"#效果图-12\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-28 day13.gif]]</p>\n<h3 id=\"收获-12\"><a href=\"#收获-12\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定时器,延时器的使用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> track=<span class=\"built_in\">setInterval</span>(track1,<span class=\"number\">100</span>);</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">track1</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        buttons.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">e</span>=&gt;</span>e.<span class=\"property\">classList</span>.<span class=\"title function_\">remove</span>(<span class=\"string\">&quot;active&quot;</span>));</span><br><span class=\"line\">      buttons[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*buttons.<span class=\"property\">length</span>)].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;active&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearInterval</span>(track);</span><br><span class=\"line\">    &#125;,<span class=\"number\">2000</span>);</span><br><span class=\"line\">    <span class=\"comment\">//以及添加按钮监听事件,在按钮按了之后就清空按钮,重新绘制计算按钮</span></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-29-day14\"><a href=\"#2022-12-29-day14\" class=\"headerlink\" title=\"2022-12-29 day14\"></a>2022-12-29 day14</h2><h3 id=\"效果图-13\"><a href=\"#效果图-13\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[图片&#x2F;javascript&#x2F;2022-12-29 day14.gif]]</p>\n<h3 id=\"收获-13\"><a href=\"#收获-13\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-30-day15\"><a href=\"#2022-12-30-day15\" class=\"headerlink\" title=\"2022-12-30 day15\"></a>2022-12-30 day15</h2><h3 id=\"效果图-14\"><a href=\"#效果图-14\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-30 day15.gif]]</p>\n<h3 id=\"收获-14\"><a href=\"#收获-14\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// +的妙用</span></span><br><span class=\"line\"><span class=\"comment\">// 1.当 + 号的两边都是number类型的时候，此时 + 号 代表数学符号加法</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 当 + 号写在一个数据前面的时候，此时 + 号代表数学符号 正号</span></span><br><span class=\"line\"><span class=\"comment\">// 可以给字符串隐式转换</span></span><br><span class=\"line\"><span class=\"comment\">// 3. 当 + 号的两边，只要有一边是string类型的时候，此时 + 号代表字符串的连接符</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-31-day16\"><a href=\"#2022-12-31-day16\" class=\"headerlink\" title=\"2022-12-31 day16\"></a>2022-12-31 day16</h2><h3 id=\"效果图-15\"><a href=\"#效果图-15\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-31 day16.gif]]</p>\n<h3 id=\"收获-15\"><a href=\"#收获-15\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 底下水瓶的逻辑</span></span><br><span class=\"line\"><span class=\"comment\">// 点按指定水瓶后前面的水瓶都点亮</span></span><br><span class=\"line\"><span class=\"comment\">// 当水瓶是点亮的最后一个,再次点击就会切换状态</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>明天考虑实现一个玩文件里添加指定内容的东西,最好是动态的.</p>\n<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><h2 id=\"时间\"><a href=\"#时间\" class=\"headerlink\" title=\"时间\"></a>时间</h2><h3 id=\"效果图-16\"><a href=\"#效果图-16\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><h3 id=\"收获-16\"><a href=\"#收获-16\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"HTML-Css-JavaScript-50天项目练习\"><a href=\"#HTML-Css-JavaScript-50天项目练习\" class=\"headerlink\" title=\"HTML+Css+JavaScript 50天项目练习\"></a>HTML+Css+JavaScript 50天项目练习</h1><h2 id=\"2022-12-16-day01\"><a href=\"#2022-12-16-day01\" class=\"headerlink\" title=\"2022-12-16  day01\"></a>2022-12-16  day01</h2><h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-16 day01.gif]]</p>\n<h3 id=\"收获\"><a href=\"#收获\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过css选择器去选择指定的dom节点</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> panels = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;.panel&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 之前都是直接操作className</span></span><br><span class=\"line\">panels[i] += <span class=\"string\">&quot; active&quot;</span></span><br><span class=\"line\">panels[i] = <span class=\"string\">&quot;panel&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 通过classList来添加或者删除class</span></span><br><span class=\"line\">panels[i].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;active&quot;</span>);</span><br><span class=\"line\">panel.<span class=\"property\">classList</span>.<span class=\"title function_\">remove</span>(<span class=\"string\">&#x27;active&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 在active类后对相关的元素进行操作 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.mian-warp</span> <span class=\"selector-class\">.panel</span><span class=\"selector-class\">.active</span> <span class=\"selector-tag\">h3</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: opacity <span class=\"number\">0.3s</span> ease-in <span class=\"number\">0.4s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 元素想要垂直水平居中可以设置父元素为flex</span></span><br><span class=\"line\"><span class=\"comment\">   其中align-items使得子元素垂直居中</span></span><br><span class=\"line\"><span class=\"comment\">   justify-content使得字元素水平居中</span></span><br><span class=\"line\"><span class=\"comment\">   overflow是防止出现滚动条</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* flex元素在不设置大小的时候，可以直接设置flex来变得比其他同级要大</span></span><br><span class=\"line\"><span class=\"comment\">   于此同时使用vh,或者vw来适应浏览器窗口大小的变化</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.mian-warp</span> <span class=\"selector-class\">.panel</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">80vh</span>;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">0.5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.mian-warp</span> <span class=\"selector-class\">.panel</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex</span>: <span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-17-day02\"><a href=\"#2022-12-17-day02\" class=\"headerlink\" title=\"2022-12-17 day02\"></a>2022-12-17 day02</h2><h3 id=\"效果图-1\"><a href=\"#效果图-1\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-17 day02.gif]]</p>\n<h3 id=\"收获-1\"><a href=\"#收获-1\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 可以直接设置按钮失效</span></span><br><span class=\"line\">next.<span class=\"property\">disabled</span> = <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">我是在除第一的后面几个添加两个伪类一个是灰色背景一个是有颜色的</span></span><br><span class=\"line\"><span class=\"comment\">  not选择器，决定不选哪些</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:not</span>(<span class=\"selector-pseudo\">:first</span>-child)<span class=\"selector-pseudo\">::before</span> &#123;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">学习到可以通过设置一个大的背景通过遍历节点来控制蓝色进度条的长度</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-18-day03\"><a href=\"#2022-12-18-day03\" class=\"headerlink\" title=\"2022-12-18 day03\"></a>2022-12-18 day03</h2><h3 id=\"效果图-2\"><a href=\"#效果图-2\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-18 day03.gif]]</p>\n<h3 id=\"收获-2\"><a href=\"#收获-2\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// js就是普通的点击事件</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t‘+’兄弟选择器的使用</span></span><br><span class=\"line\"><span class=\"comment\">\t实现牵一发而动全身，一个兄弟动跟前的兄弟也动</span></span><br><span class=\"line\"><span class=\"comment\">     .main.active+nav .nav-items li:nth-child(2) &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t旋转角度以及焦点</span></span><br><span class=\"line\"><span class=\"comment\">\t transform-origin: top left;</span></span><br><span class=\"line\"><span class=\"comment\">\t 猫头鹰选择器 body * + *&#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-19-day04\"><a href=\"#2022-12-19-day04\" class=\"headerlink\" title=\"2022-12-19 day04\"></a>2022-12-19 day04</h2><h3 id=\"效果图-3\"><a href=\"#效果图-3\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-19 day04.gif]]</p>\n<h3 id=\"收获-3\"><a href=\"#收获-3\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// javascript实现很简单就是点击按钮的时候</span></span><br><span class=\"line\"><span class=\"comment\">// 简单的将输入框的宽度增加缩小</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> css中需要注意的就是input和button是行内块，他们的基线不同</span></span><br><span class=\"line\"><span class=\"comment\"> 使用vertical-align:middle;来统一基线，达到两个元素齐平</span></span><br><span class=\"line\"><span class=\"comment\"> 因为是行内元素要让他两相连可以在html结构中不换行书写</span></span><br><span class=\"line\"><span class=\"comment\"> 以及在html加载结束后才开始加载js</span></span><br><span class=\"line\"><span class=\"comment\"> window.onload=function()&#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> ()()立即执行的匿名函数</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-20-day05\"><a href=\"#2022-12-20-day05\" class=\"headerlink\" title=\"2022-12-20 day05\"></a>2022-12-20 day05</h2><h3 id=\"效果图-4\"><a href=\"#效果图-4\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-20 day05.gif]]</p>\n<h3 id=\"收获-4\"><a href=\"#收获-4\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// setInterval的使用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> t=<span class=\"built_in\">setInterval</span>(blurring,<span class=\"number\">20</span>);</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">blurring</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        idx+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(idx&gt;<span class=\"number\">99</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">clearInterval</span>(t);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 以及将99分为30部分</span></span><br><span class=\"line\"><span class=\"comment\">// idx在99中的比率,*30就为等比例</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-21-day06\"><a href=\"#2022-12-21-day06\" class=\"headerlink\" title=\"2022-12-21 day06\"></a>2022-12-21 day06</h2><h3 id=\"效果图-5\"><a href=\"#效果图-5\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p> ![[2022-12-21 day06.gif]]</p>\n<h3 id=\"收获-5\"><a href=\"#收获-5\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 当前窗口的高度</span></span><br><span class=\"line\"> <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span></span><br><span class=\"line\"> <span class=\"comment\">// dom元素e距离窗口顶部的距离</span></span><br><span class=\"line\"> e.<span class=\"title function_\">getBoundingClientRect</span>().<span class=\"property\">top</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"2022-12-22-day07\"><a href=\"#2022-12-22-day07\" class=\"headerlink\" title=\"2022-12-22 day07\"></a>2022-12-22 day07</h2><h3 id=\"效果图-6\"><a href=\"#效果图-6\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p> ![[2022-12-22 day07.gif]]</p>\n<h3 id=\"收获-6\"><a href=\"#收获-6\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"2022-12-23-day08\"><a href=\"#2022-12-23-day08\" class=\"headerlink\" title=\"2022-12-23 day08\"></a>2022-12-23 day08</h2><h3 id=\"效果图-7\"><a href=\"#效果图-7\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-23 day08.gif]]</p>\n<h3 id=\"收获-7\"><a href=\"#收获-7\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 利用js将原来的字符串分为字符,并且单独加上一个过渡延迟</span></span><br><span class=\"line\">labels.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">label</span> =&gt;</span> &#123;</span><br><span class=\"line\">label.<span class=\"property\">innerHTML</span> = label.<span class=\"property\">innerText</span></span><br><span class=\"line\">.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">letter, idx</span>) =&gt;</span> <span class=\"string\">`&lt;span style=&quot;transitiondelay:<span class=\"subst\">$&#123;idx*<span class=\"number\">50</span>&#125;</span>ms&quot;&gt;<span class=\"subst\">$&#123;letter&#125;</span>&lt;/span&gt;`</span>)</span><br><span class=\"line\">        .<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-24-day09\"><a href=\"#2022-12-24-day09\" class=\"headerlink\" title=\"2022-12-24 day09\"></a>2022-12-24 day09</h2><h3 id=\"效果图-8\"><a href=\"#效果图-8\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[图片&#x2F;javascript&#x2F;2022-12-24 day09.gif]]</p>\n<h3 id=\"收获-8\"><a href=\"#收获-8\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 播放音乐,选中audio的dom对象</span></span><br><span class=\"line\">\tsong.<span class=\"title function_\">play</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;a1&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./Sound Board - 50项目50天.mp3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-25-day10\"><a href=\"#2022-12-25-day10\" class=\"headerlink\" title=\"2022-12-25 day10\"></a>2022-12-25 day10</h2><h3 id=\"效果图-9\"><a href=\"#效果图-9\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-25 day10.gif]]</p>\n<h3 id=\"收获-9\"><a href=\"#收获-9\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// fetch的使用</span></span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">get_jokes</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 请求url</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> a=<span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"string\">&quot;https://icanhazdadjoke.com/&quot;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 请求头</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">\t        <span class=\"attr\">headers</span>:&#123;</span><br><span class=\"line\">\t            <span class=\"title class_\">Accept</span>:  <span class=\"string\">&quot;application/json&quot;</span></span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"comment\">// 响应</span></span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span>=&gt;</span>resp.<span class=\"title function_\">json</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">        jokes.<span class=\"property\">innerText</span>=<span class=\"keyword\">await</span> a.<span class=\"property\">joke</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-26-day11\"><a href=\"#2022-12-26-day11\" class=\"headerlink\" title=\"2022-12-26 day11\"></a>2022-12-26 day11</h2><h3 id=\"效果图-10\"><a href=\"#效果图-10\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-26 day11.gif]]</p>\n<h3 id=\"收获-10\"><a href=\"#收获-10\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用innerHTML插入网页</span></span><br><span class=\"line\"><span class=\"comment\">// 以及key监听事件</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-27-day12\"><a href=\"#2022-12-27-day12\" class=\"headerlink\" title=\"2022-12-27 day12\"></a>2022-12-27 day12</h2><h3 id=\"效果图-11\"><a href=\"#效果图-11\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-27 day12.gif]]</p>\n<h3 id=\"收获-11\"><a href=\"#收获-11\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 给父元素类名做操作</span></span><br><span class=\"line\"><span class=\"comment\">// toggle有就remove,没有就add</span></span><br><span class=\"line\">e.<span class=\"property\">parentElement</span>.<span class=\"property\">classList</span>.<span class=\"title function_\">toggle</span>(<span class=\"string\">&quot;active&quot;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-28-day13\"><a href=\"#2022-12-28-day13\" class=\"headerlink\" title=\"2022-12-28 day13\"></a>2022-12-28 day13</h2><h3 id=\"效果图-12\"><a href=\"#效果图-12\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-28 day13.gif]]</p>\n<h3 id=\"收获-12\"><a href=\"#收获-12\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定时器,延时器的使用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> track=<span class=\"built_in\">setInterval</span>(track1,<span class=\"number\">100</span>);</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">track1</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        buttons.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">e</span>=&gt;</span>e.<span class=\"property\">classList</span>.<span class=\"title function_\">remove</span>(<span class=\"string\">&quot;active&quot;</span>));</span><br><span class=\"line\">      buttons[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*buttons.<span class=\"property\">length</span>)].<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;active&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearInterval</span>(track);</span><br><span class=\"line\">    &#125;,<span class=\"number\">2000</span>);</span><br><span class=\"line\">    <span class=\"comment\">//以及添加按钮监听事件,在按钮按了之后就清空按钮,重新绘制计算按钮</span></span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-29-day14\"><a href=\"#2022-12-29-day14\" class=\"headerlink\" title=\"2022-12-29 day14\"></a>2022-12-29 day14</h2><h3 id=\"效果图-13\"><a href=\"#效果图-13\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[图片&#x2F;javascript&#x2F;2022-12-29 day14.gif]]</p>\n<h3 id=\"收获-13\"><a href=\"#收获-13\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2022-12-30-day15\"><a href=\"#2022-12-30-day15\" class=\"headerlink\" title=\"2022-12-30 day15\"></a>2022-12-30 day15</h2><h3 id=\"效果图-14\"><a href=\"#效果图-14\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-30 day15.gif]]</p>\n<h3 id=\"收获-14\"><a href=\"#收获-14\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// +的妙用</span></span><br><span class=\"line\"><span class=\"comment\">// 1.当 + 号的两边都是number类型的时候，此时 + 号 代表数学符号加法</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 当 + 号写在一个数据前面的时候，此时 + 号代表数学符号 正号</span></span><br><span class=\"line\"><span class=\"comment\">// 可以给字符串隐式转换</span></span><br><span class=\"line\"><span class=\"comment\">// 3. 当 + 号的两边，只要有一边是string类型的时候，此时 + 号代表字符串的连接符</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2022-12-31-day16\"><a href=\"#2022-12-31-day16\" class=\"headerlink\" title=\"2022-12-31 day16\"></a>2022-12-31 day16</h2><h3 id=\"效果图-15\"><a href=\"#效果图-15\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>![[2022-12-31 day16.gif]]</p>\n<h3 id=\"收获-15\"><a href=\"#收获-15\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 底下水瓶的逻辑</span></span><br><span class=\"line\"><span class=\"comment\">// 点按指定水瓶后前面的水瓶都点亮</span></span><br><span class=\"line\"><span class=\"comment\">// 当水瓶是点亮的最后一个,再次点击就会切换状态</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>明天考虑实现一个玩文件里添加指定内容的东西,最好是动态的.</p>\n<h1 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h1><h2 id=\"时间\"><a href=\"#时间\" class=\"headerlink\" title=\"时间\"></a>时间</h2><h3 id=\"效果图-16\"><a href=\"#效果图-16\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><h3 id=\"收获-16\"><a href=\"#收获-16\" class=\"headerlink\" title=\"收获\"></a>收获</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"git","date":"2023-05-05T13:30:42.000Z","_content":"1.  Git init  初始化仓库\n2.  Git add . 将所有文件添加到仓库\n3.  Git commit -m '提交信息' 将文件提交到仓库\n4.  git config --global user. email ' 2435960154@qq.com ' 初始化\n5.  git config --global user. name 'wrw' 初始化\n6. ","source":"_posts/学习笔记/git.md","raw":"---\ntitle: git\ndate: 2023-05-05 21:30:42\ntags:  \n---\n1.  Git init  初始化仓库\n2.  Git add . 将所有文件添加到仓库\n3.  Git commit -m '提交信息' 将文件提交到仓库\n4.  git config --global user. email ' 2435960154@qq.com ' 初始化\n5.  git config --global user. name 'wrw' 初始化\n6. ","slug":"学习笔记/git","published":1,"updated":"2023-05-19T14:07:31.049Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oaf0004wwvnb9yt8pbg","content":"<ol>\n<li>Git init  初始化仓库</li>\n<li>Git add . 将所有文件添加到仓库</li>\n<li>Git commit -m ‘提交信息’ 将文件提交到仓库</li>\n<li>git config –global user. email ‘ <a href=\"mailto:&#50;&#x34;&#51;&#x35;&#x39;&#54;&#48;&#x31;&#x35;&#52;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;\">&#50;&#x34;&#51;&#x35;&#x39;&#54;&#48;&#x31;&#x35;&#52;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;</a> ‘ 初始化</li>\n<li>git config –global user. name ‘wrw’ 初始化</li>\n<li></li>\n</ol>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<ol>\n<li>Git init  初始化仓库</li>\n<li>Git add . 将所有文件添加到仓库</li>\n<li>Git commit -m ‘提交信息’ 将文件提交到仓库</li>\n<li>git config –global user. email ‘ <a href=\"mailto:&#50;&#x34;&#51;&#x35;&#x39;&#54;&#48;&#x31;&#x35;&#52;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;\">&#50;&#x34;&#51;&#x35;&#x39;&#54;&#48;&#x31;&#x35;&#52;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;</a> ‘ 初始化</li>\n<li>git config –global user. name ‘wrw’ 初始化</li>\n<li></li>\n</ol>\n"},{"title":"javaScript深入","date":"2023-05-05T13:30:42.000Z","_content":"变量,函数会被添加到全局环境当中\n```JavaScript\n    var yy=\"sss\"\n    function foo(){\n        console.log(\"goo\");\n    }\n    console.log(window);\n```\n![[Pasted image 20230423131206.png]]\n![[Pasted image 20230423131314.png]]\n\n声明的函数会在内存创建一个对象,包含父作用域的作用域链(Scopes),\n只要用var声明一个变量,这个变量在这个作用域开始的时候就被bind在当前作用域对象中,只不过没到声明的部分,他值为underfine\n```JavaScript\n    function foo(){\n        // 在函数编译的过程中,sss就被绑定在当前活动对象的属性上,没初始化的时候是underfine\n        console.log(sss);//underfine\n        // 被赋值初始化,就不是underfine了\n        var sss=\"sdfd\";\n        console.log(sss);//sdfd\n    }\n    foo()\n\n```\n同上面这个一样k1在函数作用域中被绑定在作用域对象上默认为underfine\n```javascript\n    var k1=110\n\n    function foo(){\n\n        console.log(k1);// underfine\n\n        var k1=120;\n\n        console.log(k1);// 120\n\n    }\n```\n这里在函数作用域对象上寻找k1没有找到,就到当前对象的作用域链上父作用域寻找没找到就报错\n```javascript\n    var k1=110\n\n    function foo(){\n\n        console.log(k1);// 120\n\n    }\n```\n虽然bar在foo中被调用,当时bar的父作用域是全局对象,他找到的是k1=110,而不是调用他的函数中的k1=888\n```JavaScript\n    var k1=110\n\n    function foo(){\n\n        var k1=888\n\n        console.log(k1);// 888\n\n        bar()\n\n    }\n\n  \n\n    function bar(){\n\n        console.log(k1);// 110\n\n    }\n\n    foo()\n```","source":"_posts/学习笔记/javaScript深入.md","raw":"---\ntitle: javaScript深入\ndate: 2023-05-05 21:30:42\ntags:  \n---\n变量,函数会被添加到全局环境当中\n```JavaScript\n    var yy=\"sss\"\n    function foo(){\n        console.log(\"goo\");\n    }\n    console.log(window);\n```\n![[Pasted image 20230423131206.png]]\n![[Pasted image 20230423131314.png]]\n\n声明的函数会在内存创建一个对象,包含父作用域的作用域链(Scopes),\n只要用var声明一个变量,这个变量在这个作用域开始的时候就被bind在当前作用域对象中,只不过没到声明的部分,他值为underfine\n```JavaScript\n    function foo(){\n        // 在函数编译的过程中,sss就被绑定在当前活动对象的属性上,没初始化的时候是underfine\n        console.log(sss);//underfine\n        // 被赋值初始化,就不是underfine了\n        var sss=\"sdfd\";\n        console.log(sss);//sdfd\n    }\n    foo()\n\n```\n同上面这个一样k1在函数作用域中被绑定在作用域对象上默认为underfine\n```javascript\n    var k1=110\n\n    function foo(){\n\n        console.log(k1);// underfine\n\n        var k1=120;\n\n        console.log(k1);// 120\n\n    }\n```\n这里在函数作用域对象上寻找k1没有找到,就到当前对象的作用域链上父作用域寻找没找到就报错\n```javascript\n    var k1=110\n\n    function foo(){\n\n        console.log(k1);// 120\n\n    }\n```\n虽然bar在foo中被调用,当时bar的父作用域是全局对象,他找到的是k1=110,而不是调用他的函数中的k1=888\n```JavaScript\n    var k1=110\n\n    function foo(){\n\n        var k1=888\n\n        console.log(k1);// 888\n\n        bar()\n\n    }\n\n  \n\n    function bar(){\n\n        console.log(k1);// 110\n\n    }\n\n    foo()\n```","slug":"学习笔记/javaScript深入","published":1,"updated":"2023-05-19T14:07:31.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oag0006wwvng1ktes8b","content":"<p>变量,函数会被添加到全局环境当中</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> yy=<span class=\"string\">&quot;sss&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;goo&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>);</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230423131206.png]]<br>![[Pasted image 20230423131314.png]]</p>\n<p>声明的函数会在内存创建一个对象,包含父作用域的作用域链(Scopes),<br>只要用var声明一个变量,这个变量在这个作用域开始的时候就被bind在当前作用域对象中,只不过没到声明的部分,他值为underfine</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"comment\">// 在函数编译的过程中,sss就被绑定在当前活动对象的属性上,没初始化的时候是underfine</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sss);<span class=\"comment\">//underfine</span></span><br><span class=\"line\">        <span class=\"comment\">// 被赋值初始化,就不是underfine了</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> sss=<span class=\"string\">&quot;sdfd&quot;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sss);<span class=\"comment\">//sdfd</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">foo</span>()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>同上面这个一样k1在函数作用域中被绑定在作用域对象上默认为underfine</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> k1=<span class=\"number\">110</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// underfine</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> k1=<span class=\"number\">120</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// 120</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>这里在函数作用域对象上寻找k1没有找到,就到当前对象的作用域链上父作用域寻找没找到就报错</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> k1=<span class=\"number\">110</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// 120</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>虽然bar在foo中被调用,当时bar的父作用域是全局对象,他找到的是k1&#x3D;110,而不是调用他的函数中的k1&#x3D;888</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> k1=<span class=\"number\">110</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> k1=<span class=\"number\">888</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// 888</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_\">bar</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">bar</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// 110</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">foo</span>()</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>变量,函数会被添加到全局环境当中</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> yy=<span class=\"string\">&quot;sss&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;goo&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">window</span>);</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230423131206.png]]<br>![[Pasted image 20230423131314.png]]</p>\n<p>声明的函数会在内存创建一个对象,包含父作用域的作用域链(Scopes),<br>只要用var声明一个变量,这个变量在这个作用域开始的时候就被bind在当前作用域对象中,只不过没到声明的部分,他值为underfine</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"><span class=\"comment\">// 在函数编译的过程中,sss就被绑定在当前活动对象的属性上,没初始化的时候是underfine</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sss);<span class=\"comment\">//underfine</span></span><br><span class=\"line\">        <span class=\"comment\">// 被赋值初始化,就不是underfine了</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> sss=<span class=\"string\">&quot;sdfd&quot;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sss);<span class=\"comment\">//sdfd</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">foo</span>()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>同上面这个一样k1在函数作用域中被绑定在作用域对象上默认为underfine</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> k1=<span class=\"number\">110</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// underfine</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> k1=<span class=\"number\">120</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// 120</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>这里在函数作用域对象上寻找k1没有找到,就到当前对象的作用域链上父作用域寻找没找到就报错</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> k1=<span class=\"number\">110</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// 120</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>虽然bar在foo中被调用,当时bar的父作用域是全局对象,他找到的是k1&#x3D;110,而不是调用他的函数中的k1&#x3D;888</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">var</span> k1=<span class=\"number\">110</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> k1=<span class=\"number\">888</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// 888</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_\">bar</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">bar</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(k1);<span class=\"comment\">// 110</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">foo</span>()</span><br></pre></td></tr></table></figure>"},{"title":"linux","date":"2023-05-05T13:30:42.000Z","_content":" git clone 拉取\nipconfig /all\nping  -t -1 128   ctri c 结束\n查看局域网 arp -a\nnetstat -a -n 端口\ndir 类似目录 ls\nUID：启动这些进程的用户。\nPID：进程的进程 ID。\nPPID：父进程的进程号（如果该进程是由另一个进程启动的）。\nC：进程生命周期中的 CPU 利用率。\nSTIME：进程启动时的系统时间。\nTTY：进程启动时的终端设备。\nTIME：运行进程需要的累计 CPU 时间。\nCMD：启动的程序名称。\n\n(1) 源码编译安装的qemu需要手动卸载：  \n可执行文件默认放在/usr/local/bin  \n库文件默认存放在/usr/local/libexec  \n配置文件默认存放在/usr/local/etc  \n共享文件默认存放在/usr/local/share\n或者\n sudo apt-get remove --auto-remove qemu-system-x86","source":"_posts/学习笔记/linux.md","raw":"---\ntitle: linux\ndate: 2023-05-05 21:30:42\ntags:  \n---\n git clone 拉取\nipconfig /all\nping  -t -1 128   ctri c 结束\n查看局域网 arp -a\nnetstat -a -n 端口\ndir 类似目录 ls\nUID：启动这些进程的用户。\nPID：进程的进程 ID。\nPPID：父进程的进程号（如果该进程是由另一个进程启动的）。\nC：进程生命周期中的 CPU 利用率。\nSTIME：进程启动时的系统时间。\nTTY：进程启动时的终端设备。\nTIME：运行进程需要的累计 CPU 时间。\nCMD：启动的程序名称。\n\n(1) 源码编译安装的qemu需要手动卸载：  \n可执行文件默认放在/usr/local/bin  \n库文件默认存放在/usr/local/libexec  \n配置文件默认存放在/usr/local/etc  \n共享文件默认存放在/usr/local/share\n或者\n sudo apt-get remove --auto-remove qemu-system-x86","slug":"学习笔记/linux","published":1,"updated":"2023-05-19T14:07:31.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oag0007wwvn14jdam7a","content":"<p> git clone 拉取<br>ipconfig &#x2F;all<br>ping  -t -1 128   ctri c 结束<br>查看局域网 arp -a<br>netstat -a -n 端口<br>dir 类似目录 ls<br>UID：启动这些进程的用户。<br>PID：进程的进程 ID。<br>PPID：父进程的进程号（如果该进程是由另一个进程启动的）。<br>C：进程生命周期中的 CPU 利用率。<br>STIME：进程启动时的系统时间。<br>TTY：进程启动时的终端设备。<br>TIME：运行进程需要的累计 CPU 时间。<br>CMD：启动的程序名称。</p>\n<p>(1) 源码编译安装的qemu需要手动卸载：<br>可执行文件默认放在&#x2F;usr&#x2F;local&#x2F;bin<br>库文件默认存放在&#x2F;usr&#x2F;local&#x2F;libexec<br>配置文件默认存放在&#x2F;usr&#x2F;local&#x2F;etc<br>共享文件默认存放在&#x2F;usr&#x2F;local&#x2F;share<br>或者<br> sudo apt-get remove –auto-remove qemu-system-x86</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p> git clone 拉取<br>ipconfig &#x2F;all<br>ping  -t -1 128   ctri c 结束<br>查看局域网 arp -a<br>netstat -a -n 端口<br>dir 类似目录 ls<br>UID：启动这些进程的用户。<br>PID：进程的进程 ID。<br>PPID：父进程的进程号（如果该进程是由另一个进程启动的）。<br>C：进程生命周期中的 CPU 利用率。<br>STIME：进程启动时的系统时间。<br>TTY：进程启动时的终端设备。<br>TIME：运行进程需要的累计 CPU 时间。<br>CMD：启动的程序名称。</p>\n<p>(1) 源码编译安装的qemu需要手动卸载：<br>可执行文件默认放在&#x2F;usr&#x2F;local&#x2F;bin<br>库文件默认存放在&#x2F;usr&#x2F;local&#x2F;libexec<br>配置文件默认存放在&#x2F;usr&#x2F;local&#x2F;etc<br>共享文件默认存放在&#x2F;usr&#x2F;local&#x2F;share<br>或者<br> sudo apt-get remove –auto-remove qemu-system-x86</p>\n"},{"title":"maven","date":"2023-05-05T13:30:42.000Z","_content":"## 阿里云镜像配置\nhttps://developer.aliyun.com/mvn/guide\nmaven需要配置镜像","source":"_posts/学习笔记/maven.md","raw":"---\ntitle: maven\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 阿里云镜像配置\nhttps://developer.aliyun.com/mvn/guide\nmaven需要配置镜像","slug":"学习笔记/maven","published":1,"updated":"2023-05-19T14:07:31.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oah0008wwvngg02e06f","content":"<h2 id=\"阿里云镜像配置\"><a href=\"#阿里云镜像配置\" class=\"headerlink\" title=\"阿里云镜像配置\"></a>阿里云镜像配置</h2><p><a href=\"https://developer.aliyun.com/mvn/guide\">https://developer.aliyun.com/mvn/guide</a><br>maven需要配置镜像</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"阿里云镜像配置\"><a href=\"#阿里云镜像配置\" class=\"headerlink\" title=\"阿里云镜像配置\"></a>阿里云镜像配置</h2><p><a href=\"https://developer.aliyun.com/mvn/guide\">https://developer.aliyun.com/mvn/guide</a><br>maven需要配置镜像</p>\n"},{"title":"vue项目学习","date":"2023-05-05T13:30:42.000Z","_content":"# vue3-cloud-music\n## v-slots\n","source":"_posts/学习笔记/vue项目学习.md","raw":"---\ntitle: vue项目学习\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# vue3-cloud-music\n## v-slots\n","slug":"学习笔记/vue项目学习","published":1,"updated":"2023-05-19T14:07:31.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oai000awwvn5y1qb92o","content":"<h1 id=\"vue3-cloud-music\"><a href=\"#vue3-cloud-music\" class=\"headerlink\" title=\"vue3-cloud-music\"></a>vue3-cloud-music</h1><h2 id=\"v-slots\"><a href=\"#v-slots\" class=\"headerlink\" title=\"v-slots\"></a>v-slots</h2>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"vue3-cloud-music\"><a href=\"#vue3-cloud-music\" class=\"headerlink\" title=\"vue3-cloud-music\"></a>vue3-cloud-music</h1><h2 id=\"v-slots\"><a href=\"#v-slots\" class=\"headerlink\" title=\"v-slots\"></a>v-slots</h2>"},{"title":"嵌入式","date":"2023-05-05T13:30:42.000Z","_content":"## 程序的产生\n以c语言为例\nc的源代码通过编译器转为汇编代码,汇编代码也是文本文件,只不过汇编代码更接近指令集的代码,依赖于特定的指令集,于其他指令集不兼容.\n\n机器语言是CPU可以直接执行的低层代码。汇编器可以将汇编语言转换为机器语言。\n\n汇编器产生的是包含机器语言的二进制文件，这个文件也包含符号表（全局变量，函数例程）等其他信息。这类文件有几种常见的格式，如在Linux系统下的ELF文件，Windows下的PE文件。前面的例子中生成的是ELF文件。\n\n即便汇编器产生的文件包含机器语言指令，通常它还缺少一些东西，要想执行它还需要重定向（后边详细介绍）以及链接其他文件。例如这个文件还需要链接C标准库，才能调用里面的`printf`方法。因此，汇编器产生的文件并不是可执行文件。\n\n链接器就是最后一步，这个工具可以将汇编器产生的文件链接最后生成可执行文件。汇编器生成的*.o文件，或者叫目标文件，与链接器生成的可执行文件结构上很相似，它们都是包含机器语言的二进制文件。\n\n目标文件和可执行文件都是二进制文件，很难直接查看其内容。为了检查这些文件内容，开发者通常借用工具来反编译，来生成可读的文本信息。有几种可以检查这些文件内容的工具，如objdump、nm和readelf。\n\n## 认识汇编文件\n\n```asm\n    .section .text.entry\n    .globl _start\n_start:\n    la sp, bootstacktop\n    call rust_main\n    .section .bss.stack\n    .align 12\n    .global bootstack\nbootstack:\n    .space 4096 * 4\n    .global bootstacktop\nbootstacktop:\n```\n标签是标识程序位置的记号。通常定义一个名称然后加上\":\"后缀。这些程序位置可以被其他汇编指或指示符令引用。如_start,bootstack\nbootstack: 代表函数bootstack的入口\n变量和函数历程存储在计算机主存,可以通过标签去定位这些变量和函数历程\n这些变量和函数例程的最终地址是在链接多个目标文件生成可执行文件之后才定下来的\n\n符号分为本地和全局两种。本地符号只能在本文件中可见，链接器在解决未定义引用时用不到它们，而是用全局符号来解决未定义符号。\n\n默认情况，汇编器将标签注册为本地符号。汇编中使用.globl指令告诉编译器这里注册了一个全局符号的标签。如下面的例子中，告诉编译器在符号表中注册一个全局符号标签exit。可以链接到其他程序\n## 程序内存布局\n\n-   .text：用来保存程序指令。\n-   .data：用来存储已经初始化的全局变量，这些变量的值在程序启动之前就已经确定。\n-   .bss：存储未初始化的全局变量。\n-   .rodata：保存常量值，只读不能被修改。\n- ....\n当链接多个目标文件时，链接器将不同文件的相同段合并到一起后放到可执行文件内\n可以使用 .section 段名称\n将信息加载到不同的段当中\n```ams\n.section .data\nxxx\nxxx\nxx\n.section .text\nsss\nsss\nsss\n.section .data\nsss\nsss\nsss\n```\n## 3.4 可执行文件和目标文件\n\nLinux系统下可执行文件和目标文件的编码格式叫做ELF。即使这两种文件都包含机器代码且格式相同，但它们之间还有以下区别：\n\n-   目标文件中的地址不是最终地址，各个段的地址相同。因此各个段不能同时在内存中驻留。\n-   目标文件通常包含一些未定义符号，需要在链接过程确定。\n-   目标文件没有入口点。\n\n## rust-objdump\n```shell\n# 查看具体信息 -想 查看源信息 -d 反汇编 -h 内存布局\nrust-objdump target/riscv64imac-unknown-none-elf/debug/os -x --arch-name=riscv64\n\n```\nstart address 是程序的入口地址。\nSections，从这里我们可以看到程序各段的各种信息。后面以 debug 开头的段是调试信息。\nSYMBOL TABLE 即符号表，从中我们可以看到程序中所有符号的地址。例如 start 就位于入口地址上。\nProgram Header_ 是程序加载时所需的段信息。\n\n其中 off 是它在文件中的位置，vaddr 和 paddr 是要加载到的虚拟地址和物理地址，align 规定了地址的对齐，filesz 和 memsz 分别表示它在文件和内存中的大小，flags 描述了相关权限（r：可读，w：可写，x：可执行）\n\n由于我们目前没有调试的手段，不需要调试信息；同时也不会解析 _elf_ 格式文件，所以使用工具 `rust-objcopy` 从 `elf` 格式可执行文件生成内核镜像：\n```shell\nrust-objcopy target/riscv64imac-unknown-none-elf/debug/os --strip-all -O binary target/riscv64imac-unknown-none-elf/debug/kernel.bin\n```\n`--strip-all` 表明丢弃所有符号表及调试信息，`-O binary` 表示输出为二进制文件。\n## risc汇编\n```asm\nli a1 9; 立即数到a1的寄存器\nalli a1 a3 2; 左移2位a3 放到 a1 低位补零\narli a1 a3 2; 右移2位a3 放到 a1 高位补零\n```\n## 系统调用ecall\necall 系统调用输出一个字符\n需要三个参数\n文件描述符 例如1位 stdout \n要打印信息的缓存地址\n需要打印的字节数量\n```asm\n\n```","source":"_posts/学习笔记/嵌入式.md","raw":"---\ntitle: 嵌入式\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 程序的产生\n以c语言为例\nc的源代码通过编译器转为汇编代码,汇编代码也是文本文件,只不过汇编代码更接近指令集的代码,依赖于特定的指令集,于其他指令集不兼容.\n\n机器语言是CPU可以直接执行的低层代码。汇编器可以将汇编语言转换为机器语言。\n\n汇编器产生的是包含机器语言的二进制文件，这个文件也包含符号表（全局变量，函数例程）等其他信息。这类文件有几种常见的格式，如在Linux系统下的ELF文件，Windows下的PE文件。前面的例子中生成的是ELF文件。\n\n即便汇编器产生的文件包含机器语言指令，通常它还缺少一些东西，要想执行它还需要重定向（后边详细介绍）以及链接其他文件。例如这个文件还需要链接C标准库，才能调用里面的`printf`方法。因此，汇编器产生的文件并不是可执行文件。\n\n链接器就是最后一步，这个工具可以将汇编器产生的文件链接最后生成可执行文件。汇编器生成的*.o文件，或者叫目标文件，与链接器生成的可执行文件结构上很相似，它们都是包含机器语言的二进制文件。\n\n目标文件和可执行文件都是二进制文件，很难直接查看其内容。为了检查这些文件内容，开发者通常借用工具来反编译，来生成可读的文本信息。有几种可以检查这些文件内容的工具，如objdump、nm和readelf。\n\n## 认识汇编文件\n\n```asm\n    .section .text.entry\n    .globl _start\n_start:\n    la sp, bootstacktop\n    call rust_main\n    .section .bss.stack\n    .align 12\n    .global bootstack\nbootstack:\n    .space 4096 * 4\n    .global bootstacktop\nbootstacktop:\n```\n标签是标识程序位置的记号。通常定义一个名称然后加上\":\"后缀。这些程序位置可以被其他汇编指或指示符令引用。如_start,bootstack\nbootstack: 代表函数bootstack的入口\n变量和函数历程存储在计算机主存,可以通过标签去定位这些变量和函数历程\n这些变量和函数例程的最终地址是在链接多个目标文件生成可执行文件之后才定下来的\n\n符号分为本地和全局两种。本地符号只能在本文件中可见，链接器在解决未定义引用时用不到它们，而是用全局符号来解决未定义符号。\n\n默认情况，汇编器将标签注册为本地符号。汇编中使用.globl指令告诉编译器这里注册了一个全局符号的标签。如下面的例子中，告诉编译器在符号表中注册一个全局符号标签exit。可以链接到其他程序\n## 程序内存布局\n\n-   .text：用来保存程序指令。\n-   .data：用来存储已经初始化的全局变量，这些变量的值在程序启动之前就已经确定。\n-   .bss：存储未初始化的全局变量。\n-   .rodata：保存常量值，只读不能被修改。\n- ....\n当链接多个目标文件时，链接器将不同文件的相同段合并到一起后放到可执行文件内\n可以使用 .section 段名称\n将信息加载到不同的段当中\n```ams\n.section .data\nxxx\nxxx\nxx\n.section .text\nsss\nsss\nsss\n.section .data\nsss\nsss\nsss\n```\n## 3.4 可执行文件和目标文件\n\nLinux系统下可执行文件和目标文件的编码格式叫做ELF。即使这两种文件都包含机器代码且格式相同，但它们之间还有以下区别：\n\n-   目标文件中的地址不是最终地址，各个段的地址相同。因此各个段不能同时在内存中驻留。\n-   目标文件通常包含一些未定义符号，需要在链接过程确定。\n-   目标文件没有入口点。\n\n## rust-objdump\n```shell\n# 查看具体信息 -想 查看源信息 -d 反汇编 -h 内存布局\nrust-objdump target/riscv64imac-unknown-none-elf/debug/os -x --arch-name=riscv64\n\n```\nstart address 是程序的入口地址。\nSections，从这里我们可以看到程序各段的各种信息。后面以 debug 开头的段是调试信息。\nSYMBOL TABLE 即符号表，从中我们可以看到程序中所有符号的地址。例如 start 就位于入口地址上。\nProgram Header_ 是程序加载时所需的段信息。\n\n其中 off 是它在文件中的位置，vaddr 和 paddr 是要加载到的虚拟地址和物理地址，align 规定了地址的对齐，filesz 和 memsz 分别表示它在文件和内存中的大小，flags 描述了相关权限（r：可读，w：可写，x：可执行）\n\n由于我们目前没有调试的手段，不需要调试信息；同时也不会解析 _elf_ 格式文件，所以使用工具 `rust-objcopy` 从 `elf` 格式可执行文件生成内核镜像：\n```shell\nrust-objcopy target/riscv64imac-unknown-none-elf/debug/os --strip-all -O binary target/riscv64imac-unknown-none-elf/debug/kernel.bin\n```\n`--strip-all` 表明丢弃所有符号表及调试信息，`-O binary` 表示输出为二进制文件。\n## risc汇编\n```asm\nli a1 9; 立即数到a1的寄存器\nalli a1 a3 2; 左移2位a3 放到 a1 低位补零\narli a1 a3 2; 右移2位a3 放到 a1 高位补零\n```\n## 系统调用ecall\necall 系统调用输出一个字符\n需要三个参数\n文件描述符 例如1位 stdout \n要打印信息的缓存地址\n需要打印的字节数量\n```asm\n\n```","slug":"学习笔记/嵌入式","published":1,"updated":"2023-05-19T14:07:31.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oai000cwwvn6f0s92fs","content":"<h2 id=\"程序的产生\"><a href=\"#程序的产生\" class=\"headerlink\" title=\"程序的产生\"></a>程序的产生</h2><p>以c语言为例<br>c的源代码通过编译器转为汇编代码,汇编代码也是文本文件,只不过汇编代码更接近指令集的代码,依赖于特定的指令集,于其他指令集不兼容.</p>\n<p>机器语言是CPU可以直接执行的低层代码。汇编器可以将汇编语言转换为机器语言。</p>\n<p>汇编器产生的是包含机器语言的二进制文件，这个文件也包含符号表（全局变量，函数例程）等其他信息。这类文件有几种常见的格式，如在Linux系统下的ELF文件，Windows下的PE文件。前面的例子中生成的是ELF文件。</p>\n<p>即便汇编器产生的文件包含机器语言指令，通常它还缺少一些东西，要想执行它还需要重定向（后边详细介绍）以及链接其他文件。例如这个文件还需要链接C标准库，才能调用里面的<code>printf</code>方法。因此，汇编器产生的文件并不是可执行文件。</p>\n<p>链接器就是最后一步，这个工具可以将汇编器产生的文件链接最后生成可执行文件。汇编器生成的*.o文件，或者叫目标文件，与链接器生成的可执行文件结构上很相似，它们都是包含机器语言的二进制文件。</p>\n<p>目标文件和可执行文件都是二进制文件，很难直接查看其内容。为了检查这些文件内容，开发者通常借用工具来反编译，来生成可读的文本信息。有几种可以检查这些文件内容的工具，如objdump、nm和readelf。</p>\n<h2 id=\"认识汇编文件\"><a href=\"#认识汇编文件\" class=\"headerlink\" title=\"认识汇编文件\"></a>认识汇编文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    .section .text.entry</span><br><span class=\"line\">    .globl _start</span><br><span class=\"line\">_start:</span><br><span class=\"line\">    la sp, bootstacktop</span><br><span class=\"line\">    call rust_main</span><br><span class=\"line\">    .section .bss.stack</span><br><span class=\"line\">    .align 12</span><br><span class=\"line\">    .global bootstack</span><br><span class=\"line\">bootstack:</span><br><span class=\"line\">    .space 4096 * 4</span><br><span class=\"line\">    .global bootstacktop</span><br><span class=\"line\">bootstacktop:</span><br></pre></td></tr></table></figure>\n<p>标签是标识程序位置的记号。通常定义一个名称然后加上”:”后缀。这些程序位置可以被其他汇编指或指示符令引用。如_start,bootstack<br>bootstack: 代表函数bootstack的入口<br>变量和函数历程存储在计算机主存,可以通过标签去定位这些变量和函数历程<br>这些变量和函数例程的最终地址是在链接多个目标文件生成可执行文件之后才定下来的</p>\n<p>符号分为本地和全局两种。本地符号只能在本文件中可见，链接器在解决未定义引用时用不到它们，而是用全局符号来解决未定义符号。</p>\n<p>默认情况，汇编器将标签注册为本地符号。汇编中使用.globl指令告诉编译器这里注册了一个全局符号的标签。如下面的例子中，告诉编译器在符号表中注册一个全局符号标签exit。可以链接到其他程序</p>\n<h2 id=\"程序内存布局\"><a href=\"#程序内存布局\" class=\"headerlink\" title=\"程序内存布局\"></a>程序内存布局</h2><ul>\n<li>.text：用来保存程序指令。</li>\n<li>.data：用来存储已经初始化的全局变量，这些变量的值在程序启动之前就已经确定。</li>\n<li>.bss：存储未初始化的全局变量。</li>\n<li>.rodata：保存常量值，只读不能被修改。</li>\n<li>….<br>当链接多个目标文件时，链接器将不同文件的相同段合并到一起后放到可执行文件内<br>可以使用 .section 段名称<br>将信息加载到不同的段当中<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.section .data</span><br><span class=\"line\">xxx</span><br><span class=\"line\">xxx</span><br><span class=\"line\">xx</span><br><span class=\"line\">.section .text</span><br><span class=\"line\">sss</span><br><span class=\"line\">sss</span><br><span class=\"line\">sss</span><br><span class=\"line\">.section .data</span><br><span class=\"line\">sss</span><br><span class=\"line\">sss</span><br><span class=\"line\">sss</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"3-4-可执行文件和目标文件\"><a href=\"#3-4-可执行文件和目标文件\" class=\"headerlink\" title=\"3.4 可执行文件和目标文件\"></a>3.4 可执行文件和目标文件</h2><p>Linux系统下可执行文件和目标文件的编码格式叫做ELF。即使这两种文件都包含机器代码且格式相同，但它们之间还有以下区别：</p>\n<ul>\n<li>目标文件中的地址不是最终地址，各个段的地址相同。因此各个段不能同时在内存中驻留。</li>\n<li>目标文件通常包含一些未定义符号，需要在链接过程确定。</li>\n<li>目标文件没有入口点。</li>\n</ul>\n<h2 id=\"rust-objdump\"><a href=\"#rust-objdump\" class=\"headerlink\" title=\"rust-objdump\"></a>rust-objdump</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看具体信息 -想 查看源信息 -d 反汇编 -h 内存布局</span></span><br><span class=\"line\">rust-objdump target/riscv64imac-unknown-none-elf/debug/os -x --arch-name=riscv64</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>start address 是程序的入口地址。<br>Sections，从这里我们可以看到程序各段的各种信息。后面以 debug 开头的段是调试信息。<br>SYMBOL TABLE 即符号表，从中我们可以看到程序中所有符号的地址。例如 start 就位于入口地址上。<br>Program Header_ 是程序加载时所需的段信息。</p>\n<p>其中 off 是它在文件中的位置，vaddr 和 paddr 是要加载到的虚拟地址和物理地址，align 规定了地址的对齐，filesz 和 memsz 分别表示它在文件和内存中的大小，flags 描述了相关权限（r：可读，w：可写，x：可执行）</p>\n<p>由于我们目前没有调试的手段，不需要调试信息；同时也不会解析 <em>elf</em> 格式文件，所以使用工具 <code>rust-objcopy</code> 从 <code>elf</code> 格式可执行文件生成内核镜像：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rust-objcopy target/riscv64imac-unknown-none-elf/debug/os --strip-all -O binary target/riscv64imac-unknown-none-elf/debug/kernel.bin</span><br></pre></td></tr></table></figure>\n<p><code>--strip-all</code> 表明丢弃所有符号表及调试信息，<code>-O binary</code> 表示输出为二进制文件。</p>\n<h2 id=\"risc汇编\"><a href=\"#risc汇编\" class=\"headerlink\" title=\"risc汇编\"></a>risc汇编</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li a1 9; 立即数到a1的寄存器</span><br><span class=\"line\">alli a1 a3 2; 左移2位a3 放到 a1 低位补零</span><br><span class=\"line\">arli a1 a3 2; 右移2位a3 放到 a1 高位补零</span><br></pre></td></tr></table></figure>\n<h2 id=\"系统调用ecall\"><a href=\"#系统调用ecall\" class=\"headerlink\" title=\"系统调用ecall\"></a>系统调用ecall</h2><p>ecall 系统调用输出一个字符<br>需要三个参数<br>文件描述符 例如1位 stdout<br>要打印信息的缓存地址<br>需要打印的字节数量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"程序的产生\"><a href=\"#程序的产生\" class=\"headerlink\" title=\"程序的产生\"></a>程序的产生</h2><p>以c语言为例<br>c的源代码通过编译器转为汇编代码,汇编代码也是文本文件,只不过汇编代码更接近指令集的代码,依赖于特定的指令集,于其他指令集不兼容.</p>\n<p>机器语言是CPU可以直接执行的低层代码。汇编器可以将汇编语言转换为机器语言。</p>\n<p>汇编器产生的是包含机器语言的二进制文件，这个文件也包含符号表（全局变量，函数例程）等其他信息。这类文件有几种常见的格式，如在Linux系统下的ELF文件，Windows下的PE文件。前面的例子中生成的是ELF文件。</p>\n<p>即便汇编器产生的文件包含机器语言指令，通常它还缺少一些东西，要想执行它还需要重定向（后边详细介绍）以及链接其他文件。例如这个文件还需要链接C标准库，才能调用里面的<code>printf</code>方法。因此，汇编器产生的文件并不是可执行文件。</p>\n<p>链接器就是最后一步，这个工具可以将汇编器产生的文件链接最后生成可执行文件。汇编器生成的*.o文件，或者叫目标文件，与链接器生成的可执行文件结构上很相似，它们都是包含机器语言的二进制文件。</p>\n<p>目标文件和可执行文件都是二进制文件，很难直接查看其内容。为了检查这些文件内容，开发者通常借用工具来反编译，来生成可读的文本信息。有几种可以检查这些文件内容的工具，如objdump、nm和readelf。</p>\n<h2 id=\"认识汇编文件\"><a href=\"#认识汇编文件\" class=\"headerlink\" title=\"认识汇编文件\"></a>认识汇编文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    .section .text.entry</span><br><span class=\"line\">    .globl _start</span><br><span class=\"line\">_start:</span><br><span class=\"line\">    la sp, bootstacktop</span><br><span class=\"line\">    call rust_main</span><br><span class=\"line\">    .section .bss.stack</span><br><span class=\"line\">    .align 12</span><br><span class=\"line\">    .global bootstack</span><br><span class=\"line\">bootstack:</span><br><span class=\"line\">    .space 4096 * 4</span><br><span class=\"line\">    .global bootstacktop</span><br><span class=\"line\">bootstacktop:</span><br></pre></td></tr></table></figure>\n<p>标签是标识程序位置的记号。通常定义一个名称然后加上”:”后缀。这些程序位置可以被其他汇编指或指示符令引用。如_start,bootstack<br>bootstack: 代表函数bootstack的入口<br>变量和函数历程存储在计算机主存,可以通过标签去定位这些变量和函数历程<br>这些变量和函数例程的最终地址是在链接多个目标文件生成可执行文件之后才定下来的</p>\n<p>符号分为本地和全局两种。本地符号只能在本文件中可见，链接器在解决未定义引用时用不到它们，而是用全局符号来解决未定义符号。</p>\n<p>默认情况，汇编器将标签注册为本地符号。汇编中使用.globl指令告诉编译器这里注册了一个全局符号的标签。如下面的例子中，告诉编译器在符号表中注册一个全局符号标签exit。可以链接到其他程序</p>\n<h2 id=\"程序内存布局\"><a href=\"#程序内存布局\" class=\"headerlink\" title=\"程序内存布局\"></a>程序内存布局</h2><ul>\n<li>.text：用来保存程序指令。</li>\n<li>.data：用来存储已经初始化的全局变量，这些变量的值在程序启动之前就已经确定。</li>\n<li>.bss：存储未初始化的全局变量。</li>\n<li>.rodata：保存常量值，只读不能被修改。</li>\n<li>….<br>当链接多个目标文件时，链接器将不同文件的相同段合并到一起后放到可执行文件内<br>可以使用 .section 段名称<br>将信息加载到不同的段当中<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.section .data</span><br><span class=\"line\">xxx</span><br><span class=\"line\">xxx</span><br><span class=\"line\">xx</span><br><span class=\"line\">.section .text</span><br><span class=\"line\">sss</span><br><span class=\"line\">sss</span><br><span class=\"line\">sss</span><br><span class=\"line\">.section .data</span><br><span class=\"line\">sss</span><br><span class=\"line\">sss</span><br><span class=\"line\">sss</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"3-4-可执行文件和目标文件\"><a href=\"#3-4-可执行文件和目标文件\" class=\"headerlink\" title=\"3.4 可执行文件和目标文件\"></a>3.4 可执行文件和目标文件</h2><p>Linux系统下可执行文件和目标文件的编码格式叫做ELF。即使这两种文件都包含机器代码且格式相同，但它们之间还有以下区别：</p>\n<ul>\n<li>目标文件中的地址不是最终地址，各个段的地址相同。因此各个段不能同时在内存中驻留。</li>\n<li>目标文件通常包含一些未定义符号，需要在链接过程确定。</li>\n<li>目标文件没有入口点。</li>\n</ul>\n<h2 id=\"rust-objdump\"><a href=\"#rust-objdump\" class=\"headerlink\" title=\"rust-objdump\"></a>rust-objdump</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看具体信息 -想 查看源信息 -d 反汇编 -h 内存布局</span></span><br><span class=\"line\">rust-objdump target/riscv64imac-unknown-none-elf/debug/os -x --arch-name=riscv64</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>start address 是程序的入口地址。<br>Sections，从这里我们可以看到程序各段的各种信息。后面以 debug 开头的段是调试信息。<br>SYMBOL TABLE 即符号表，从中我们可以看到程序中所有符号的地址。例如 start 就位于入口地址上。<br>Program Header_ 是程序加载时所需的段信息。</p>\n<p>其中 off 是它在文件中的位置，vaddr 和 paddr 是要加载到的虚拟地址和物理地址，align 规定了地址的对齐，filesz 和 memsz 分别表示它在文件和内存中的大小，flags 描述了相关权限（r：可读，w：可写，x：可执行）</p>\n<p>由于我们目前没有调试的手段，不需要调试信息；同时也不会解析 <em>elf</em> 格式文件，所以使用工具 <code>rust-objcopy</code> 从 <code>elf</code> 格式可执行文件生成内核镜像：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rust-objcopy target/riscv64imac-unknown-none-elf/debug/os --strip-all -O binary target/riscv64imac-unknown-none-elf/debug/kernel.bin</span><br></pre></td></tr></table></figure>\n<p><code>--strip-all</code> 表明丢弃所有符号表及调试信息，<code>-O binary</code> 表示输出为二进制文件。</p>\n<h2 id=\"risc汇编\"><a href=\"#risc汇编\" class=\"headerlink\" title=\"risc汇编\"></a>risc汇编</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li a1 9; 立即数到a1的寄存器</span><br><span class=\"line\">alli a1 a3 2; 左移2位a3 放到 a1 低位补零</span><br><span class=\"line\">arli a1 a3 2; 右移2位a3 放到 a1 高位补零</span><br></pre></td></tr></table></figure>\n<h2 id=\"系统调用ecall\"><a href=\"#系统调用ecall\" class=\"headerlink\" title=\"系统调用ecall\"></a>系统调用ecall</h2><p>ecall 系统调用输出一个字符<br>需要三个参数<br>文件描述符 例如1位 stdout<br>要打印信息的缓存地址<br>需要打印的字节数量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"汇编","date":"2023-05-05T13:30:42.000Z","_content":"gcc -S x.c -o x.s\n\n## x86_64j寄存器\n1. %rax 通常存储函数调用的返回结果，也被用在idiv （除法）和imul（乘法）命令中\n2. %rsp 堆栈指针寄存器，指向栈顶位置。pop操作通过增大rsp的值实现出栈，push操作通过减小rsp的值实现入栈(栈从高地址向低地址扩展)\n3. %rbp ：栈帧指针(栈底寄存器)，标识当前栈帧的起始位置\n4. %rdi, %rsi, %rdx, %rcx,%r8, %r9 ：六个寄存器,当args的数量<7依次从左放入,args数量>=7后超过的部分从后往前放入栈中\n5. leave 其作用为恢复堆栈指针,相当于\n```\nmovl  %ebp, %rsp\npop1  %ebp\n```\n6. 每次call一个函数，将调用函数下一条指令入栈，被调函数返回后将取这条指令继续执行,修改指令指针寄存器eip的值，使其指向被调函数的执行位置,把当前的栈底指针压入堆栈，然后把栈底指针移动到当前栈顶，这样就相当于在旧栈上新开辟一个栈，等被调用的函数执行的时候，CPU依次执行栈中的指令，然后再依次出栈，也就是说，当函数执行完毕，再恢复堆栈指针之后，栈顶指针又回到了函数调用的位置\n7. 混合显示c语言与汇编\n```shell\ngcc -o hello -g hello.c //要加上-g 选项\nobjdump -S hello\n```\n8. 反汇编","source":"_posts/学习笔记/汇编.md","raw":"---\ntitle: 汇编\ndate: 2023-05-05 21:30:42\ntags:  \n---\ngcc -S x.c -o x.s\n\n## x86_64j寄存器\n1. %rax 通常存储函数调用的返回结果，也被用在idiv （除法）和imul（乘法）命令中\n2. %rsp 堆栈指针寄存器，指向栈顶位置。pop操作通过增大rsp的值实现出栈，push操作通过减小rsp的值实现入栈(栈从高地址向低地址扩展)\n3. %rbp ：栈帧指针(栈底寄存器)，标识当前栈帧的起始位置\n4. %rdi, %rsi, %rdx, %rcx,%r8, %r9 ：六个寄存器,当args的数量<7依次从左放入,args数量>=7后超过的部分从后往前放入栈中\n5. leave 其作用为恢复堆栈指针,相当于\n```\nmovl  %ebp, %rsp\npop1  %ebp\n```\n6. 每次call一个函数，将调用函数下一条指令入栈，被调函数返回后将取这条指令继续执行,修改指令指针寄存器eip的值，使其指向被调函数的执行位置,把当前的栈底指针压入堆栈，然后把栈底指针移动到当前栈顶，这样就相当于在旧栈上新开辟一个栈，等被调用的函数执行的时候，CPU依次执行栈中的指令，然后再依次出栈，也就是说，当函数执行完毕，再恢复堆栈指针之后，栈顶指针又回到了函数调用的位置\n7. 混合显示c语言与汇编\n```shell\ngcc -o hello -g hello.c //要加上-g 选项\nobjdump -S hello\n```\n8. 反汇编","slug":"学习笔记/汇编","published":1,"updated":"2023-05-19T14:07:31.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oaj000dwwvn8de37pgx","content":"<p>gcc -S x.c -o x.s</p>\n<h2 id=\"x86-64j寄存器\"><a href=\"#x86-64j寄存器\" class=\"headerlink\" title=\"x86_64j寄存器\"></a>x86_64j寄存器</h2><ol>\n<li>%rax 通常存储函数调用的返回结果，也被用在idiv （除法）和imul（乘法）命令中</li>\n<li>%rsp 堆栈指针寄存器，指向栈顶位置。pop操作通过增大rsp的值实现出栈，push操作通过减小rsp的值实现入栈(栈从高地址向低地址扩展)</li>\n<li>%rbp ：栈帧指针(栈底寄存器)，标识当前栈帧的起始位置</li>\n<li>%rdi, %rsi, %rdx, %rcx,%r8, %r9 ：六个寄存器,当args的数量&lt;7依次从左放入,args数量&gt;&#x3D;7后超过的部分从后往前放入栈中</li>\n<li>leave 其作用为恢复堆栈指针,相当于<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">movl  %ebp, %rsp</span><br><span class=\"line\">pop1  %ebp</span><br></pre></td></tr></table></figure></li>\n<li>每次call一个函数，将调用函数下一条指令入栈，被调函数返回后将取这条指令继续执行,修改指令指针寄存器eip的值，使其指向被调函数的执行位置,把当前的栈底指针压入堆栈，然后把栈底指针移动到当前栈顶，这样就相当于在旧栈上新开辟一个栈，等被调用的函数执行的时候，CPU依次执行栈中的指令，然后再依次出栈，也就是说，当函数执行完毕，再恢复堆栈指针之后，栈顶指针又回到了函数调用的位置</li>\n<li>混合显示c语言与汇编<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -o hello -g hello.c //要加上-g 选项</span><br><span class=\"line\">objdump -S hello</span><br></pre></td></tr></table></figure></li>\n<li>反汇编</li>\n</ol>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>gcc -S x.c -o x.s</p>\n<h2 id=\"x86-64j寄存器\"><a href=\"#x86-64j寄存器\" class=\"headerlink\" title=\"x86_64j寄存器\"></a>x86_64j寄存器</h2><ol>\n<li>%rax 通常存储函数调用的返回结果，也被用在idiv （除法）和imul（乘法）命令中</li>\n<li>%rsp 堆栈指针寄存器，指向栈顶位置。pop操作通过增大rsp的值实现出栈，push操作通过减小rsp的值实现入栈(栈从高地址向低地址扩展)</li>\n<li>%rbp ：栈帧指针(栈底寄存器)，标识当前栈帧的起始位置</li>\n<li>%rdi, %rsi, %rdx, %rcx,%r8, %r9 ：六个寄存器,当args的数量&lt;7依次从左放入,args数量&gt;&#x3D;7后超过的部分从后往前放入栈中</li>\n<li>leave 其作用为恢复堆栈指针,相当于<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">movl  %ebp, %rsp</span><br><span class=\"line\">pop1  %ebp</span><br></pre></td></tr></table></figure></li>\n<li>每次call一个函数，将调用函数下一条指令入栈，被调函数返回后将取这条指令继续执行,修改指令指针寄存器eip的值，使其指向被调函数的执行位置,把当前的栈底指针压入堆栈，然后把栈底指针移动到当前栈顶，这样就相当于在旧栈上新开辟一个栈，等被调用的函数执行的时候，CPU依次执行栈中的指令，然后再依次出栈，也就是说，当函数执行完毕，再恢复堆栈指针之后，栈顶指针又回到了函数调用的位置</li>\n<li>混合显示c语言与汇编<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -o hello -g hello.c //要加上-g 选项</span><br><span class=\"line\">objdump -S hello</span><br></pre></td></tr></table></figure></li>\n<li>反汇编</li>\n</ol>\n"},{"title":"英语","date":"2023-05-05T13:30:42.000Z","_content":"## 2022-12-28\n### 单词\n1. abuse n.滥用\n2. disastrous adj.灾难性的\n3. sufficient adj.充足的,足够的\n4. admission n. 允许进入,进入\n5. vehicle 交通工具\n6. crucial agj.关键性的\n7. decorate vt.装修\n8. knit vtvi. 编织\n9. favor n.帮助\n10. interpret n. 解释,说明\n11. correct adj.合适的\n12. recognition 认出,识别\n13. calorie 卡路里\n14. acknowledge vt.承认\n15. charity 慈善机构\n16. careful adj.小心的,细心的\n17. consideration  n.仔细考虑\n18. moral  道德的\n19. territory n.领土\n20. preparation n.准备\n21. leisure n.闲暇,空闲\n22. enhavce v.提高\n23. entire  adj.全部的,整个的\n24. seminar n.研讨班\n25. hardship n.艰苦\n26. detail n.细节\n27. numerous adj.众多的\n28. accuse v.指责\n29. funding n.资金,拨款\n30. reveal vt.揭露\n31. aged .. 岁的\n32. owner 物主,所有者\n33. exploration n.勘探\n34. bachelor 单身汉\n35. possession 拥有,具有\n### 句子\n1. you would making a disastrous mistake.你这样将酿成大错的\n2. His needs were very  simple  and his salary was sufficient.他的需求是非常简单的,他的薪水是足够的.\n3. so you,ve  been driving this vehicle all night .所以你驾驶了一晚上车?\n4. Bees play a crucial role on Earth. 蜜蜂在地球上扮演着一个至关重要的角色.\n5. knitting a sweater takes a long time .编织一件毛衣需要花费挺长时间的.\n6. excuse me,can you do me a favor ?打扰一下你能帮助我一个忙吗?\n7. what is the correct way to interpret the image?怎么合适的去解释这幅画?\n8. facial recognition required. 请进行人脸识别\n9. acknowledge defeat will not be easy .承认失败并不容易\n10.  after careful consideration ,we will join you .经过仔细的考虑,我们决定加入你.\n11. (some of them) considered slavery a moral issue.一些人认为奴隶制是道德问题.\n12.  that realm covered many territory and many nation alities.哪个国家包括许多的领土和民族.\n13. my father believed that success is a mixture  of preparation and luck.我的父亲相信成功是准备和幸运的混合.\n14. shouldnot you be enjoying your leisure time ,then?你不应该在享受闲暇时光么.\n15. sleeping at night enhances our creativity.晚上睡觉提高我们的创造力.\n16. you tell me every single detail of your life.告诉我关于你生活的每个细节.\n17. there are the most numerous  birds on earth.这些鸟事地球上数量最多的鸟类.\n18. they are being  accused of murder.他们被指责谋杀\n19. she revealed a secret.他揭露了一个秘密","source":"_posts/学习笔记/英语.md","raw":"---\ntitle: 英语\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 2022-12-28\n### 单词\n1. abuse n.滥用\n2. disastrous adj.灾难性的\n3. sufficient adj.充足的,足够的\n4. admission n. 允许进入,进入\n5. vehicle 交通工具\n6. crucial agj.关键性的\n7. decorate vt.装修\n8. knit vtvi. 编织\n9. favor n.帮助\n10. interpret n. 解释,说明\n11. correct adj.合适的\n12. recognition 认出,识别\n13. calorie 卡路里\n14. acknowledge vt.承认\n15. charity 慈善机构\n16. careful adj.小心的,细心的\n17. consideration  n.仔细考虑\n18. moral  道德的\n19. territory n.领土\n20. preparation n.准备\n21. leisure n.闲暇,空闲\n22. enhavce v.提高\n23. entire  adj.全部的,整个的\n24. seminar n.研讨班\n25. hardship n.艰苦\n26. detail n.细节\n27. numerous adj.众多的\n28. accuse v.指责\n29. funding n.资金,拨款\n30. reveal vt.揭露\n31. aged .. 岁的\n32. owner 物主,所有者\n33. exploration n.勘探\n34. bachelor 单身汉\n35. possession 拥有,具有\n### 句子\n1. you would making a disastrous mistake.你这样将酿成大错的\n2. His needs were very  simple  and his salary was sufficient.他的需求是非常简单的,他的薪水是足够的.\n3. so you,ve  been driving this vehicle all night .所以你驾驶了一晚上车?\n4. Bees play a crucial role on Earth. 蜜蜂在地球上扮演着一个至关重要的角色.\n5. knitting a sweater takes a long time .编织一件毛衣需要花费挺长时间的.\n6. excuse me,can you do me a favor ?打扰一下你能帮助我一个忙吗?\n7. what is the correct way to interpret the image?怎么合适的去解释这幅画?\n8. facial recognition required. 请进行人脸识别\n9. acknowledge defeat will not be easy .承认失败并不容易\n10.  after careful consideration ,we will join you .经过仔细的考虑,我们决定加入你.\n11. (some of them) considered slavery a moral issue.一些人认为奴隶制是道德问题.\n12.  that realm covered many territory and many nation alities.哪个国家包括许多的领土和民族.\n13. my father believed that success is a mixture  of preparation and luck.我的父亲相信成功是准备和幸运的混合.\n14. shouldnot you be enjoying your leisure time ,then?你不应该在享受闲暇时光么.\n15. sleeping at night enhances our creativity.晚上睡觉提高我们的创造力.\n16. you tell me every single detail of your life.告诉我关于你生活的每个细节.\n17. there are the most numerous  birds on earth.这些鸟事地球上数量最多的鸟类.\n18. they are being  accused of murder.他们被指责谋杀\n19. she revealed a secret.他揭露了一个秘密","slug":"学习笔记/英语","published":1,"updated":"2023-05-19T14:07:31.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oaj000ewwvn746y8ojn","content":"<h2 id=\"2022-12-28\"><a href=\"#2022-12-28\" class=\"headerlink\" title=\"2022-12-28\"></a>2022-12-28</h2><h3 id=\"单词\"><a href=\"#单词\" class=\"headerlink\" title=\"单词\"></a>单词</h3><ol>\n<li>abuse n.滥用</li>\n<li>disastrous adj.灾难性的</li>\n<li>sufficient adj.充足的,足够的</li>\n<li>admission n. 允许进入,进入</li>\n<li>vehicle 交通工具</li>\n<li>crucial agj.关键性的</li>\n<li>decorate vt.装修</li>\n<li>knit vtvi. 编织</li>\n<li>favor n.帮助</li>\n<li>interpret n. 解释,说明</li>\n<li>correct adj.合适的</li>\n<li>recognition 认出,识别</li>\n<li>calorie 卡路里</li>\n<li>acknowledge vt.承认</li>\n<li>charity 慈善机构</li>\n<li>careful adj.小心的,细心的</li>\n<li>consideration  n.仔细考虑</li>\n<li>moral  道德的</li>\n<li>territory n.领土</li>\n<li>preparation n.准备</li>\n<li>leisure n.闲暇,空闲</li>\n<li>enhavce v.提高</li>\n<li>entire  adj.全部的,整个的</li>\n<li>seminar n.研讨班</li>\n<li>hardship n.艰苦</li>\n<li>detail n.细节</li>\n<li>numerous adj.众多的</li>\n<li>accuse v.指责</li>\n<li>funding n.资金,拨款</li>\n<li>reveal vt.揭露</li>\n<li>aged .. 岁的</li>\n<li>owner 物主,所有者</li>\n<li>exploration n.勘探</li>\n<li>bachelor 单身汉</li>\n<li>possession 拥有,具有</li>\n</ol>\n<h3 id=\"句子\"><a href=\"#句子\" class=\"headerlink\" title=\"句子\"></a>句子</h3><ol>\n<li>you would making a disastrous mistake.你这样将酿成大错的</li>\n<li>His needs were very  simple  and his salary was sufficient.他的需求是非常简单的,他的薪水是足够的.</li>\n<li>so you,ve  been driving this vehicle all night .所以你驾驶了一晚上车?</li>\n<li>Bees play a crucial role on Earth. 蜜蜂在地球上扮演着一个至关重要的角色.</li>\n<li>knitting a sweater takes a long time .编织一件毛衣需要花费挺长时间的.</li>\n<li>excuse me,can you do me a favor ?打扰一下你能帮助我一个忙吗?</li>\n<li>what is the correct way to interpret the image?怎么合适的去解释这幅画?</li>\n<li>facial recognition required. 请进行人脸识别</li>\n<li>acknowledge defeat will not be easy .承认失败并不容易</li>\n<li>after careful consideration ,we will join you .经过仔细的考虑,我们决定加入你.</li>\n<li>(some of them) considered slavery a moral issue.一些人认为奴隶制是道德问题.</li>\n<li>that realm covered many territory and many nation alities.哪个国家包括许多的领土和民族.</li>\n<li>my father believed that success is a mixture  of preparation and luck.我的父亲相信成功是准备和幸运的混合.</li>\n<li>shouldnot you be enjoying your leisure time ,then?你不应该在享受闲暇时光么.</li>\n<li>sleeping at night enhances our creativity.晚上睡觉提高我们的创造力.</li>\n<li>you tell me every single detail of your life.告诉我关于你生活的每个细节.</li>\n<li>there are the most numerous  birds on earth.这些鸟事地球上数量最多的鸟类.</li>\n<li>they are being  accused of murder.他们被指责谋杀</li>\n<li>she revealed a secret.他揭露了一个秘密</li>\n</ol>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"2022-12-28\"><a href=\"#2022-12-28\" class=\"headerlink\" title=\"2022-12-28\"></a>2022-12-28</h2><h3 id=\"单词\"><a href=\"#单词\" class=\"headerlink\" title=\"单词\"></a>单词</h3><ol>\n<li>abuse n.滥用</li>\n<li>disastrous adj.灾难性的</li>\n<li>sufficient adj.充足的,足够的</li>\n<li>admission n. 允许进入,进入</li>\n<li>vehicle 交通工具</li>\n<li>crucial agj.关键性的</li>\n<li>decorate vt.装修</li>\n<li>knit vtvi. 编织</li>\n<li>favor n.帮助</li>\n<li>interpret n. 解释,说明</li>\n<li>correct adj.合适的</li>\n<li>recognition 认出,识别</li>\n<li>calorie 卡路里</li>\n<li>acknowledge vt.承认</li>\n<li>charity 慈善机构</li>\n<li>careful adj.小心的,细心的</li>\n<li>consideration  n.仔细考虑</li>\n<li>moral  道德的</li>\n<li>territory n.领土</li>\n<li>preparation n.准备</li>\n<li>leisure n.闲暇,空闲</li>\n<li>enhavce v.提高</li>\n<li>entire  adj.全部的,整个的</li>\n<li>seminar n.研讨班</li>\n<li>hardship n.艰苦</li>\n<li>detail n.细节</li>\n<li>numerous adj.众多的</li>\n<li>accuse v.指责</li>\n<li>funding n.资金,拨款</li>\n<li>reveal vt.揭露</li>\n<li>aged .. 岁的</li>\n<li>owner 物主,所有者</li>\n<li>exploration n.勘探</li>\n<li>bachelor 单身汉</li>\n<li>possession 拥有,具有</li>\n</ol>\n<h3 id=\"句子\"><a href=\"#句子\" class=\"headerlink\" title=\"句子\"></a>句子</h3><ol>\n<li>you would making a disastrous mistake.你这样将酿成大错的</li>\n<li>His needs were very  simple  and his salary was sufficient.他的需求是非常简单的,他的薪水是足够的.</li>\n<li>so you,ve  been driving this vehicle all night .所以你驾驶了一晚上车?</li>\n<li>Bees play a crucial role on Earth. 蜜蜂在地球上扮演着一个至关重要的角色.</li>\n<li>knitting a sweater takes a long time .编织一件毛衣需要花费挺长时间的.</li>\n<li>excuse me,can you do me a favor ?打扰一下你能帮助我一个忙吗?</li>\n<li>what is the correct way to interpret the image?怎么合适的去解释这幅画?</li>\n<li>facial recognition required. 请进行人脸识别</li>\n<li>acknowledge defeat will not be easy .承认失败并不容易</li>\n<li>after careful consideration ,we will join you .经过仔细的考虑,我们决定加入你.</li>\n<li>(some of them) considered slavery a moral issue.一些人认为奴隶制是道德问题.</li>\n<li>that realm covered many territory and many nation alities.哪个国家包括许多的领土和民族.</li>\n<li>my father believed that success is a mixture  of preparation and luck.我的父亲相信成功是准备和幸运的混合.</li>\n<li>shouldnot you be enjoying your leisure time ,then?你不应该在享受闲暇时光么.</li>\n<li>sleeping at night enhances our creativity.晚上睡觉提高我们的创造力.</li>\n<li>you tell me every single detail of your life.告诉我关于你生活的每个细节.</li>\n<li>there are the most numerous  birds on earth.这些鸟事地球上数量最多的鸟类.</li>\n<li>they are being  accused of murder.他们被指责谋杀</li>\n<li>she revealed a secret.他揭露了一个秘密</li>\n</ol>\n"},{"title":"软件设计与体系结构","date":"2023-05-05T13:30:42.000Z","_content":"1. 软件的分类软件被划分为编程软件系统软件应用软件和中间件\n2. 软件=程序+数据+文档\n3. 软件=满足需求的信息+服务工具\n4. 软件工程：将系统化的、规范化的、可量化的方法应用于软件的开发，运行、维护，即将工程化方法应用于软件，包括对上述方法的研究。\n5. 一个通用的软件工程过程框架通常包含以下五个活动：沟通、策划、建模、构建、部署\n6. 软件模型是指软件的一种抽象，目前一般通过非数字模型来描述。统一的基本单元的抽象成为软件模型，而将软件系统的抽象称为软件体系结构。软件模型可以看作是一种元模型。\n7.  功能模型也可以称为过程模型或函数模型，是模型化软件构建方法的第一个基本模型。功能模型的基本原理是将一个系统分解为若干个基本功能模块，基本功能模块之间可以按需进行调用。基本功能模块集合及其调用关系集合构成一个系统的模型。功能模型的核心之一是基本功能模块的抽象及耦合。功能模型的核心之二是递归思想的具体实现。\n8. 对象模型强调了对程序中数据组织的抽象，并将数据处理和数据统一进行考虑。对象模型的基本原理是将一个系统分解为若干个对象，对象之间可以通过发送消息按需进行协作。对象集合及其协作关系集合构成一个系统的模型。对象模型的核心之一是对数据类型的抽象，核心之二是同构对象关系的定义，这种关系体现在继承和多态。\n9. UML 是一种面向对象系统的产品进行说明，可视化编制文档的一种标准语言，是非专利的第三代建模和规约语言\n10. \n\n\n\n","source":"_posts/学习笔记/软件设计与体系结构.md","raw":"---\ntitle: 软件设计与体系结构\ndate: 2023-05-05 21:30:42\ntags:  \n---\n1. 软件的分类软件被划分为编程软件系统软件应用软件和中间件\n2. 软件=程序+数据+文档\n3. 软件=满足需求的信息+服务工具\n4. 软件工程：将系统化的、规范化的、可量化的方法应用于软件的开发，运行、维护，即将工程化方法应用于软件，包括对上述方法的研究。\n5. 一个通用的软件工程过程框架通常包含以下五个活动：沟通、策划、建模、构建、部署\n6. 软件模型是指软件的一种抽象，目前一般通过非数字模型来描述。统一的基本单元的抽象成为软件模型，而将软件系统的抽象称为软件体系结构。软件模型可以看作是一种元模型。\n7.  功能模型也可以称为过程模型或函数模型，是模型化软件构建方法的第一个基本模型。功能模型的基本原理是将一个系统分解为若干个基本功能模块，基本功能模块之间可以按需进行调用。基本功能模块集合及其调用关系集合构成一个系统的模型。功能模型的核心之一是基本功能模块的抽象及耦合。功能模型的核心之二是递归思想的具体实现。\n8. 对象模型强调了对程序中数据组织的抽象，并将数据处理和数据统一进行考虑。对象模型的基本原理是将一个系统分解为若干个对象，对象之间可以通过发送消息按需进行协作。对象集合及其协作关系集合构成一个系统的模型。对象模型的核心之一是对数据类型的抽象，核心之二是同构对象关系的定义，这种关系体现在继承和多态。\n9. UML 是一种面向对象系统的产品进行说明，可视化编制文档的一种标准语言，是非专利的第三代建模和规约语言\n10. \n\n\n\n","slug":"学习笔记/软件设计与体系结构","published":1,"updated":"2023-05-19T14:07:31.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oaj000fwwvn5epf7v9s","content":"<ol>\n<li>软件的分类软件被划分为编程软件系统软件应用软件和中间件</li>\n<li>软件&#x3D;程序+数据+文档</li>\n<li>软件&#x3D;满足需求的信息+服务工具</li>\n<li>软件工程：将系统化的、规范化的、可量化的方法应用于软件的开发，运行、维护，即将工程化方法应用于软件，包括对上述方法的研究。</li>\n<li>一个通用的软件工程过程框架通常包含以下五个活动：沟通、策划、建模、构建、部署</li>\n<li>软件模型是指软件的一种抽象，目前一般通过非数字模型来描述。统一的基本单元的抽象成为软件模型，而将软件系统的抽象称为软件体系结构。软件模型可以看作是一种元模型。</li>\n<li>功能模型也可以称为过程模型或函数模型，是模型化软件构建方法的第一个基本模型。功能模型的基本原理是将一个系统分解为若干个基本功能模块，基本功能模块之间可以按需进行调用。基本功能模块集合及其调用关系集合构成一个系统的模型。功能模型的核心之一是基本功能模块的抽象及耦合。功能模型的核心之二是递归思想的具体实现。</li>\n<li>对象模型强调了对程序中数据组织的抽象，并将数据处理和数据统一进行考虑。对象模型的基本原理是将一个系统分解为若干个对象，对象之间可以通过发送消息按需进行协作。对象集合及其协作关系集合构成一个系统的模型。对象模型的核心之一是对数据类型的抽象，核心之二是同构对象关系的定义，这种关系体现在继承和多态。</li>\n<li>UML 是一种面向对象系统的产品进行说明，可视化编制文档的一种标准语言，是非专利的第三代建模和规约语言</li>\n<li></li>\n</ol>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<ol>\n<li>软件的分类软件被划分为编程软件系统软件应用软件和中间件</li>\n<li>软件&#x3D;程序+数据+文档</li>\n<li>软件&#x3D;满足需求的信息+服务工具</li>\n<li>软件工程：将系统化的、规范化的、可量化的方法应用于软件的开发，运行、维护，即将工程化方法应用于软件，包括对上述方法的研究。</li>\n<li>一个通用的软件工程过程框架通常包含以下五个活动：沟通、策划、建模、构建、部署</li>\n<li>软件模型是指软件的一种抽象，目前一般通过非数字模型来描述。统一的基本单元的抽象成为软件模型，而将软件系统的抽象称为软件体系结构。软件模型可以看作是一种元模型。</li>\n<li>功能模型也可以称为过程模型或函数模型，是模型化软件构建方法的第一个基本模型。功能模型的基本原理是将一个系统分解为若干个基本功能模块，基本功能模块之间可以按需进行调用。基本功能模块集合及其调用关系集合构成一个系统的模型。功能模型的核心之一是基本功能模块的抽象及耦合。功能模型的核心之二是递归思想的具体实现。</li>\n<li>对象模型强调了对程序中数据组织的抽象，并将数据处理和数据统一进行考虑。对象模型的基本原理是将一个系统分解为若干个对象，对象之间可以通过发送消息按需进行协作。对象集合及其协作关系集合构成一个系统的模型。对象模型的核心之一是对数据类型的抽象，核心之二是同构对象关系的定义，这种关系体现在继承和多态。</li>\n<li>UML 是一种面向对象系统的产品进行说明，可视化编制文档的一种标准语言，是非专利的第三代建模和规约语言</li>\n<li></li>\n</ol>\n"},{"title":"589N叉树的遍历","date":"2023-05-05T13:30:42.000Z","_content":"#### N叉树的遍历\n\n1. 递归\n\n```java\npublic List<Integer> preorder(Node root) {\n    List<Integer> list = new ArrayList<>();\n    if (root!=null) {\n        dfs(list, root);\n    }\n    return list;\n}\npublic static void dfs(List<Integer> list , Node root){\n    list.add(root.val);\n    for (Node child : root.children) {\n        dfs(list,child);\n    }\n}\n```\n\n2. 迭代\n\n   ```java\n    List<Integer> list = new ArrayList<>();\n      if (root==null)return list;\n      Stack<Node> stack=new Stack<>();\n      stack.push(root);\n      while(!stack.isEmpty()){\n          Node pop = stack.pop();\n          list.add(pop.val);\n          for (int i = pop.children.size() - 1; i >= 0; i--) {\n              stack.push(pop.children.get(i));\n          }\n      }\n   return list;\n   ```\n\n   \n\n3. 回顾二叉树的Morris遍历\n\n   ```java\n   ```\n\n   ","source":"_posts/学习笔记/leetcode/589N叉树的遍历.md","raw":"---\ntitle: 589N叉树的遍历\ndate: 2023-05-05 21:30:42\ntags:  \n---\n#### N叉树的遍历\n\n1. 递归\n\n```java\npublic List<Integer> preorder(Node root) {\n    List<Integer> list = new ArrayList<>();\n    if (root!=null) {\n        dfs(list, root);\n    }\n    return list;\n}\npublic static void dfs(List<Integer> list , Node root){\n    list.add(root.val);\n    for (Node child : root.children) {\n        dfs(list,child);\n    }\n}\n```\n\n2. 迭代\n\n   ```java\n    List<Integer> list = new ArrayList<>();\n      if (root==null)return list;\n      Stack<Node> stack=new Stack<>();\n      stack.push(root);\n      while(!stack.isEmpty()){\n          Node pop = stack.pop();\n          list.add(pop.val);\n          for (int i = pop.children.size() - 1; i >= 0; i--) {\n              stack.push(pop.children.get(i));\n          }\n      }\n   return list;\n   ```\n\n   \n\n3. 回顾二叉树的Morris遍历\n\n   ```java\n   ```\n\n   ","slug":"学习笔记/leetcode/589N叉树的遍历","published":1,"updated":"2023-05-19T14:07:31.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oaj000gwwvn65hi8xl3","content":"<h4 id=\"N叉树的遍历\"><a href=\"#N叉树的遍历\" class=\"headerlink\" title=\"N叉树的遍历\"></a>N叉树的遍历</h4><ol>\n<li>递归</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;Integer&gt; <span class=\"title function_\">preorder</span><span class=\"params\">(Node root)</span> &#123;</span><br><span class=\"line\">    List&lt;Integer&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root!=<span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        dfs(list, root);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dfs</span><span class=\"params\">(List&lt;Integer&gt; list , Node root)</span>&#123;</span><br><span class=\"line\">    list.add(root.val);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Node child : root.children) &#123;</span><br><span class=\"line\">        dfs(list,child);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>迭代</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> List&lt;Integer&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (root==<span class=\"literal\">null</span>)<span class=\"keyword\">return</span> list;</span><br><span class=\"line\">   Stack&lt;Node&gt; stack=<span class=\"keyword\">new</span> <span class=\"title class_\">Stack</span>&lt;&gt;();</span><br><span class=\"line\">   stack.push(root);</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(!stack.isEmpty())&#123;</span><br><span class=\"line\">       <span class=\"type\">Node</span> <span class=\"variable\">pop</span> <span class=\"operator\">=</span> stack.pop();</span><br><span class=\"line\">       list.add(pop.val);</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> pop.children.size() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">           stack.push(pop.children.get(i));</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> list;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>回顾二叉树的Morris遍历</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h4 id=\"N叉树的遍历\"><a href=\"#N叉树的遍历\" class=\"headerlink\" title=\"N叉树的遍历\"></a>N叉树的遍历</h4><ol>\n<li>递归</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;Integer&gt; <span class=\"title function_\">preorder</span><span class=\"params\">(Node root)</span> &#123;</span><br><span class=\"line\">    List&lt;Integer&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root!=<span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        dfs(list, root);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dfs</span><span class=\"params\">(List&lt;Integer&gt; list , Node root)</span>&#123;</span><br><span class=\"line\">    list.add(root.val);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Node child : root.children) &#123;</span><br><span class=\"line\">        dfs(list,child);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>迭代</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> List&lt;Integer&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (root==<span class=\"literal\">null</span>)<span class=\"keyword\">return</span> list;</span><br><span class=\"line\">   Stack&lt;Node&gt; stack=<span class=\"keyword\">new</span> <span class=\"title class_\">Stack</span>&lt;&gt;();</span><br><span class=\"line\">   stack.push(root);</span><br><span class=\"line\">   <span class=\"keyword\">while</span>(!stack.isEmpty())&#123;</span><br><span class=\"line\">       <span class=\"type\">Node</span> <span class=\"variable\">pop</span> <span class=\"operator\">=</span> stack.pop();</span><br><span class=\"line\">       list.add(pop.val);</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> pop.children.size() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">           stack.push(pop.children.get(i));</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> list;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>回顾二叉树的Morris遍历</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"全排列","date":"2023-05-05T13:30:42.000Z","_content":"回溯算法的应用\n1. 可以使用数组标记没有使用的数,每次选择没使用的数添加进数组\n2. 使用函数判断遍历到的数在不在结果集合中\n3. 交换数组中内容,只需要往后遍历就好,前面的数都是遍历过的\n```java\npublic static List<List<Integer>> permute(int[] nums) {  \n    List<List<Integer>> res=new ArrayList<>();  \n    if (nums==null||nums.length==0)return res;  \n    List<Integer> temp=new ArrayList<>();  \n    for (int num : nums) {  \n        temp.add(num);  \n    }  \n    permute_back(temp,res,0);  \n    return res;  \n}  \n  \nprivate static void permute_back(List<Integer> nums, List<List<Integer>> res, int idx) {  \n    if (nums.size()==idx){  \n        res.add(new ArrayList<>(nums));  \n        return;    }  \n    for (int i = idx; i < nums.size(); i++) {  \n        Collections.swap(nums,i,idx);  \n        permute_back(nums,res,idx+1);  \n        Collections.swap(nums,i,idx);  \n    }  \n}\n```\n","source":"_posts/学习笔记/leetcode/全排列.md","raw":"---\ntitle: 全排列\ndate: 2023-05-05 21:30:42\ntags:  \n---\n回溯算法的应用\n1. 可以使用数组标记没有使用的数,每次选择没使用的数添加进数组\n2. 使用函数判断遍历到的数在不在结果集合中\n3. 交换数组中内容,只需要往后遍历就好,前面的数都是遍历过的\n```java\npublic static List<List<Integer>> permute(int[] nums) {  \n    List<List<Integer>> res=new ArrayList<>();  \n    if (nums==null||nums.length==0)return res;  \n    List<Integer> temp=new ArrayList<>();  \n    for (int num : nums) {  \n        temp.add(num);  \n    }  \n    permute_back(temp,res,0);  \n    return res;  \n}  \n  \nprivate static void permute_back(List<Integer> nums, List<List<Integer>> res, int idx) {  \n    if (nums.size()==idx){  \n        res.add(new ArrayList<>(nums));  \n        return;    }  \n    for (int i = idx; i < nums.size(); i++) {  \n        Collections.swap(nums,i,idx);  \n        permute_back(nums,res,idx+1);  \n        Collections.swap(nums,i,idx);  \n    }  \n}\n```\n","slug":"学习笔记/leetcode/全排列","published":1,"updated":"2023-05-19T14:07:31.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oak000hwwvnh78qg4u3","content":"<p>回溯算法的应用</p>\n<ol>\n<li>可以使用数组标记没有使用的数,每次选择没使用的数添加进数组</li>\n<li>使用函数判断遍历到的数在不在结果集合中</li>\n<li>交换数组中内容,只需要往后遍历就好,前面的数都是遍历过的<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;List&lt;Integer&gt;&gt; <span class=\"title function_\">permute</span><span class=\"params\">(<span class=\"type\">int</span>[] nums)</span> &#123;  </span><br><span class=\"line\">    List&lt;List&lt;Integer&gt;&gt; res=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums==<span class=\"literal\">null</span>||nums.length==<span class=\"number\">0</span>)<span class=\"keyword\">return</span> res;  </span><br><span class=\"line\">    List&lt;Integer&gt; temp=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums) &#123;  </span><br><span class=\"line\">        temp.add(num);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    permute_back(temp,res,<span class=\"number\">0</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">permute_back</span><span class=\"params\">(List&lt;Integer&gt; nums, List&lt;List&lt;Integer&gt;&gt; res, <span class=\"type\">int</span> idx)</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.size()==idx)&#123;  </span><br><span class=\"line\">        res.add(<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(nums));  </span><br><span class=\"line\">        <span class=\"keyword\">return</span>;    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> idx; i &lt; nums.size(); i++) &#123;  </span><br><span class=\"line\">        Collections.swap(nums,i,idx);  </span><br><span class=\"line\">        permute_back(nums,res,idx+<span class=\"number\">1</span>);  </span><br><span class=\"line\">        Collections.swap(nums,i,idx);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>回溯算法的应用</p>\n<ol>\n<li>可以使用数组标记没有使用的数,每次选择没使用的数添加进数组</li>\n<li>使用函数判断遍历到的数在不在结果集合中</li>\n<li>交换数组中内容,只需要往后遍历就好,前面的数都是遍历过的<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;List&lt;Integer&gt;&gt; <span class=\"title function_\">permute</span><span class=\"params\">(<span class=\"type\">int</span>[] nums)</span> &#123;  </span><br><span class=\"line\">    List&lt;List&lt;Integer&gt;&gt; res=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums==<span class=\"literal\">null</span>||nums.length==<span class=\"number\">0</span>)<span class=\"keyword\">return</span> res;  </span><br><span class=\"line\">    List&lt;Integer&gt; temp=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums) &#123;  </span><br><span class=\"line\">        temp.add(num);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    permute_back(temp,res,<span class=\"number\">0</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">permute_back</span><span class=\"params\">(List&lt;Integer&gt; nums, List&lt;List&lt;Integer&gt;&gt; res, <span class=\"type\">int</span> idx)</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.size()==idx)&#123;  </span><br><span class=\"line\">        res.add(<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(nums));  </span><br><span class=\"line\">        <span class=\"keyword\">return</span>;    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> idx; i &lt; nums.size(); i++) &#123;  </span><br><span class=\"line\">        Collections.swap(nums,i,idx);  </span><br><span class=\"line\">        permute_back(nums,res,idx+<span class=\"number\">1</span>);  </span><br><span class=\"line\">        Collections.swap(nums,i,idx);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"计算机网络","date":"2023-05-05T13:30:42.000Z","_content":"# OSI模型\n应用层\n表示层\n会话层\n传输层\n网络层\n数据链路层\n物理层\n![[Pasted image 20221229095145.png]]\n应用层\n和用户交互产生网络流量的程序.\n协议有 FTp ,http,\n表示层\n处理了两个通信系统中交换信息的表示方式.\n数据格式变换,数据的加密解密,数据的压缩解压缩\n会话层\n像用户层实体用户进程建立连接并在连接上有序的传输数据\n建立管理终止会话,使会话在失效的时候从校验点/同步点继续通信\n传输层\n负责主机两个进程的通信,传输单位报文段,用户数据报\n可靠传输,不可靠传输\n差错控制\n流量控制 传输速度匹配,能否正常接收\n复用分用\ntcp , udp\n网路层\n分组\n数据报分成更小的组\n路由选择(最佳路径),流量控制,差错控制,拥塞控制\n数据链路层\n把网络层的数据组层针,差错控制 可以检错纠错\n流量控制接收方缓存不够,让发送方慢点发\n访问控制 控制对信道的访问,在广播同一时间只能有一个发送,其他处于监听\n物理层\n# ISO模型\n应用层\n传输层\n网际层\n网络接口层\n![[Pasted image 20221229104753.png]]\n5层参考模型\n![[Pasted image 20221229110523.png]]\n\n\n### 物理层\n#### 通信基础\n\n\n#### 传输介质&设备","source":"_posts/学习笔记/计算机网络.md","raw":"---\ntitle: 计算机网络\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# OSI模型\n应用层\n表示层\n会话层\n传输层\n网络层\n数据链路层\n物理层\n![[Pasted image 20221229095145.png]]\n应用层\n和用户交互产生网络流量的程序.\n协议有 FTp ,http,\n表示层\n处理了两个通信系统中交换信息的表示方式.\n数据格式变换,数据的加密解密,数据的压缩解压缩\n会话层\n像用户层实体用户进程建立连接并在连接上有序的传输数据\n建立管理终止会话,使会话在失效的时候从校验点/同步点继续通信\n传输层\n负责主机两个进程的通信,传输单位报文段,用户数据报\n可靠传输,不可靠传输\n差错控制\n流量控制 传输速度匹配,能否正常接收\n复用分用\ntcp , udp\n网路层\n分组\n数据报分成更小的组\n路由选择(最佳路径),流量控制,差错控制,拥塞控制\n数据链路层\n把网络层的数据组层针,差错控制 可以检错纠错\n流量控制接收方缓存不够,让发送方慢点发\n访问控制 控制对信道的访问,在广播同一时间只能有一个发送,其他处于监听\n物理层\n# ISO模型\n应用层\n传输层\n网际层\n网络接口层\n![[Pasted image 20221229104753.png]]\n5层参考模型\n![[Pasted image 20221229110523.png]]\n\n\n### 物理层\n#### 通信基础\n\n\n#### 传输介质&设备","slug":"学习笔记/计算机网络","published":1,"updated":"2023-05-19T14:07:31.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oak000iwwvnclaq8df1","content":"<h1 id=\"OSI模型\"><a href=\"#OSI模型\" class=\"headerlink\" title=\"OSI模型\"></a>OSI模型</h1><p>应用层<br>表示层<br>会话层<br>传输层<br>网络层<br>数据链路层<br>物理层<br>![[Pasted image 20221229095145.png]]<br>应用层<br>和用户交互产生网络流量的程序.<br>协议有 FTp ,http,<br>表示层<br>处理了两个通信系统中交换信息的表示方式.<br>数据格式变换,数据的加密解密,数据的压缩解压缩<br>会话层<br>像用户层实体用户进程建立连接并在连接上有序的传输数据<br>建立管理终止会话,使会话在失效的时候从校验点&#x2F;同步点继续通信<br>传输层<br>负责主机两个进程的通信,传输单位报文段,用户数据报<br>可靠传输,不可靠传输<br>差错控制<br>流量控制 传输速度匹配,能否正常接收<br>复用分用<br>tcp , udp<br>网路层<br>分组<br>数据报分成更小的组<br>路由选择(最佳路径),流量控制,差错控制,拥塞控制<br>数据链路层<br>把网络层的数据组层针,差错控制 可以检错纠错<br>流量控制接收方缓存不够,让发送方慢点发<br>访问控制 控制对信道的访问,在广播同一时间只能有一个发送,其他处于监听<br>物理层</p>\n<h1 id=\"ISO模型\"><a href=\"#ISO模型\" class=\"headerlink\" title=\"ISO模型\"></a>ISO模型</h1><p>应用层<br>传输层<br>网际层<br>网络接口层<br>![[Pasted image 20221229104753.png]]<br>5层参考模型<br>![[Pasted image 20221229110523.png]]</p>\n<h3 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h3><h4 id=\"通信基础\"><a href=\"#通信基础\" class=\"headerlink\" title=\"通信基础\"></a>通信基础</h4><h4 id=\"传输介质-amp-设备\"><a href=\"#传输介质-amp-设备\" class=\"headerlink\" title=\"传输介质&amp;设备\"></a>传输介质&amp;设备</h4>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"OSI模型\"><a href=\"#OSI模型\" class=\"headerlink\" title=\"OSI模型\"></a>OSI模型</h1><p>应用层<br>表示层<br>会话层<br>传输层<br>网络层<br>数据链路层<br>物理层<br>![[Pasted image 20221229095145.png]]<br>应用层<br>和用户交互产生网络流量的程序.<br>协议有 FTp ,http,<br>表示层<br>处理了两个通信系统中交换信息的表示方式.<br>数据格式变换,数据的加密解密,数据的压缩解压缩<br>会话层<br>像用户层实体用户进程建立连接并在连接上有序的传输数据<br>建立管理终止会话,使会话在失效的时候从校验点&#x2F;同步点继续通信<br>传输层<br>负责主机两个进程的通信,传输单位报文段,用户数据报<br>可靠传输,不可靠传输<br>差错控制<br>流量控制 传输速度匹配,能否正常接收<br>复用分用<br>tcp , udp<br>网路层<br>分组<br>数据报分成更小的组<br>路由选择(最佳路径),流量控制,差错控制,拥塞控制<br>数据链路层<br>把网络层的数据组层针,差错控制 可以检错纠错<br>流量控制接收方缓存不够,让发送方慢点发<br>访问控制 控制对信道的访问,在广播同一时间只能有一个发送,其他处于监听<br>物理层</p>\n<h1 id=\"ISO模型\"><a href=\"#ISO模型\" class=\"headerlink\" title=\"ISO模型\"></a>ISO模型</h1><p>应用层<br>传输层<br>网际层<br>网络接口层<br>![[Pasted image 20221229104753.png]]<br>5层参考模型<br>![[Pasted image 20221229110523.png]]</p>\n<h3 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h3><h4 id=\"通信基础\"><a href=\"#通信基础\" class=\"headerlink\" title=\"通信基础\"></a>通信基础</h4><h4 id=\"传输介质-amp-设备\"><a href=\"#传输介质-amp-设备\" class=\"headerlink\" title=\"传输介质&amp;设备\"></a>传输介质&amp;设备</h4>"},{"title":"未命名","date":"2023-05-05T13:30:42.000Z","_content":"```java\npublic class Solution\n{\n\npublic int[] shortestAlternatingPaths(int n, int[][] redEdges, int[][] blueEdges)\n{\n    List<Integer>[] redList = new List[n];\n    List<Integer>[] blueList = new List[n];\n    \n    for(int i = 0; i < n; ++i)\n    {\n        redList[i] = new ArrayList<>();\n        blueList[i] = new ArrayList<>();\n    }\n    \n    for(int[] e : redEdges)\n    {\n        redList[e[0]].add(e[1]);\n    }\n    \n    for(int[] e : blueEdges)\n    {\n        blueList[e[0]].add(e[1]);\n    }\n    \n    int[] redAns = new int[n];// 最后一步为 [红色] 时到达点i的 [最小] 步数\n    int[] blueAns = new int[n];// 最后一步为 [蓝色] 时到达点i的 [最小] 步数\n    \n    for(int i = 1; i < n; i++)// 初始化 所有 [最小] 步数全部设置成 [MAX]\n    {                         // 从 [1] 开始因为从 [点0] 到 [点0] 需要 [0] 步\n        redAns[i] = Integer.MAX_VALUE;\n        blueAns[i] = Integer.MAX_VALUE;\n    }\n    \n    Queue<int[]> queue = new ArrayDeque<>();// 由长度为 [2] 的数组表示每个点\n                                            // 点的序号 + 下一次要走的 [颜色]\n    \n    queue.add(new int[]{0, 0});// [0] 表示下一次要走 [红色]\n    queue.add(new int[]{0, 1});// [1] 表示下一次要走 [蓝色]\n                               // 初始状态有 [2] 个因为一开始可以走 [红色] 或者 [蓝色]\n    \n    int level = 0;// bfs的层数 = 走的步数\n                  // 在层数 [i] 到达的点 意味着从 [0] 开始走 [i] 步可以到达这个点\n    \n    while(!queue.isEmpty())\n    {\n        level++;// bfs的层数 [+1] \n        \n        int size = queue.size();\n        \n        for(int i = 0; i < size; i++)// 对于每个准备走的点\n        {\n            int[] curArr = queue.poll();\n            int cur = curArr[0];\n            \n            if(curArr[1] == 0)// 如果这个点下一步要走 [红色]\n            {\n                for(int next : redList[cur])// 从 [红色] 的邻接表里找可以走到的下一个点'next'\n                {\n                    if(level < redAns[next])// 如果记录的最后一步为 [红色] 时到达点'next'\n                    {                       // 的 [最小] 步数 [大于] 当前层数\n\n                        redAns[next] = level;// 更新 [最小] 步数\n                        queue.offer(new int[]{next, 1});//将点'next'入队 并且下一次要走 [蓝色]\n                    }\n                }\n            }\n            else// 如果这个点下一步要走 [蓝色] 时同理\n            {\n                for(int next : blueList[cur])\n                {\n                    if(level < blueAns[next])\n                    {\n                        blueAns[next] = level;\n                        queue.offer(new int[]{next, 0});\n                    }\n                }\n            }\n        }\n    }\n    \n    // 到达一个点的最小步数为 min([红色]结尾时的[最小]步数，[蓝色]结尾时的[最小]步数)\n    for(int i = 0; i < redAns.length; i++)\n    {\n        if(blueAns[i] < redAns[i])\n        {\n            redAns[i] = blueAns[i];\n        }\n        else if(redAns[i] == Integer.MAX_VALUE)// 如果都为 [MAX] 证明无法走到\n        {\n            redAns[i] = -1;\n        }\n    }\n    \n    return redAns;\n}\n\n}\n```\n","source":"_posts/学习笔记/leetcode/未命名.md","raw":"---\ntitle: 未命名\ndate: 2023-05-05 21:30:42\ntags:  \n---\n```java\npublic class Solution\n{\n\npublic int[] shortestAlternatingPaths(int n, int[][] redEdges, int[][] blueEdges)\n{\n    List<Integer>[] redList = new List[n];\n    List<Integer>[] blueList = new List[n];\n    \n    for(int i = 0; i < n; ++i)\n    {\n        redList[i] = new ArrayList<>();\n        blueList[i] = new ArrayList<>();\n    }\n    \n    for(int[] e : redEdges)\n    {\n        redList[e[0]].add(e[1]);\n    }\n    \n    for(int[] e : blueEdges)\n    {\n        blueList[e[0]].add(e[1]);\n    }\n    \n    int[] redAns = new int[n];// 最后一步为 [红色] 时到达点i的 [最小] 步数\n    int[] blueAns = new int[n];// 最后一步为 [蓝色] 时到达点i的 [最小] 步数\n    \n    for(int i = 1; i < n; i++)// 初始化 所有 [最小] 步数全部设置成 [MAX]\n    {                         // 从 [1] 开始因为从 [点0] 到 [点0] 需要 [0] 步\n        redAns[i] = Integer.MAX_VALUE;\n        blueAns[i] = Integer.MAX_VALUE;\n    }\n    \n    Queue<int[]> queue = new ArrayDeque<>();// 由长度为 [2] 的数组表示每个点\n                                            // 点的序号 + 下一次要走的 [颜色]\n    \n    queue.add(new int[]{0, 0});// [0] 表示下一次要走 [红色]\n    queue.add(new int[]{0, 1});// [1] 表示下一次要走 [蓝色]\n                               // 初始状态有 [2] 个因为一开始可以走 [红色] 或者 [蓝色]\n    \n    int level = 0;// bfs的层数 = 走的步数\n                  // 在层数 [i] 到达的点 意味着从 [0] 开始走 [i] 步可以到达这个点\n    \n    while(!queue.isEmpty())\n    {\n        level++;// bfs的层数 [+1] \n        \n        int size = queue.size();\n        \n        for(int i = 0; i < size; i++)// 对于每个准备走的点\n        {\n            int[] curArr = queue.poll();\n            int cur = curArr[0];\n            \n            if(curArr[1] == 0)// 如果这个点下一步要走 [红色]\n            {\n                for(int next : redList[cur])// 从 [红色] 的邻接表里找可以走到的下一个点'next'\n                {\n                    if(level < redAns[next])// 如果记录的最后一步为 [红色] 时到达点'next'\n                    {                       // 的 [最小] 步数 [大于] 当前层数\n\n                        redAns[next] = level;// 更新 [最小] 步数\n                        queue.offer(new int[]{next, 1});//将点'next'入队 并且下一次要走 [蓝色]\n                    }\n                }\n            }\n            else// 如果这个点下一步要走 [蓝色] 时同理\n            {\n                for(int next : blueList[cur])\n                {\n                    if(level < blueAns[next])\n                    {\n                        blueAns[next] = level;\n                        queue.offer(new int[]{next, 0});\n                    }\n                }\n            }\n        }\n    }\n    \n    // 到达一个点的最小步数为 min([红色]结尾时的[最小]步数，[蓝色]结尾时的[最小]步数)\n    for(int i = 0; i < redAns.length; i++)\n    {\n        if(blueAns[i] < redAns[i])\n        {\n            redAns[i] = blueAns[i];\n        }\n        else if(redAns[i] == Integer.MAX_VALUE)// 如果都为 [MAX] 证明无法走到\n        {\n            redAns[i] = -1;\n        }\n    }\n    \n    return redAns;\n}\n\n}\n```\n","slug":"学习笔记/leetcode/未命名","published":1,"updated":"2023-05-19T14:07:31.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oak000jwwvn41g81jld","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span>[] shortestAlternatingPaths(<span class=\"type\">int</span> n, <span class=\"type\">int</span>[][] redEdges, <span class=\"type\">int</span>[][] blueEdges)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    List&lt;Integer&gt;[] redList = <span class=\"keyword\">new</span> <span class=\"title class_\">List</span>[n];</span><br><span class=\"line\">    List&lt;Integer&gt;[] blueList = <span class=\"keyword\">new</span> <span class=\"title class_\">List</span>[n];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; n; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        redList[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        blueList[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span>[] e : redEdges)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        redList[e[<span class=\"number\">0</span>]].add(e[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span>[] e : blueEdges)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        blueList[e[<span class=\"number\">0</span>]].add(e[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span>[] redAns = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n];<span class=\"comment\">// 最后一步为 [红色] 时到达点i的 [最小] 步数</span></span><br><span class=\"line\">    <span class=\"type\">int</span>[] blueAns = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n];<span class=\"comment\">// 最后一步为 [蓝色] 时到达点i的 [最小] 步数</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; n; i++)<span class=\"comment\">// 初始化 所有 [最小] 步数全部设置成 [MAX]</span></span><br><span class=\"line\">    &#123;                         <span class=\"comment\">// 从 [1] 开始因为从 [点0] 到 [点0] 需要 [0] 步</span></span><br><span class=\"line\">        redAns[i] = Integer.MAX_VALUE;</span><br><span class=\"line\">        blueAns[i] = Integer.MAX_VALUE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Queue&lt;<span class=\"type\">int</span>[]&gt; queue = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayDeque</span>&lt;&gt;();<span class=\"comment\">// 由长度为 [2] 的数组表示每个点</span></span><br><span class=\"line\">                                            <span class=\"comment\">// 点的序号 + 下一次要走的 [颜色]</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    queue.add(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;);<span class=\"comment\">// [0] 表示下一次要走 [红色]</span></span><br><span class=\"line\">    queue.add(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;);<span class=\"comment\">// [1] 表示下一次要走 [蓝色]</span></span><br><span class=\"line\">                               <span class=\"comment\">// 初始状态有 [2] 个因为一开始可以走 [红色] 或者 [蓝色]</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">level</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;<span class=\"comment\">// bfs的层数 = 走的步数</span></span><br><span class=\"line\">                  <span class=\"comment\">// 在层数 [i] 到达的点 意味着从 [0] 开始走 [i] 步可以到达这个点</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!queue.isEmpty())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        level++;<span class=\"comment\">// bfs的层数 [+1] </span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> queue.size();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; size; i++)<span class=\"comment\">// 对于每个准备走的点</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span>[] curArr = queue.poll();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">cur</span> <span class=\"operator\">=</span> curArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(curArr[<span class=\"number\">1</span>] == <span class=\"number\">0</span>)<span class=\"comment\">// 如果这个点下一步要走 [红色]</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> next : redList[cur])<span class=\"comment\">// 从 [红色] 的邻接表里找可以走到的下一个点&#x27;next&#x27;</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(level &lt; redAns[next])<span class=\"comment\">// 如果记录的最后一步为 [红色] 时到达点&#x27;next&#x27;</span></span><br><span class=\"line\">                    &#123;                       <span class=\"comment\">// 的 [最小] 步数 [大于] 当前层数</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        redAns[next] = level;<span class=\"comment\">// 更新 [最小] 步数</span></span><br><span class=\"line\">                        queue.offer(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;next, <span class=\"number\">1</span>&#125;);<span class=\"comment\">//将点&#x27;next&#x27;入队 并且下一次要走 [蓝色]</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span><span class=\"comment\">// 如果这个点下一步要走 [蓝色] 时同理</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> next : blueList[cur])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(level &lt; blueAns[next])</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        blueAns[next] = level;</span><br><span class=\"line\">                        queue.offer(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;next, <span class=\"number\">0</span>&#125;);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 到达一个点的最小步数为 min([红色]结尾时的[最小]步数，[蓝色]结尾时的[最小]步数)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; redAns.length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(blueAns[i] &lt; redAns[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            redAns[i] = blueAns[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(redAns[i] == Integer.MAX_VALUE)<span class=\"comment\">// 如果都为 [MAX] 证明无法走到</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            redAns[i] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> redAns;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span>[] shortestAlternatingPaths(<span class=\"type\">int</span> n, <span class=\"type\">int</span>[][] redEdges, <span class=\"type\">int</span>[][] blueEdges)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    List&lt;Integer&gt;[] redList = <span class=\"keyword\">new</span> <span class=\"title class_\">List</span>[n];</span><br><span class=\"line\">    List&lt;Integer&gt;[] blueList = <span class=\"keyword\">new</span> <span class=\"title class_\">List</span>[n];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; n; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        redList[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        blueList[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span>[] e : redEdges)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        redList[e[<span class=\"number\">0</span>]].add(e[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span>[] e : blueEdges)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        blueList[e[<span class=\"number\">0</span>]].add(e[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span>[] redAns = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n];<span class=\"comment\">// 最后一步为 [红色] 时到达点i的 [最小] 步数</span></span><br><span class=\"line\">    <span class=\"type\">int</span>[] blueAns = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n];<span class=\"comment\">// 最后一步为 [蓝色] 时到达点i的 [最小] 步数</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; n; i++)<span class=\"comment\">// 初始化 所有 [最小] 步数全部设置成 [MAX]</span></span><br><span class=\"line\">    &#123;                         <span class=\"comment\">// 从 [1] 开始因为从 [点0] 到 [点0] 需要 [0] 步</span></span><br><span class=\"line\">        redAns[i] = Integer.MAX_VALUE;</span><br><span class=\"line\">        blueAns[i] = Integer.MAX_VALUE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Queue&lt;<span class=\"type\">int</span>[]&gt; queue = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayDeque</span>&lt;&gt;();<span class=\"comment\">// 由长度为 [2] 的数组表示每个点</span></span><br><span class=\"line\">                                            <span class=\"comment\">// 点的序号 + 下一次要走的 [颜色]</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    queue.add(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;);<span class=\"comment\">// [0] 表示下一次要走 [红色]</span></span><br><span class=\"line\">    queue.add(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;);<span class=\"comment\">// [1] 表示下一次要走 [蓝色]</span></span><br><span class=\"line\">                               <span class=\"comment\">// 初始状态有 [2] 个因为一开始可以走 [红色] 或者 [蓝色]</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">level</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;<span class=\"comment\">// bfs的层数 = 走的步数</span></span><br><span class=\"line\">                  <span class=\"comment\">// 在层数 [i] 到达的点 意味着从 [0] 开始走 [i] 步可以到达这个点</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!queue.isEmpty())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        level++;<span class=\"comment\">// bfs的层数 [+1] </span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> queue.size();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; size; i++)<span class=\"comment\">// 对于每个准备走的点</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span>[] curArr = queue.poll();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">cur</span> <span class=\"operator\">=</span> curArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(curArr[<span class=\"number\">1</span>] == <span class=\"number\">0</span>)<span class=\"comment\">// 如果这个点下一步要走 [红色]</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> next : redList[cur])<span class=\"comment\">// 从 [红色] 的邻接表里找可以走到的下一个点&#x27;next&#x27;</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(level &lt; redAns[next])<span class=\"comment\">// 如果记录的最后一步为 [红色] 时到达点&#x27;next&#x27;</span></span><br><span class=\"line\">                    &#123;                       <span class=\"comment\">// 的 [最小] 步数 [大于] 当前层数</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        redAns[next] = level;<span class=\"comment\">// 更新 [最小] 步数</span></span><br><span class=\"line\">                        queue.offer(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;next, <span class=\"number\">1</span>&#125;);<span class=\"comment\">//将点&#x27;next&#x27;入队 并且下一次要走 [蓝色]</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span><span class=\"comment\">// 如果这个点下一步要走 [蓝色] 时同理</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> next : blueList[cur])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(level &lt; blueAns[next])</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        blueAns[next] = level;</span><br><span class=\"line\">                        queue.offer(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;next, <span class=\"number\">0</span>&#125;);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 到达一个点的最小步数为 min([红色]结尾时的[最小]步数，[蓝色]结尾时的[最小]步数)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; redAns.length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(blueAns[i] &lt; redAns[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            redAns[i] = blueAns[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(redAns[i] == Integer.MAX_VALUE)<span class=\"comment\">// 如果都为 [MAX] 证明无法走到</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            redAns[i] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> redAns;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"SSM整合","date":"2023-05-05T13:30:42.000Z","_content":"# SSM的整合\n\n##### 创建数据库\n\n```mysql\ncreate database `ssmbuild`;\nuse `ssmbuild`;\ncreate table if not exists `books`(\n    `bookID` int(10) not null auto_increment,\n    `bookName` varchar(100) not null ,\n    `bookCounts` int(11) not null ,\n    `detail` varchar(200) not null ,\n    KEY `bookId`(`bookID`)\n)engine = innodb default charset =utf8;\n\ninsert into `books`(bookID, bookName, bookCounts, detail)\nVALUES\n(1,'Java',1,'从入门到放弃'),\n(2,'MySQL',10,'从删库到跑路'),\n(3,'Linux',5,'从进门到进牢');\nselect * from books;\n```\n\n##### idea连接数据库\n\n![image-20220521221311212](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221311212.png)\n\n##### 导入依赖\n\n```xml\n    <dependencies>\n        <!--Junit-->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.2</version>\n        </dependency>\n        <!--数据库驱动-->\n        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>8.0.29</version>\n        </dependency>\n\n        <!-- 数据库连接池 -->\n        <!-- https://mvnrepository.com/artifact/com.mchange/c3p0 -->\n        <dependency>\n            <groupId>com.mchange</groupId>\n            <artifactId>c3p0</artifactId>\n            <version>0.9.5.5</version>\n        </dependency>\n\n\n        <!--Servlet - JSP -->\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n            <version>2.5</version>\n        </dependency>\n        <!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api -->\n        <dependency>\n            <groupId>javax.servlet.jsp</groupId>\n            <artifactId>javax.servlet.jsp-api</artifactId>\n            <version>2.3.3</version>\n            <scope>provided</scope>\n        </dependency>\n\n        <!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl -->\n        <dependency>\n            <groupId>javax.servlet.jsp.jstl</groupId>\n            <artifactId>jstl</artifactId>\n            <version>1.2</version>\n        </dependency>\n\n\n        <!--Mybatis-->\n        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.5.9</version>\n        </dependency>\n\n        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis-spring</artifactId>\n            <version>2.0.7</version>\n        </dependency>\n\n\n        <!--Spring-->\n        <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-webmvc</artifactId>\n            <version>5.3.20</version>\n        </dependency>\n\n        <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-jdbc</artifactId>\n            <version>5.3.20</version>\n        </dependency>\n\n    </dependencies>\n```\n\n##### 过滤资源\n\n```xml\n <build>\n        <resources>\n            <resource>\n                <directory>src/main/resources</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>true</filtering>\n            </resource>\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>true</filtering>\n            </resource>\n        </resources>\n    </build>\n```\n\n##### maven插件\n\n```xml\n     <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->\n            <plugins>\n\n         <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-resources-plugin</artifactId>\n             <version>3.0.2</version>\n             <configuration>\n                 <encoding>UTF-8</encoding>\n             </configuration>\n         </plugin>\n\n\n\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.1.0</version>\n                </plugin>\n                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->\n<!--                <plugin>-->\n<!--                    <artifactId>maven-resources-plugin</artifactId>-->\n<!--                    <version>3.0.2</version>-->\n<!--                </plugin>-->\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>2.22.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-war-plugin</artifactId>\n                    <version>3.2.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.12.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>2.5.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>2.8.2</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n```\n\n##### 创建基本的目录\n\n![image-20220521221351551](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221351551.png)\n\n##### 创建实体类(/pojo/books)\n\n![image-20220521221635793](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221635793.png)\n\n##### 创建接口(/dao/bookmapper)\n\n```java\npublic interface BookMapper {\n    //添加一本书\n    int addBook(Books book);\n    //删除一本书\n    int deleteBookById(int id);\n    //更新一本书\n    int updateBook(Books books);\n    //查询一本书\n    Books queryBookById(int id);\n    //查询全部的书\n    List<Books> queryAllBooks();\n}\n```\n\nbookmapper\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<mapper namespace=\"com.manager.dao.BookMapper\">\n\n    \n\n</mapper>\n```\n\n\n\n##### 创建service层接口(/service/BookService)\n\n```xml\npublic interface BookService {\n    //增加一个Book\n    int addBook(Books book);\n    //根据id删除一个Book\n    int deleteBookById(int id);\n    //更新Book\n    int updateBook(Books books);\n    //根据id查询,返回一个Book\n    Books queryBookById(int id);\n    //查询全部Book,返回list集合\n    List<Books> queryAllBooks();\n\n}\n```\n\n##### 并且创建实现类(service/BookServiceImpl)\n\n```java\npublic class BookServiceImpl implements BookService{\n\n\n    //调用dao层的操作，设置一个set接口，方便Spring管理\n    private BookMapper bookMapper;\n\n    @Override\n    public int addBook(Books book) {\n        return bookMapper.addBook(book);\n    }\n\n    @Override\n    public int deleteBookById(int id) {\n        return bookMapper.deleteBookById(id);\n    }\n\n    @Override\n    public int updateBook(Books books) {\n        return bookMapper.updateBook(books);\n    }\n\n    @Override\n    public Books queryBookById(int id) {\n        return bookMapper.queryBookById(id);\n    }\n\n    @Override\n    public List<Books> queryAllBooks() {\n        return bookMapper.queryAllBooks();\n    }\n\n    public BookMapper getBookMapper() {\n        return bookMapper;\n    }\n\n    public void setBookMapper(BookMapper bookMapper) {\n        this.bookMapper = bookMapper;\n    }\n}\n```\n\n到此基本结构已经建立,开始配置框架!\n\n### 配置框架\n\n![image-20220521222413471](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521222413471.png)\n\n1. applicationContext.xml(spring配置文件)\n\n2. spring-dao.xml(spring整合dao层)\n\n3. spring-service.xml(spring整合service层)\n\n4. spring-mvc.xml(spring)\n\n5. mybatis-config.xml(mybatis基本配置)\n\n6. database.properties(数据源)\n\n   applicationContext导入其他整合配置\n\n   ```xml\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <beans xmlns=\"http://www.springframework.org/schema/beans\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xmlns:context=\"http://www.springframework.org/schema/context\"\n          xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n          http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\">\n       <import resource=\"spring-dao.xml\"/>\n       <import resource=\"spring-service.xml\"/>\n       <import resource=\"spring-mvc.xml\"/>\n   </beans>\n   ```\n\n   spring-dao中配置数据源\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\">\n    <!-- 配置整合mybatis -->\n    <!-- 1.关联数据库文件 -->\n    <context:property-placeholder location=\"classpath:database.properties\"/>\n    <bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n        <!-- 配置连接池属性 -->\n        <property name=\"driverClass\" value=\"${jdbc.driver}\"/>\n        <property name=\"jdbcUrl\" value=\"${jdbc.url}\"/>\n        <property name=\"user\" value=\"${jdbc.username}\"/>\n        <property name=\"password\" value=\"${jdbc.password}\"/>\n\n        <!-- c3p0连接池的私有属性 -->\n        <property name=\"maxPoolSize\" value=\"30\"/>\n        <property name=\"minPoolSize\" value=\"10\"/>\n        <!-- 关闭连接后不自动commit -->\n        <property name=\"autoCommitOnClose\" value=\"false\"/>\n        <!-- 获取连接超时时间 -->\n        <property name=\"checkoutTimeout\" value=\"10000\"/>\n        <!-- 当获取连接失败重试次数 -->\n        <property name=\"acquireRetryAttempts\" value=\"2\"/>\n    </bean>\n    <!-- 3.配置SqlSessionFactory对象 -->\n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n        <!-- 注入数据库连接池 -->\n        <property name=\"dataSource\" ref=\"dataSource\"/>\n        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->\n        <property name=\"configLocation\" value=\"classpath:mybatis-config.xml\"/>\n    </bean>\n\n    <!-- 4.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 -->\n    <!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html-->\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n        <!-- 注入sqlSessionFactory -->\n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\n        <!-- 给出需要扫描Dao接口包 -->\n        <property name=\"basePackage\" value=\"com.manager.dao\"/>\n    </bean>\n</beans>\n```\n\nspring-service\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\">\n    <!-- 扫描service相关的bean -->\n    <context:component-scan base-package=\"com.manager.service\" />\n    <!--BookServiceImpl注入到IOC容器中-->\n    <bean id=\"BookServiceImpl\" class=\"com.manager.service.BookServiceImpl\">\n        <property name=\"bookMapper\" ref=\"bookMapper\"/>\n    </bean>\n\n    <!-- 配置事务管理器 -->\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n        <!-- 注入数据库连接池 -->\n        <property name=\"dataSource\" ref=\"dataSource\" />\n    </bean>\n</beans>\n```\n\nspring-mvc\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n   http://www.springframework.org/schema/beans/spring-beans.xsd\n   http://www.springframework.org/schema/context\n   http://www.springframework.org/schema/context/spring-context.xsd\n   http://www.springframework.org/schema/mvc\n   https://www.springframework.org/schema/mvc/spring-mvc.xsd\">\n\n    <!-- 配置SpringMVC -->\n    <!-- 1.开启SpringMVC注解驱动 -->\n    <mvc:annotation-driven />\n    <!-- 2.静态资源默认servlet配置-->\n    <mvc:default-servlet-handler/>\n\n    <!-- 3.配置jsp 显示ViewResolver视图解析器 -->\n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">\n        <property name=\"viewClass\" value=\"org.springframework.web.servlet.view.JstlView\" />\n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />\n        <property name=\"suffix\" value=\".jsp\" />\n    </bean>\n\n    <!-- 4.扫描web相关的bean -->\n    <context:component-scan base-package=\"com.manager.controller\" />\n\n</beans>\n```\n\nmybatis-config.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n<typeAliases>\n    <package name=\"com.manager.pojo\"/>\n</typeAliases>\n    <mappers>\n        <mapper resource=\"com/manager/dao/BookMapper.xml\"/>\n    </mappers>\n\n\n</configuration>\n```\n\ndatabase,properties\n\n```properties\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&useUnicode=true&characterEncoding=utf8\njdbc.username=root\njdbc.password=123\n```\n\nweb.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n    <!--DispatcherServlet-->\n    <servlet>\n        <servlet-name>DispatcherServlet</servlet-name>\n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n        <init-param>\n            <param-name>contextConfigLocation</param-name>\n            <!--一定要注意:我们这里加载的是总的配置文件，之前被这里坑了！-->\n            <param-value>classpath:applicationContext.xml</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>DispatcherServlet</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n\n    <!--encodingFilter-->\n    <filter>\n        <filter-name>encodingFilter</filter-name>\n        <filter-class>\n            org.springframework.web.filter.CharacterEncodingFilter\n        </filter-class>\n        <init-param>\n            <param-name>encoding</param-name>\n            <param-value>utf-8</param-value>\n        </init-param>\n    </filter>\n    <filter-mapping>\n        <filter-name>encodingFilter</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n\n    <!--Session过期时间-->\n    <session-config>\n        <session-timeout>15</session-timeout>\n    </session-config>\n\n</web-app>\n```\n\nrestful只要url中的名字和函数形参名字一样就可以不写{name}","source":"_posts/学习笔记/ssm框架/SSM整合.md","raw":"---\ntitle: SSM整合\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# SSM的整合\n\n##### 创建数据库\n\n```mysql\ncreate database `ssmbuild`;\nuse `ssmbuild`;\ncreate table if not exists `books`(\n    `bookID` int(10) not null auto_increment,\n    `bookName` varchar(100) not null ,\n    `bookCounts` int(11) not null ,\n    `detail` varchar(200) not null ,\n    KEY `bookId`(`bookID`)\n)engine = innodb default charset =utf8;\n\ninsert into `books`(bookID, bookName, bookCounts, detail)\nVALUES\n(1,'Java',1,'从入门到放弃'),\n(2,'MySQL',10,'从删库到跑路'),\n(3,'Linux',5,'从进门到进牢');\nselect * from books;\n```\n\n##### idea连接数据库\n\n![image-20220521221311212](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221311212.png)\n\n##### 导入依赖\n\n```xml\n    <dependencies>\n        <!--Junit-->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.2</version>\n        </dependency>\n        <!--数据库驱动-->\n        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>8.0.29</version>\n        </dependency>\n\n        <!-- 数据库连接池 -->\n        <!-- https://mvnrepository.com/artifact/com.mchange/c3p0 -->\n        <dependency>\n            <groupId>com.mchange</groupId>\n            <artifactId>c3p0</artifactId>\n            <version>0.9.5.5</version>\n        </dependency>\n\n\n        <!--Servlet - JSP -->\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n            <version>2.5</version>\n        </dependency>\n        <!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api -->\n        <dependency>\n            <groupId>javax.servlet.jsp</groupId>\n            <artifactId>javax.servlet.jsp-api</artifactId>\n            <version>2.3.3</version>\n            <scope>provided</scope>\n        </dependency>\n\n        <!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl -->\n        <dependency>\n            <groupId>javax.servlet.jsp.jstl</groupId>\n            <artifactId>jstl</artifactId>\n            <version>1.2</version>\n        </dependency>\n\n\n        <!--Mybatis-->\n        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.5.9</version>\n        </dependency>\n\n        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis-spring</artifactId>\n            <version>2.0.7</version>\n        </dependency>\n\n\n        <!--Spring-->\n        <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-webmvc</artifactId>\n            <version>5.3.20</version>\n        </dependency>\n\n        <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-jdbc</artifactId>\n            <version>5.3.20</version>\n        </dependency>\n\n    </dependencies>\n```\n\n##### 过滤资源\n\n```xml\n <build>\n        <resources>\n            <resource>\n                <directory>src/main/resources</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>true</filtering>\n            </resource>\n            <resource>\n                <directory>src/main/java</directory>\n                <includes>\n                    <include>**/*.properties</include>\n                    <include>**/*.xml</include>\n                </includes>\n                <filtering>true</filtering>\n            </resource>\n        </resources>\n    </build>\n```\n\n##### maven插件\n\n```xml\n     <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->\n            <plugins>\n\n         <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-resources-plugin</artifactId>\n             <version>3.0.2</version>\n             <configuration>\n                 <encoding>UTF-8</encoding>\n             </configuration>\n         </plugin>\n\n\n\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.1.0</version>\n                </plugin>\n                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->\n<!--                <plugin>-->\n<!--                    <artifactId>maven-resources-plugin</artifactId>-->\n<!--                    <version>3.0.2</version>-->\n<!--                </plugin>-->\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>2.22.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-war-plugin</artifactId>\n                    <version>3.2.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.12.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>2.5.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>2.8.2</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n```\n\n##### 创建基本的目录\n\n![image-20220521221351551](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221351551.png)\n\n##### 创建实体类(/pojo/books)\n\n![image-20220521221635793](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221635793.png)\n\n##### 创建接口(/dao/bookmapper)\n\n```java\npublic interface BookMapper {\n    //添加一本书\n    int addBook(Books book);\n    //删除一本书\n    int deleteBookById(int id);\n    //更新一本书\n    int updateBook(Books books);\n    //查询一本书\n    Books queryBookById(int id);\n    //查询全部的书\n    List<Books> queryAllBooks();\n}\n```\n\nbookmapper\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<mapper namespace=\"com.manager.dao.BookMapper\">\n\n    \n\n</mapper>\n```\n\n\n\n##### 创建service层接口(/service/BookService)\n\n```xml\npublic interface BookService {\n    //增加一个Book\n    int addBook(Books book);\n    //根据id删除一个Book\n    int deleteBookById(int id);\n    //更新Book\n    int updateBook(Books books);\n    //根据id查询,返回一个Book\n    Books queryBookById(int id);\n    //查询全部Book,返回list集合\n    List<Books> queryAllBooks();\n\n}\n```\n\n##### 并且创建实现类(service/BookServiceImpl)\n\n```java\npublic class BookServiceImpl implements BookService{\n\n\n    //调用dao层的操作，设置一个set接口，方便Spring管理\n    private BookMapper bookMapper;\n\n    @Override\n    public int addBook(Books book) {\n        return bookMapper.addBook(book);\n    }\n\n    @Override\n    public int deleteBookById(int id) {\n        return bookMapper.deleteBookById(id);\n    }\n\n    @Override\n    public int updateBook(Books books) {\n        return bookMapper.updateBook(books);\n    }\n\n    @Override\n    public Books queryBookById(int id) {\n        return bookMapper.queryBookById(id);\n    }\n\n    @Override\n    public List<Books> queryAllBooks() {\n        return bookMapper.queryAllBooks();\n    }\n\n    public BookMapper getBookMapper() {\n        return bookMapper;\n    }\n\n    public void setBookMapper(BookMapper bookMapper) {\n        this.bookMapper = bookMapper;\n    }\n}\n```\n\n到此基本结构已经建立,开始配置框架!\n\n### 配置框架\n\n![image-20220521222413471](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521222413471.png)\n\n1. applicationContext.xml(spring配置文件)\n\n2. spring-dao.xml(spring整合dao层)\n\n3. spring-service.xml(spring整合service层)\n\n4. spring-mvc.xml(spring)\n\n5. mybatis-config.xml(mybatis基本配置)\n\n6. database.properties(数据源)\n\n   applicationContext导入其他整合配置\n\n   ```xml\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <beans xmlns=\"http://www.springframework.org/schema/beans\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xmlns:context=\"http://www.springframework.org/schema/context\"\n          xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n          http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\">\n       <import resource=\"spring-dao.xml\"/>\n       <import resource=\"spring-service.xml\"/>\n       <import resource=\"spring-mvc.xml\"/>\n   </beans>\n   ```\n\n   spring-dao中配置数据源\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\">\n    <!-- 配置整合mybatis -->\n    <!-- 1.关联数据库文件 -->\n    <context:property-placeholder location=\"classpath:database.properties\"/>\n    <bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n        <!-- 配置连接池属性 -->\n        <property name=\"driverClass\" value=\"${jdbc.driver}\"/>\n        <property name=\"jdbcUrl\" value=\"${jdbc.url}\"/>\n        <property name=\"user\" value=\"${jdbc.username}\"/>\n        <property name=\"password\" value=\"${jdbc.password}\"/>\n\n        <!-- c3p0连接池的私有属性 -->\n        <property name=\"maxPoolSize\" value=\"30\"/>\n        <property name=\"minPoolSize\" value=\"10\"/>\n        <!-- 关闭连接后不自动commit -->\n        <property name=\"autoCommitOnClose\" value=\"false\"/>\n        <!-- 获取连接超时时间 -->\n        <property name=\"checkoutTimeout\" value=\"10000\"/>\n        <!-- 当获取连接失败重试次数 -->\n        <property name=\"acquireRetryAttempts\" value=\"2\"/>\n    </bean>\n    <!-- 3.配置SqlSessionFactory对象 -->\n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n        <!-- 注入数据库连接池 -->\n        <property name=\"dataSource\" ref=\"dataSource\"/>\n        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->\n        <property name=\"configLocation\" value=\"classpath:mybatis-config.xml\"/>\n    </bean>\n\n    <!-- 4.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 -->\n    <!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html-->\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n        <!-- 注入sqlSessionFactory -->\n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\n        <!-- 给出需要扫描Dao接口包 -->\n        <property name=\"basePackage\" value=\"com.manager.dao\"/>\n    </bean>\n</beans>\n```\n\nspring-service\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\">\n    <!-- 扫描service相关的bean -->\n    <context:component-scan base-package=\"com.manager.service\" />\n    <!--BookServiceImpl注入到IOC容器中-->\n    <bean id=\"BookServiceImpl\" class=\"com.manager.service.BookServiceImpl\">\n        <property name=\"bookMapper\" ref=\"bookMapper\"/>\n    </bean>\n\n    <!-- 配置事务管理器 -->\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n        <!-- 注入数据库连接池 -->\n        <property name=\"dataSource\" ref=\"dataSource\" />\n    </bean>\n</beans>\n```\n\nspring-mvc\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n   http://www.springframework.org/schema/beans/spring-beans.xsd\n   http://www.springframework.org/schema/context\n   http://www.springframework.org/schema/context/spring-context.xsd\n   http://www.springframework.org/schema/mvc\n   https://www.springframework.org/schema/mvc/spring-mvc.xsd\">\n\n    <!-- 配置SpringMVC -->\n    <!-- 1.开启SpringMVC注解驱动 -->\n    <mvc:annotation-driven />\n    <!-- 2.静态资源默认servlet配置-->\n    <mvc:default-servlet-handler/>\n\n    <!-- 3.配置jsp 显示ViewResolver视图解析器 -->\n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">\n        <property name=\"viewClass\" value=\"org.springframework.web.servlet.view.JstlView\" />\n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />\n        <property name=\"suffix\" value=\".jsp\" />\n    </bean>\n\n    <!-- 4.扫描web相关的bean -->\n    <context:component-scan base-package=\"com.manager.controller\" />\n\n</beans>\n```\n\nmybatis-config.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n<typeAliases>\n    <package name=\"com.manager.pojo\"/>\n</typeAliases>\n    <mappers>\n        <mapper resource=\"com/manager/dao/BookMapper.xml\"/>\n    </mappers>\n\n\n</configuration>\n```\n\ndatabase,properties\n\n```properties\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&useUnicode=true&characterEncoding=utf8\njdbc.username=root\njdbc.password=123\n```\n\nweb.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n    <!--DispatcherServlet-->\n    <servlet>\n        <servlet-name>DispatcherServlet</servlet-name>\n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n        <init-param>\n            <param-name>contextConfigLocation</param-name>\n            <!--一定要注意:我们这里加载的是总的配置文件，之前被这里坑了！-->\n            <param-value>classpath:applicationContext.xml</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>DispatcherServlet</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n\n    <!--encodingFilter-->\n    <filter>\n        <filter-name>encodingFilter</filter-name>\n        <filter-class>\n            org.springframework.web.filter.CharacterEncodingFilter\n        </filter-class>\n        <init-param>\n            <param-name>encoding</param-name>\n            <param-value>utf-8</param-value>\n        </init-param>\n    </filter>\n    <filter-mapping>\n        <filter-name>encodingFilter</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n\n    <!--Session过期时间-->\n    <session-config>\n        <session-timeout>15</session-timeout>\n    </session-config>\n\n</web-app>\n```\n\nrestful只要url中的名字和函数形参名字一样就可以不写{name}","slug":"学习笔记/ssm框架/SSM整合","published":1,"updated":"2023-05-19T14:07:31.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oal000kwwvneqt298me","content":"<h1 id=\"SSM的整合\"><a href=\"#SSM的整合\" class=\"headerlink\" title=\"SSM的整合\"></a>SSM的整合</h1><h5 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database `ssmbuild`;</span><br><span class=\"line\">use `ssmbuild`;</span><br><span class=\"line\">create table if not exists `books`(</span><br><span class=\"line\">    `bookID` int(10) not null auto_increment,</span><br><span class=\"line\">    `bookName` varchar(100) not null ,</span><br><span class=\"line\">    `bookCounts` int(11) not null ,</span><br><span class=\"line\">    `detail` varchar(200) not null ,</span><br><span class=\"line\">    KEY `bookId`(`bookID`)</span><br><span class=\"line\">)engine = innodb default charset =utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">insert into `books`(bookID, bookName, bookCounts, detail)</span><br><span class=\"line\">VALUES</span><br><span class=\"line\">(1,&#x27;Java&#x27;,1,&#x27;从入门到放弃&#x27;),</span><br><span class=\"line\">(2,&#x27;MySQL&#x27;,10,&#x27;从删库到跑路&#x27;),</span><br><span class=\"line\">(3,&#x27;Linux&#x27;,5,&#x27;从进门到进牢&#x27;);</span><br><span class=\"line\">select * from books;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"idea连接数据库\"><a href=\"#idea连接数据库\" class=\"headerlink\" title=\"idea连接数据库\"></a>idea连接数据库</h5><p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221311212.png\" alt=\"image-20220521221311212\"></p>\n<h5 id=\"导入依赖\"><a href=\"#导入依赖\" class=\"headerlink\" title=\"导入依赖\"></a>导入依赖</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Junit--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.13.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--数据库驱动--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.29<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.mchange/c3p0 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.mchange<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.5.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Servlet - JSP --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Mybatis--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Spring--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-webmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.3.20<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-jdbc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.3.20<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"过滤资源\"><a href=\"#过滤资源\" class=\"headerlink\" title=\"过滤资源\"></a>过滤资源</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                   <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                   <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                   <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                   <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"maven插件\"><a href=\"#maven插件\" class=\"headerlink\" title=\"maven插件\"></a>maven插件</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">pluginManagement</span>&gt;</span><span class=\"comment\">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-resources-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">encoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">encoding</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-clean-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--                &lt;plugin&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--                    &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--                    &lt;version&gt;3.0.2&lt;/version&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--                &lt;/plugin&gt;--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-surefire-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.22.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-war-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-site-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-install-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-deploy-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.8.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">pluginManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建基本的目录\"><a href=\"#创建基本的目录\" class=\"headerlink\" title=\"创建基本的目录\"></a>创建基本的目录</h5><p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221351551.png\" alt=\"image-20220521221351551\"></p>\n<h5 id=\"创建实体类-x2F-pojo-x2F-books\"><a href=\"#创建实体类-x2F-pojo-x2F-books\" class=\"headerlink\" title=\"创建实体类(&#x2F;pojo&#x2F;books)\"></a>创建实体类(&#x2F;pojo&#x2F;books)</h5><p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221635793.png\" alt=\"image-20220521221635793\"></p>\n<h5 id=\"创建接口-x2F-dao-x2F-bookmapper\"><a href=\"#创建接口-x2F-dao-x2F-bookmapper\" class=\"headerlink\" title=\"创建接口(&#x2F;dao&#x2F;bookmapper)\"></a>创建接口(&#x2F;dao&#x2F;bookmapper)</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookMapper</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//添加一本书</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">addBook</span><span class=\"params\">(Books book)</span>;</span><br><span class=\"line\">    <span class=\"comment\">//删除一本书</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">deleteBookById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br><span class=\"line\">    <span class=\"comment\">//更新一本书</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">updateBook</span><span class=\"params\">(Books books)</span>;</span><br><span class=\"line\">    <span class=\"comment\">//查询一本书</span></span><br><span class=\"line\">    Books <span class=\"title function_\">queryBookById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br><span class=\"line\">    <span class=\"comment\">//查询全部的书</span></span><br><span class=\"line\">    List&lt;Books&gt; <span class=\"title function_\">queryAllBooks</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>bookmapper</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.manager.dao.BookMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"创建service层接口-x2F-service-x2F-BookService\"><a href=\"#创建service层接口-x2F-service-x2F-BookService\" class=\"headerlink\" title=\"创建service层接口(&#x2F;service&#x2F;BookService)\"></a>创建service层接口(&#x2F;service&#x2F;BookService)</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface BookService &#123;</span><br><span class=\"line\">    //增加一个Book</span><br><span class=\"line\">    int addBook(Books book);</span><br><span class=\"line\">    //根据id删除一个Book</span><br><span class=\"line\">    int deleteBookById(int id);</span><br><span class=\"line\">    //更新Book</span><br><span class=\"line\">    int updateBook(Books books);</span><br><span class=\"line\">    //根据id查询,返回一个Book</span><br><span class=\"line\">    Books queryBookById(int id);</span><br><span class=\"line\">    //查询全部Book,返回list集合</span><br><span class=\"line\">    List<span class=\"tag\">&lt;<span class=\"name\">Books</span>&gt;</span> queryAllBooks();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"并且创建实现类-service-x2F-BookServiceImpl\"><a href=\"#并且创建实现类-service-x2F-BookServiceImpl\" class=\"headerlink\" title=\"并且创建实现类(service&#x2F;BookServiceImpl)\"></a>并且创建实现类(service&#x2F;BookServiceImpl)</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//调用dao层的操作，设置一个set接口，方便Spring管理</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookMapper bookMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">addBook</span><span class=\"params\">(Books book)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.addBook(book);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">deleteBookById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.deleteBookById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">updateBook</span><span class=\"params\">(Books books)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.updateBook(books);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Books <span class=\"title function_\">queryBookById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.queryBookById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Books&gt; <span class=\"title function_\">queryAllBooks</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.queryAllBooks();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> BookMapper <span class=\"title function_\">getBookMapper</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookMapper</span><span class=\"params\">(BookMapper bookMapper)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookMapper = bookMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>到此基本结构已经建立,开始配置框架!</p>\n<h3 id=\"配置框架\"><a href=\"#配置框架\" class=\"headerlink\" title=\"配置框架\"></a>配置框架</h3><p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521222413471.png\" alt=\"image-20220521222413471\"></p>\n<ol>\n<li><p>applicationContext.xml(spring配置文件)</p>\n</li>\n<li><p>spring-dao.xml(spring整合dao层)</p>\n</li>\n<li><p>spring-service.xml(spring整合service层)</p>\n</li>\n<li><p>spring-mvc.xml(spring)</p>\n</li>\n<li><p>mybatis-config.xml(mybatis基本配置)</p>\n</li>\n<li><p>database.properties(数据源)</p>\n<p>applicationContext导入其他整合配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;spring-dao.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;spring-service.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;spring-mvc.xml&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>spring-dao中配置数据源</p>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置整合mybatis --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 1.关联数据库文件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;classpath:database.properties&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 配置连接池属性 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClass&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- c3p0连接池的私有属性 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;maxPoolSize&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;30&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;minPoolSize&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;10&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 关闭连接后不自动commit --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;autoCommitOnClose&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;false&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 获取连接超时时间 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;checkoutTimeout&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;10000&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 当获取连接失败重试次数 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;acquireRetryAttempts&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;2&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 3.配置SqlSessionFactory对象 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 配置MyBaties全局配置文件:mybatis-config.xml --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;configLocation&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 4.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 注入sqlSessionFactory --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sqlSessionFactoryBeanName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 给出需要扫描Dao接口包 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;basePackage&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.manager.dao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>spring-service</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 扫描service相关的bean --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">&quot;com.manager.service&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--BookServiceImpl注入到IOC容器中--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;BookServiceImpl&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.service.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookMapper&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookMapper&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置事务管理器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;transactionManager&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>spring-mvc</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:mvc</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   http://www.springframework.org/schema/mvc</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置SpringMVC --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 1.开启SpringMVC注解驱动 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mvc:annotation-driven</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 2.静态资源默认servlet配置--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 3.配置jsp 显示ViewResolver视图解析器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewClass&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.JstlView&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;suffix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 4.扫描web相关的bean --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">&quot;com.manager.controller&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>mybatis-config.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.manager.pojo&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;com/manager/dao/BookMapper.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>database,properties</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">jdbc.driver</span>=<span class=\"string\">com.mysql.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.password</span>=<span class=\"string\">123</span></span><br></pre></td></tr></table></figure>\n\n<p>web.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">version</span>=<span class=\"string\">&quot;4.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--DispatcherServlet--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--一定要注意:我们这里加载的是总的配置文件，之前被这里坑了！--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:applicationContext.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--encodingFilter--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">            org.springframework.web.filter.CharacterEncodingFilter</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>utf-8<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Session过期时间--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">session-config</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">session-timeout</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">session-timeout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">session-config</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>restful只要url中的名字和函数形参名字一样就可以不写{name}</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"SSM的整合\"><a href=\"#SSM的整合\" class=\"headerlink\" title=\"SSM的整合\"></a>SSM的整合</h1><h5 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database `ssmbuild`;</span><br><span class=\"line\">use `ssmbuild`;</span><br><span class=\"line\">create table if not exists `books`(</span><br><span class=\"line\">    `bookID` int(10) not null auto_increment,</span><br><span class=\"line\">    `bookName` varchar(100) not null ,</span><br><span class=\"line\">    `bookCounts` int(11) not null ,</span><br><span class=\"line\">    `detail` varchar(200) not null ,</span><br><span class=\"line\">    KEY `bookId`(`bookID`)</span><br><span class=\"line\">)engine = innodb default charset =utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">insert into `books`(bookID, bookName, bookCounts, detail)</span><br><span class=\"line\">VALUES</span><br><span class=\"line\">(1,&#x27;Java&#x27;,1,&#x27;从入门到放弃&#x27;),</span><br><span class=\"line\">(2,&#x27;MySQL&#x27;,10,&#x27;从删库到跑路&#x27;),</span><br><span class=\"line\">(3,&#x27;Linux&#x27;,5,&#x27;从进门到进牢&#x27;);</span><br><span class=\"line\">select * from books;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"idea连接数据库\"><a href=\"#idea连接数据库\" class=\"headerlink\" title=\"idea连接数据库\"></a>idea连接数据库</h5><p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221311212.png\" alt=\"image-20220521221311212\"></p>\n<h5 id=\"导入依赖\"><a href=\"#导入依赖\" class=\"headerlink\" title=\"导入依赖\"></a>导入依赖</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Junit--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.13.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--数据库驱动--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.29<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.mchange/c3p0 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.mchange<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.5.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Servlet - JSP --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Mybatis--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Spring--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-webmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.3.20<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-jdbc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.3.20<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"过滤资源\"><a href=\"#过滤资源\" class=\"headerlink\" title=\"过滤资源\"></a>过滤资源</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                   <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                   <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                   <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                   <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"maven插件\"><a href=\"#maven插件\" class=\"headerlink\" title=\"maven插件\"></a>maven插件</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">pluginManagement</span>&gt;</span><span class=\"comment\">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-resources-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                 <span class=\"tag\">&lt;<span class=\"name\">encoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">encoding</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-clean-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--                &lt;plugin&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--                    &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--                    &lt;version&gt;3.0.2&lt;/version&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--                &lt;/plugin&gt;--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-surefire-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.22.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-war-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-site-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-install-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-deploy-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.8.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">pluginManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建基本的目录\"><a href=\"#创建基本的目录\" class=\"headerlink\" title=\"创建基本的目录\"></a>创建基本的目录</h5><p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221351551.png\" alt=\"image-20220521221351551\"></p>\n<h5 id=\"创建实体类-x2F-pojo-x2F-books\"><a href=\"#创建实体类-x2F-pojo-x2F-books\" class=\"headerlink\" title=\"创建实体类(&#x2F;pojo&#x2F;books)\"></a>创建实体类(&#x2F;pojo&#x2F;books)</h5><p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521221635793.png\" alt=\"image-20220521221635793\"></p>\n<h5 id=\"创建接口-x2F-dao-x2F-bookmapper\"><a href=\"#创建接口-x2F-dao-x2F-bookmapper\" class=\"headerlink\" title=\"创建接口(&#x2F;dao&#x2F;bookmapper)\"></a>创建接口(&#x2F;dao&#x2F;bookmapper)</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookMapper</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//添加一本书</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">addBook</span><span class=\"params\">(Books book)</span>;</span><br><span class=\"line\">    <span class=\"comment\">//删除一本书</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">deleteBookById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br><span class=\"line\">    <span class=\"comment\">//更新一本书</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">updateBook</span><span class=\"params\">(Books books)</span>;</span><br><span class=\"line\">    <span class=\"comment\">//查询一本书</span></span><br><span class=\"line\">    Books <span class=\"title function_\">queryBookById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br><span class=\"line\">    <span class=\"comment\">//查询全部的书</span></span><br><span class=\"line\">    List&lt;Books&gt; <span class=\"title function_\">queryAllBooks</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>bookmapper</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.manager.dao.BookMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"创建service层接口-x2F-service-x2F-BookService\"><a href=\"#创建service层接口-x2F-service-x2F-BookService\" class=\"headerlink\" title=\"创建service层接口(&#x2F;service&#x2F;BookService)\"></a>创建service层接口(&#x2F;service&#x2F;BookService)</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface BookService &#123;</span><br><span class=\"line\">    //增加一个Book</span><br><span class=\"line\">    int addBook(Books book);</span><br><span class=\"line\">    //根据id删除一个Book</span><br><span class=\"line\">    int deleteBookById(int id);</span><br><span class=\"line\">    //更新Book</span><br><span class=\"line\">    int updateBook(Books books);</span><br><span class=\"line\">    //根据id查询,返回一个Book</span><br><span class=\"line\">    Books queryBookById(int id);</span><br><span class=\"line\">    //查询全部Book,返回list集合</span><br><span class=\"line\">    List<span class=\"tag\">&lt;<span class=\"name\">Books</span>&gt;</span> queryAllBooks();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"并且创建实现类-service-x2F-BookServiceImpl\"><a href=\"#并且创建实现类-service-x2F-BookServiceImpl\" class=\"headerlink\" title=\"并且创建实现类(service&#x2F;BookServiceImpl)\"></a>并且创建实现类(service&#x2F;BookServiceImpl)</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//调用dao层的操作，设置一个set接口，方便Spring管理</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookMapper bookMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">addBook</span><span class=\"params\">(Books book)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.addBook(book);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">deleteBookById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.deleteBookById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">updateBook</span><span class=\"params\">(Books books)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.updateBook(books);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Books <span class=\"title function_\">queryBookById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.queryBookById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Books&gt; <span class=\"title function_\">queryAllBooks</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper.queryAllBooks();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> BookMapper <span class=\"title function_\">getBookMapper</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bookMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookMapper</span><span class=\"params\">(BookMapper bookMapper)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookMapper = bookMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>到此基本结构已经建立,开始配置框架!</p>\n<h3 id=\"配置框架\"><a href=\"#配置框架\" class=\"headerlink\" title=\"配置框架\"></a>配置框架</h3><p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220521222413471.png\" alt=\"image-20220521222413471\"></p>\n<ol>\n<li><p>applicationContext.xml(spring配置文件)</p>\n</li>\n<li><p>spring-dao.xml(spring整合dao层)</p>\n</li>\n<li><p>spring-service.xml(spring整合service层)</p>\n</li>\n<li><p>spring-mvc.xml(spring)</p>\n</li>\n<li><p>mybatis-config.xml(mybatis基本配置)</p>\n</li>\n<li><p>database.properties(数据源)</p>\n<p>applicationContext导入其他整合配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;spring-dao.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;spring-service.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;spring-mvc.xml&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>spring-dao中配置数据源</p>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置整合mybatis --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 1.关联数据库文件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;classpath:database.properties&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 配置连接池属性 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClass&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- c3p0连接池的私有属性 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;maxPoolSize&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;30&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;minPoolSize&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;10&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 关闭连接后不自动commit --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;autoCommitOnClose&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;false&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 获取连接超时时间 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;checkoutTimeout&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;10000&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 当获取连接失败重试次数 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;acquireRetryAttempts&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;2&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 3.配置SqlSessionFactory对象 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 配置MyBaties全局配置文件:mybatis-config.xml --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;configLocation&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 4.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 注入sqlSessionFactory --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sqlSessionFactoryBeanName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 给出需要扫描Dao接口包 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;basePackage&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.manager.dao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>spring-service</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 扫描service相关的bean --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">&quot;com.manager.service&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--BookServiceImpl注入到IOC容器中--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;BookServiceImpl&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.service.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookMapper&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookMapper&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置事务管理器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;transactionManager&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>spring-mvc</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:mvc</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   http://www.springframework.org/schema/mvc</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">   https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置SpringMVC --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 1.开启SpringMVC注解驱动 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mvc:annotation-driven</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 2.静态资源默认servlet配置--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 3.配置jsp 显示ViewResolver视图解析器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewClass&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.JstlView&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;suffix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 4.扫描web相关的bean --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">&quot;com.manager.controller&quot;</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>mybatis-config.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.manager.pojo&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;com/manager/dao/BookMapper.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>database,properties</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">jdbc.driver</span>=<span class=\"string\">com.mysql.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.password</span>=<span class=\"string\">123</span></span><br></pre></td></tr></table></figure>\n\n<p>web.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">version</span>=<span class=\"string\">&quot;4.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--DispatcherServlet--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--一定要注意:我们这里加载的是总的配置文件，之前被这里坑了！--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:applicationContext.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--encodingFilter--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">            org.springframework.web.filter.CharacterEncodingFilter</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>utf-8<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--Session过期时间--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">session-config</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">session-timeout</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">session-timeout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">session-config</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>restful只要url中的名字和函数形参名字一样就可以不写{name}</p>\n"},{"title":"myBatis","date":"2023-05-05T13:30:42.000Z","_content":"### MyBatis\n\n###### 创建maven项目导入jar包\n\n```xml\n      <dependency>\n          <groupId>mysql</groupId>\n          <artifactId>mysql-connector-java</artifactId>\n          <version>8.0.28</version>\n      </dependency>\n      <dependency>\n          <groupId>junit</groupId>\n          <artifactId>junit</artifactId>\n          <version>4.13.2</version>\n          <scope>test</scope>\n      </dependency>\n      <dependency>\n          <groupId>org.mybatis</groupId>\n          <artifactId>mybatis</artifactId>\n          <version>3.5.9</version>\n      </dependency>\n```\n\n#### 编写工具类MybatisUtils\n\n通过该类的静态方法得到sqlsession工厂,通过工厂生产session，我们对数据库的操作通过改session来实现\n\n```java\npublic class MyBatisUtils {\n   static SqlSessionFactory sqlSessionFactory;\n\n    static {\n        try {\n            String resource = \"mybatis-config.xml\";\n            InputStream inputStream = Resources.getResourceAsStream(resource);\n            sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    public static SqlSession getMybatisUtils() {\n        return getMybatisUtils(true);\n    }\n    public static SqlSession getMybatisUtils(boolean bool) {\n        return sqlSessionFactory.openSession(bool);\n    }\n}\n```\n\n\n\n###### 在idea中连接数据库\n\n###### 创建封装连接数据库的工具类\n\n```java\nString resource = \"mybatis-config.xml\";\n            InputStream inputStream = Resources.getResourceAsStream(resource);\n            sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n//通过sqlsessionfactory连接到数据库\n```\n\n\n\n###### 创建mybatis-config.xml的配置文件,在其中配置数据库的基本信息,以及实体类xml的映射\n\n```xml\n<configuration>\n    <environments default=\"development\">\n        <environment id=\"development\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n                <property name=\"url\" value=\"jdbc:mysql://localhost:3306/mybatis_study?useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8\"/>\n                <property name=\"username\" value=\"root\"/>\n                <property name=\"password\" value=\"123\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <mappers>\n        <mapper resource=\"com/manager/dao/userMapper.xml\"/>\n    </mappers>\n</configuration>\n```\n\n或者通过dp.properties来保存数据库的基本配置,不需要转义&字符\n\n``` properties\nusername=root\npassword=123\nurl=jdbc:mysql://localhost:3306/shop?useSSL=true&useUnicode=true&characterEncoding=UTF-8\ndriver=com.mysql.jdbc.Driver\n```\n\nmybatis-config.xml\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\n    <properties resource=\"dp.properties\"/>\n    <settings>\n        <!--        标准日志输出-->\n        <!--        <setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>-->\n        <!--        logj4-->\n        <setting name=\"logImpl\" value=\"LOG4J\"/>\n    </settings>\n\n\n    <!--    这个标签可以把实体类的名称作为类型别名  方便在映射中使用-->\n    <typeAliases>\n        <package name=\"com.manager.pojo\"/>\n    </typeAliases>\n\n    <!--环境标签-->\n    <environments default=\"development\">\n        <!--可以配置多个环境-->\n        <environment id=\"development\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${driver}\"/>\n                <property name=\"url\" value=\"${url}\"/>\n                <property name=\"username\" value=\"${username}\"/>\n                <property name=\"password\" value=\"${password}\"/>\n            </dataSource>\n        </environment>\n\n        <environment id=\"test\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${driver}\"/>\n                <property name=\"url\" value=\"${url}\"/>\n                <property name=\"username\" value=\"${username}\"/>\n                <property name=\"password\" value=\"${password}\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <!--    映射持久层接口-->\n    <mappers>\n        <!--        <mapper resource=\"com/manager/dao/userMapper.xml\"/>-->\n        <package name=\"com.manager.dao\"/>\n    </mappers>\n</configuration>\n```\n\n\n\n\n\n###### 创建实体类(pojo)\n\n\n\n###### 创建dao层\n\ndao层的作用为访问数据库，向数据库发送[sql语句](https://so.csdn.net/so/search?q=sql语句&spm=1001.2101.3001.7020)，完成数据的增删改查任务,为上面的实体类创建dao层接口,和映射xml文件\n\n```java\npublic interface userDao {\n    List<user> getUserList();\n}\n```\n\n创建该接口的xml的映射文件\n\n之后的数据库查询语句写xml映射文件,不需要再去实现接口类\n\n```xml\n<mapper namespace=\"com.manager.dao.userDao\">\n    <select id=\"getUserList\" resultType=\"com.manager.pojo.user\">\n            select * from mybatis_study.user;\n    </select>\n</mapper>\n```\n\n#### xml基本属性\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.manager.dao.userMapper\">\n</mapper>\n```\n\n\n\n\n\n##### 过滤资源\n\n用来反行xml等资源\n\n```xml\n<build>\n    <resources>\n        <resource>\n         <directory>src/main/resources</directory>\n            <includes>\n                <include>**/*.properties</include>\n                <include>**/*.xml</include>\n            </includes>\n            <filtering>true</filtering>\n        </resource>\n        <resource>\n            <directory>src/main/java</directory>\n            <includes>\n                <include>**/*.properties</include>\n                <include>**/*.xml</include>\n            </includes>\n            <filtering>true</filtering>\n        </resource>\n    </resources>\n</build>\n```\n\n\n\n##### 测试\n\n最后在测试类中执行sql语句\n\n```java\npublic class userDaoText {\n    @Test\n    public void test() {\n        SqlSession sqlSession = MyBatisUtils.getMybatisUtils();\n        userDao mapper = sqlSession.getMapper(userDao.class);\n        List<user> list = mapper.getUserList();\n        list.forEach(x-> System.out.println(x.toString()));\n        sqlSession.close();\n    }\n}\n```\n\n\n\n##### 关于dao接口的映射文件可以放在resource中的与接口同名的包中\n\n### 结果集映射\n\n> 对数据中的类型起别名来匹配实体类的属性\n\n```xml\n<select id=\"selectUsers\" resultType=\"User\">\n  select\n    user_id             as \"id\",\n    user_name           as \"userName\",\n    hashed_password     as \"hashedPassword\"\n  from some_table\n  where id = #{id}\n</select>\n```\n\n> 使用map映射实体类中的属性,对与名称一样的属性可以省略\n\n```xml\n<!--结果集映射-->\n<resultMap id=\"UserMap\" type=\"User\">\n    <!--column数据库中的字段，property实体类中的属性-->\n    <result column=\"id\" property=\"id\"></result>\n    <result column=\"name\" property=\"name\"></result>\n    <result column=\"pwd\" property=\"password\"></result>\n</resultMap>\n\n<select id=\"getUserList\" resultMap=\"UserMap\">\n    select * from USER\n</select>\n```\n\n```xml\n<select id=\"selectUsers\" resultMap=\"userResultMap\">\n  select user_id, user_name, hashed_password\n  from some_table\n  where id = #{id}\n</select>\n```\n\n> 复杂的映射\n\n```xml\n<!-- 非常复杂的结果映射 -->\n<resultMap id=\"detailedBlogResultMap\" type=\"Blog\">\n  <constructor>\n      <!--constructor用于创建实例时注入构造器-->\n    <idArg column=\"blog_id\" javaType=\"int\"/>\n  </constructor>\n    \n  <result property=\"title\" column=\"blog_title\"/>\n<!--    association – 一个复杂类型的关联；许多结果将包装成这种类型-->\n<!--这里将association中的属性创建author的实例-->\n    <--!id对一个实例中的属性进行标记,标记出作为 ID 的结果可以帮助提高整体性能 -->\n    <association property=\"author\" javaType=\"Author\">\n    <id property=\"id\" column=\"author_id\"/>\n    <result property=\"username\" column=\"author_username\"/>\n    <result property=\"password\" column=\"author_password\"/>\n    <result property=\"email\" column=\"author_email\"/>\n    <result property=\"bio\" column=\"author_bio\"/>\n    <result property=\"favouriteSection\" column=\"author_favourite_section\"/>\n  </association>\n    \n  <collection property=\"posts\" ofType=\"Post\">\n    <id property=\"id\" column=\"post_id\"/>\n    <result property=\"subject\" column=\"post_subject\"/>\n    <association property=\"author\" javaType=\"Author\"/>\n    <collection property=\"comments\" ofType=\"Comment\">\n      <id property=\"id\" column=\"comment_id\"/>\n    </collection>\n    <collection property=\"tags\" ofType=\"Tag\" >\n      <id property=\"id\" column=\"tag_id\"/>\n    </collection>\n    <discriminator javaType=\"int\" column=\"draft\">\n      <case value=\"1\" resultType=\"DraftPost\"/>\n    </discriminator>\n  </collection>\n</resultMap>\n```\n\n```html\n结果映射（resultMap）\nconstructor - 用于在实例化类时，注入结果到构造方法中\nidArg - ID 参数；标记出作为 ID 的结果可以帮助提高整体性能\narg - 将被注入到构造方法的一个普通结果\nid – 一个 ID 结果；标记出作为 ID 的结果可以帮助提高整体性能\nresult – 注入到字段或 JavaBean 属性的普通结果\nassociation – 一个复杂类型的关联；许多结果将包装成这种类型\n嵌套结果映射 – 关联可以是 resultMap 元素，或是对其它结果映射的引用\ncollection – 一个复杂类型的集合\n嵌套结果映射 – 集合可以是 resultMap 元素，或是对其它结果映射的引用\ndiscriminator – 使用结果值来决定使用哪个 resultMap\ncase – 基于某些值的结果映射\n嵌套结果映射 – case 也是一个结果映射，因此具有相同的结构和元素；或者引用其它的结果映射\n```\n\n#### log4j使用\n\n1.在要使用Log4j的类中，导入包 import org.apache.log4j.Logger;\n\n```xml\n     <!-- https://mvnrepository.com/artifact/log4j/log4j -->\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.17</version>\n        </dependency>\n```\n\n\n\n2.日志对象，参数为当前类的class对象\n\n```java\nLogger logger = Logger.getLogger(UserDaoTest.class);\n```\n\n3.日志级别\n\n```java\nlogger.info(\"info: 测试log4j\");\nlogger.debug(\"debug: 测试log4j\");\nlogger.error(\"error:测试log4j\");\n```\n\nlog4j需要配置才可以使用\n\nlog4j.properties的配置\n\n```properties\n#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码\nlog4j.rootLogger=DEBUG,console,file\n\n#控制台输出的相关设置\nlog4j.appender.console = org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target = System.out\nlog4j.appender.console.Threshold=DEBUG\nlog4j.appender.console.layout = org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=[%c]-%m%n\n\n#文件输出的相关设置\nlog4j.appender.file = org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=./log/kuang.log\nlog4j.appender.file.MaxFileSize=10mb\nlog4j.appender.file.Threshold=DEBUG\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=[%p][%d{yy-MM-dd}][%c]%m%n\n\n#日志输出级别\nlog4j.logger.org.mybatis=DEBUG\nlog4j.logger.java.sql=DEBUG\nlog4j.logger.java.sql.Statement=DEBUG\nlog4j.logger.java.sql.ResultSet=DEBUG\nlog4j.logger.java.sql.PreparedStatement=DEBUG\n```\n\n","source":"_posts/学习笔记/ssm框架/myBatis.md","raw":"---\ntitle: myBatis\ndate: 2023-05-05 21:30:42\ntags:  \n---\n### MyBatis\n\n###### 创建maven项目导入jar包\n\n```xml\n      <dependency>\n          <groupId>mysql</groupId>\n          <artifactId>mysql-connector-java</artifactId>\n          <version>8.0.28</version>\n      </dependency>\n      <dependency>\n          <groupId>junit</groupId>\n          <artifactId>junit</artifactId>\n          <version>4.13.2</version>\n          <scope>test</scope>\n      </dependency>\n      <dependency>\n          <groupId>org.mybatis</groupId>\n          <artifactId>mybatis</artifactId>\n          <version>3.5.9</version>\n      </dependency>\n```\n\n#### 编写工具类MybatisUtils\n\n通过该类的静态方法得到sqlsession工厂,通过工厂生产session，我们对数据库的操作通过改session来实现\n\n```java\npublic class MyBatisUtils {\n   static SqlSessionFactory sqlSessionFactory;\n\n    static {\n        try {\n            String resource = \"mybatis-config.xml\";\n            InputStream inputStream = Resources.getResourceAsStream(resource);\n            sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    public static SqlSession getMybatisUtils() {\n        return getMybatisUtils(true);\n    }\n    public static SqlSession getMybatisUtils(boolean bool) {\n        return sqlSessionFactory.openSession(bool);\n    }\n}\n```\n\n\n\n###### 在idea中连接数据库\n\n###### 创建封装连接数据库的工具类\n\n```java\nString resource = \"mybatis-config.xml\";\n            InputStream inputStream = Resources.getResourceAsStream(resource);\n            sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n//通过sqlsessionfactory连接到数据库\n```\n\n\n\n###### 创建mybatis-config.xml的配置文件,在其中配置数据库的基本信息,以及实体类xml的映射\n\n```xml\n<configuration>\n    <environments default=\"development\">\n        <environment id=\"development\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/>\n                <property name=\"url\" value=\"jdbc:mysql://localhost:3306/mybatis_study?useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8\"/>\n                <property name=\"username\" value=\"root\"/>\n                <property name=\"password\" value=\"123\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <mappers>\n        <mapper resource=\"com/manager/dao/userMapper.xml\"/>\n    </mappers>\n</configuration>\n```\n\n或者通过dp.properties来保存数据库的基本配置,不需要转义&字符\n\n``` properties\nusername=root\npassword=123\nurl=jdbc:mysql://localhost:3306/shop?useSSL=true&useUnicode=true&characterEncoding=UTF-8\ndriver=com.mysql.jdbc.Driver\n```\n\nmybatis-config.xml\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\n    <properties resource=\"dp.properties\"/>\n    <settings>\n        <!--        标准日志输出-->\n        <!--        <setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>-->\n        <!--        logj4-->\n        <setting name=\"logImpl\" value=\"LOG4J\"/>\n    </settings>\n\n\n    <!--    这个标签可以把实体类的名称作为类型别名  方便在映射中使用-->\n    <typeAliases>\n        <package name=\"com.manager.pojo\"/>\n    </typeAliases>\n\n    <!--环境标签-->\n    <environments default=\"development\">\n        <!--可以配置多个环境-->\n        <environment id=\"development\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${driver}\"/>\n                <property name=\"url\" value=\"${url}\"/>\n                <property name=\"username\" value=\"${username}\"/>\n                <property name=\"password\" value=\"${password}\"/>\n            </dataSource>\n        </environment>\n\n        <environment id=\"test\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${driver}\"/>\n                <property name=\"url\" value=\"${url}\"/>\n                <property name=\"username\" value=\"${username}\"/>\n                <property name=\"password\" value=\"${password}\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <!--    映射持久层接口-->\n    <mappers>\n        <!--        <mapper resource=\"com/manager/dao/userMapper.xml\"/>-->\n        <package name=\"com.manager.dao\"/>\n    </mappers>\n</configuration>\n```\n\n\n\n\n\n###### 创建实体类(pojo)\n\n\n\n###### 创建dao层\n\ndao层的作用为访问数据库，向数据库发送[sql语句](https://so.csdn.net/so/search?q=sql语句&spm=1001.2101.3001.7020)，完成数据的增删改查任务,为上面的实体类创建dao层接口,和映射xml文件\n\n```java\npublic interface userDao {\n    List<user> getUserList();\n}\n```\n\n创建该接口的xml的映射文件\n\n之后的数据库查询语句写xml映射文件,不需要再去实现接口类\n\n```xml\n<mapper namespace=\"com.manager.dao.userDao\">\n    <select id=\"getUserList\" resultType=\"com.manager.pojo.user\">\n            select * from mybatis_study.user;\n    </select>\n</mapper>\n```\n\n#### xml基本属性\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.manager.dao.userMapper\">\n</mapper>\n```\n\n\n\n\n\n##### 过滤资源\n\n用来反行xml等资源\n\n```xml\n<build>\n    <resources>\n        <resource>\n         <directory>src/main/resources</directory>\n            <includes>\n                <include>**/*.properties</include>\n                <include>**/*.xml</include>\n            </includes>\n            <filtering>true</filtering>\n        </resource>\n        <resource>\n            <directory>src/main/java</directory>\n            <includes>\n                <include>**/*.properties</include>\n                <include>**/*.xml</include>\n            </includes>\n            <filtering>true</filtering>\n        </resource>\n    </resources>\n</build>\n```\n\n\n\n##### 测试\n\n最后在测试类中执行sql语句\n\n```java\npublic class userDaoText {\n    @Test\n    public void test() {\n        SqlSession sqlSession = MyBatisUtils.getMybatisUtils();\n        userDao mapper = sqlSession.getMapper(userDao.class);\n        List<user> list = mapper.getUserList();\n        list.forEach(x-> System.out.println(x.toString()));\n        sqlSession.close();\n    }\n}\n```\n\n\n\n##### 关于dao接口的映射文件可以放在resource中的与接口同名的包中\n\n### 结果集映射\n\n> 对数据中的类型起别名来匹配实体类的属性\n\n```xml\n<select id=\"selectUsers\" resultType=\"User\">\n  select\n    user_id             as \"id\",\n    user_name           as \"userName\",\n    hashed_password     as \"hashedPassword\"\n  from some_table\n  where id = #{id}\n</select>\n```\n\n> 使用map映射实体类中的属性,对与名称一样的属性可以省略\n\n```xml\n<!--结果集映射-->\n<resultMap id=\"UserMap\" type=\"User\">\n    <!--column数据库中的字段，property实体类中的属性-->\n    <result column=\"id\" property=\"id\"></result>\n    <result column=\"name\" property=\"name\"></result>\n    <result column=\"pwd\" property=\"password\"></result>\n</resultMap>\n\n<select id=\"getUserList\" resultMap=\"UserMap\">\n    select * from USER\n</select>\n```\n\n```xml\n<select id=\"selectUsers\" resultMap=\"userResultMap\">\n  select user_id, user_name, hashed_password\n  from some_table\n  where id = #{id}\n</select>\n```\n\n> 复杂的映射\n\n```xml\n<!-- 非常复杂的结果映射 -->\n<resultMap id=\"detailedBlogResultMap\" type=\"Blog\">\n  <constructor>\n      <!--constructor用于创建实例时注入构造器-->\n    <idArg column=\"blog_id\" javaType=\"int\"/>\n  </constructor>\n    \n  <result property=\"title\" column=\"blog_title\"/>\n<!--    association – 一个复杂类型的关联；许多结果将包装成这种类型-->\n<!--这里将association中的属性创建author的实例-->\n    <--!id对一个实例中的属性进行标记,标记出作为 ID 的结果可以帮助提高整体性能 -->\n    <association property=\"author\" javaType=\"Author\">\n    <id property=\"id\" column=\"author_id\"/>\n    <result property=\"username\" column=\"author_username\"/>\n    <result property=\"password\" column=\"author_password\"/>\n    <result property=\"email\" column=\"author_email\"/>\n    <result property=\"bio\" column=\"author_bio\"/>\n    <result property=\"favouriteSection\" column=\"author_favourite_section\"/>\n  </association>\n    \n  <collection property=\"posts\" ofType=\"Post\">\n    <id property=\"id\" column=\"post_id\"/>\n    <result property=\"subject\" column=\"post_subject\"/>\n    <association property=\"author\" javaType=\"Author\"/>\n    <collection property=\"comments\" ofType=\"Comment\">\n      <id property=\"id\" column=\"comment_id\"/>\n    </collection>\n    <collection property=\"tags\" ofType=\"Tag\" >\n      <id property=\"id\" column=\"tag_id\"/>\n    </collection>\n    <discriminator javaType=\"int\" column=\"draft\">\n      <case value=\"1\" resultType=\"DraftPost\"/>\n    </discriminator>\n  </collection>\n</resultMap>\n```\n\n```html\n结果映射（resultMap）\nconstructor - 用于在实例化类时，注入结果到构造方法中\nidArg - ID 参数；标记出作为 ID 的结果可以帮助提高整体性能\narg - 将被注入到构造方法的一个普通结果\nid – 一个 ID 结果；标记出作为 ID 的结果可以帮助提高整体性能\nresult – 注入到字段或 JavaBean 属性的普通结果\nassociation – 一个复杂类型的关联；许多结果将包装成这种类型\n嵌套结果映射 – 关联可以是 resultMap 元素，或是对其它结果映射的引用\ncollection – 一个复杂类型的集合\n嵌套结果映射 – 集合可以是 resultMap 元素，或是对其它结果映射的引用\ndiscriminator – 使用结果值来决定使用哪个 resultMap\ncase – 基于某些值的结果映射\n嵌套结果映射 – case 也是一个结果映射，因此具有相同的结构和元素；或者引用其它的结果映射\n```\n\n#### log4j使用\n\n1.在要使用Log4j的类中，导入包 import org.apache.log4j.Logger;\n\n```xml\n     <!-- https://mvnrepository.com/artifact/log4j/log4j -->\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.17</version>\n        </dependency>\n```\n\n\n\n2.日志对象，参数为当前类的class对象\n\n```java\nLogger logger = Logger.getLogger(UserDaoTest.class);\n```\n\n3.日志级别\n\n```java\nlogger.info(\"info: 测试log4j\");\nlogger.debug(\"debug: 测试log4j\");\nlogger.error(\"error:测试log4j\");\n```\n\nlog4j需要配置才可以使用\n\nlog4j.properties的配置\n\n```properties\n#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码\nlog4j.rootLogger=DEBUG,console,file\n\n#控制台输出的相关设置\nlog4j.appender.console = org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target = System.out\nlog4j.appender.console.Threshold=DEBUG\nlog4j.appender.console.layout = org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=[%c]-%m%n\n\n#文件输出的相关设置\nlog4j.appender.file = org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=./log/kuang.log\nlog4j.appender.file.MaxFileSize=10mb\nlog4j.appender.file.Threshold=DEBUG\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=[%p][%d{yy-MM-dd}][%c]%m%n\n\n#日志输出级别\nlog4j.logger.org.mybatis=DEBUG\nlog4j.logger.java.sql=DEBUG\nlog4j.logger.java.sql.Statement=DEBUG\nlog4j.logger.java.sql.ResultSet=DEBUG\nlog4j.logger.java.sql.PreparedStatement=DEBUG\n```\n\n","slug":"学习笔记/ssm框架/myBatis","published":1,"updated":"2023-05-19T14:07:31.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oal000lwwvn48t65r27","content":"<h3 id=\"MyBatis\"><a href=\"#MyBatis\" class=\"headerlink\" title=\"MyBatis\"></a>MyBatis</h3><h6 id=\"创建maven项目导入jar包\"><a href=\"#创建maven项目导入jar包\" class=\"headerlink\" title=\"创建maven项目导入jar包\"></a>创建maven项目导入jar包</h6><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.28<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.13.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"编写工具类MybatisUtils\"><a href=\"#编写工具类MybatisUtils\" class=\"headerlink\" title=\"编写工具类MybatisUtils\"></a>编写工具类MybatisUtils</h4><p>通过该类的静态方法得到sqlsession工厂,通过工厂生产session，我们对数据库的操作通过改session来实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyBatisUtils</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">            sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlSession <span class=\"title function_\">getMybatisUtils</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getMybatisUtils(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlSession <span class=\"title function_\">getMybatisUtils</span><span class=\"params\">(<span class=\"type\">boolean</span> bool)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sqlSessionFactory.openSession(bool);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"在idea中连接数据库\"><a href=\"#在idea中连接数据库\" class=\"headerlink\" title=\"在idea中连接数据库\"></a>在idea中连接数据库</h6><h6 id=\"创建封装连接数据库的工具类\"><a href=\"#创建封装连接数据库的工具类\" class=\"headerlink\" title=\"创建封装连接数据库的工具类\"></a>创建封装连接数据库的工具类</h6><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">            sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\"><span class=\"comment\">//通过sqlsessionfactory连接到数据库</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"创建mybatis-config-xml的配置文件-在其中配置数据库的基本信息-以及实体类xml的映射\"><a href=\"#创建mybatis-config-xml的配置文件-在其中配置数据库的基本信息-以及实体类xml的映射\" class=\"headerlink\" title=\"创建mybatis-config.xml的配置文件,在其中配置数据库的基本信息,以及实体类xml的映射\"></a>创建mybatis-config.xml的配置文件,在其中配置数据库的基本信息,以及实体类xml的映射</h6><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis_study?useSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;com/manager/dao/userMapper.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>或者通过dp.properties来保存数据库的基本配置,不需要转义&amp;字符</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">123</span></span><br><span class=\"line\"><span class=\"attr\">url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/shop?useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class=\"line\"><span class=\"attr\">driver</span>=<span class=\"string\">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure>\n\n<p>mybatis-config.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;dp.properties&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        标准日志输出--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        &lt;setting name=&quot;logImpl&quot; value=&quot;STDOUT_LOGGING&quot;/&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        logj4--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;logImpl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    这个标签可以把实体类的名称作为类型别名  方便在映射中使用--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.manager.pojo&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--环境标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--可以配置多个环境--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    映射持久层接口--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        &lt;mapper resource=&quot;com/manager/dao/userMapper.xml&quot;/&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.manager.dao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h6 id=\"创建实体类-pojo\"><a href=\"#创建实体类-pojo\" class=\"headerlink\" title=\"创建实体类(pojo)\"></a>创建实体类(pojo)</h6><h6 id=\"创建dao层\"><a href=\"#创建dao层\" class=\"headerlink\" title=\"创建dao层\"></a>创建dao层</h6><p>dao层的作用为访问数据库，向数据库发送<a href=\"https://so.csdn.net/so/search?q=sql%E8%AF%AD%E5%8F%A5&spm=1001.2101.3001.7020\">sql语句</a>，完成数据的增删改查任务,为上面的实体类创建dao层接口,和映射xml文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">userDao</span> &#123;</span><br><span class=\"line\">    List&lt;user&gt; <span class=\"title function_\">getUserList</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>创建该接口的xml的映射文件</p>\n<p>之后的数据库查询语句写xml映射文件,不需要再去实现接口类</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.manager.dao.userDao&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;com.manager.pojo.user&quot;</span>&gt;</span></span><br><span class=\"line\">            select * from mybatis_study.user;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"xml基本属性\"><a href=\"#xml基本属性\" class=\"headerlink\" title=\"xml基本属性\"></a>xml基本属性</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.manager.dao.userMapper&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"过滤资源\"><a href=\"#过滤资源\" class=\"headerlink\" title=\"过滤资源\"></a>过滤资源</h5><p>用来反行xml等资源</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h5><p>最后在测试类中执行sql语句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">userDaoText</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getMybatisUtils();</span><br><span class=\"line\">        <span class=\"type\">userDao</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(userDao.class);</span><br><span class=\"line\">        List&lt;user&gt; list = mapper.getUserList();</span><br><span class=\"line\">        list.forEach(x-&gt; System.out.println(x.toString()));</span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"关于dao接口的映射文件可以放在resource中的与接口同名的包中\"><a href=\"#关于dao接口的映射文件可以放在resource中的与接口同名的包中\" class=\"headerlink\" title=\"关于dao接口的映射文件可以放在resource中的与接口同名的包中\"></a>关于dao接口的映射文件可以放在resource中的与接口同名的包中</h5><h3 id=\"结果集映射\"><a href=\"#结果集映射\" class=\"headerlink\" title=\"结果集映射\"></a>结果集映射</h3><blockquote>\n<p>对数据中的类型起别名来匹配实体类的属性</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectUsers&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">  select</span><br><span class=\"line\">    user_id             as &quot;id&quot;,</span><br><span class=\"line\">    user_name           as &quot;userName&quot;,</span><br><span class=\"line\">    hashed_password     as &quot;hashedPassword&quot;</span><br><span class=\"line\">  from some_table</span><br><span class=\"line\">  where id = #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>使用map映射实体类中的属性,对与名称一样的属性可以省略</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--结果集映射--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;UserMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--column数据库中的字段，property实体类中的属性--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;pwd&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;UserMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select * from USER</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectUsers&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;userResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">  select user_id, user_name, hashed_password</span><br><span class=\"line\">  from some_table</span><br><span class=\"line\">  where id = #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>复杂的映射</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 非常复杂的结果映射 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;detailedBlogResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Blog&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">constructor</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--constructor用于创建实例时注入构造器--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">idArg</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;blog_id&quot;</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;int&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">constructor</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;blog_title&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    association – 一个复杂类型的关联；许多结果将包装成这种类型--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--这里将association中的属性创建author的实例--&gt;</span></span><br><span class=\"line\">    &lt;--!id对一个实例中的属性进行标记,标记出作为 ID 的结果可以帮助提高整体性能 --&gt;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">association</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;author&quot;</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;Author&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_id&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_username&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_password&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_email&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;bio&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_bio&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;favouriteSection&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_favourite_section&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">association</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">collection</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;posts&quot;</span> <span class=\"attr\">ofType</span>=<span class=\"string\">&quot;Post&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;post_id&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;subject&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;post_subject&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">association</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;author&quot;</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;Author&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">collection</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;comments&quot;</span> <span class=\"attr\">ofType</span>=<span class=\"string\">&quot;Comment&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;comment_id&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">collection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">collection</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;tags&quot;</span> <span class=\"attr\">ofType</span>=<span class=\"string\">&quot;Tag&quot;</span> &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;tag_id&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">collection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">discriminator</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;int&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;draft&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">case</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;DraftPost&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">discriminator</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">collection</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">结果映射（resultMap）</span><br><span class=\"line\">constructor - 用于在实例化类时，注入结果到构造方法中</span><br><span class=\"line\">idArg - ID 参数；标记出作为 ID 的结果可以帮助提高整体性能</span><br><span class=\"line\">arg - 将被注入到构造方法的一个普通结果</span><br><span class=\"line\">id – 一个 ID 结果；标记出作为 ID 的结果可以帮助提高整体性能</span><br><span class=\"line\">result – 注入到字段或 JavaBean 属性的普通结果</span><br><span class=\"line\">association – 一个复杂类型的关联；许多结果将包装成这种类型</span><br><span class=\"line\">嵌套结果映射 – 关联可以是 resultMap 元素，或是对其它结果映射的引用</span><br><span class=\"line\">collection – 一个复杂类型的集合</span><br><span class=\"line\">嵌套结果映射 – 集合可以是 resultMap 元素，或是对其它结果映射的引用</span><br><span class=\"line\">discriminator – 使用结果值来决定使用哪个 resultMap</span><br><span class=\"line\">case – 基于某些值的结果映射</span><br><span class=\"line\">嵌套结果映射 – case 也是一个结果映射，因此具有相同的结构和元素；或者引用其它的结果映射</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"log4j使用\"><a href=\"#log4j使用\" class=\"headerlink\" title=\"log4j使用\"></a>log4j使用</h4><p>1.在要使用Log4j的类中，导入包 import org.apache.log4j.Logger;</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.17<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>2.日志对象，参数为当前类的class对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Logger</span> <span class=\"variable\">logger</span> <span class=\"operator\">=</span> Logger.getLogger(UserDaoTest.class);</span><br></pre></td></tr></table></figure>\n\n<p>3.日志级别</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logger.info(<span class=\"string\">&quot;info: 测试log4j&quot;</span>);</span><br><span class=\"line\">logger.debug(<span class=\"string\">&quot;debug: 测试log4j&quot;</span>);</span><br><span class=\"line\">logger.error(<span class=\"string\">&quot;error:测试log4j&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>log4j需要配置才可以使用</p>\n<p>log4j.properties的配置</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class=\"line\"><span class=\"attr\">log4j.rootLogger</span>=<span class=\"string\">DEBUG,console,file</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#控制台输出的相关设置</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console</span> = <span class=\"string\">org.apache.log4j.ConsoleAppender</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.Target</span> = <span class=\"string\">System.out</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.Threshold</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.layout</span> = <span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.layout.ConversionPattern</span>=<span class=\"string\">[%c]-%m%n</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#文件输出的相关设置</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file</span> = <span class=\"string\">org.apache.log4j.RollingFileAppender</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.File</span>=<span class=\"string\">./log/kuang.log</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.MaxFileSize</span>=<span class=\"string\">10mb</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.Threshold</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.layout</span>=<span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.layout.ConversionPattern</span>=<span class=\"string\">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#日志输出级别</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.org.mybatis</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql.Statement</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql.ResultSet</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql.PreparedStatement</span>=<span class=\"string\">DEBUG</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h3 id=\"MyBatis\"><a href=\"#MyBatis\" class=\"headerlink\" title=\"MyBatis\"></a>MyBatis</h3><h6 id=\"创建maven项目导入jar包\"><a href=\"#创建maven项目导入jar包\" class=\"headerlink\" title=\"创建maven项目导入jar包\"></a>创建maven项目导入jar包</h6><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.28<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.13.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"编写工具类MybatisUtils\"><a href=\"#编写工具类MybatisUtils\" class=\"headerlink\" title=\"编写工具类MybatisUtils\"></a>编写工具类MybatisUtils</h4><p>通过该类的静态方法得到sqlsession工厂,通过工厂生产session，我们对数据库的操作通过改session来实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyBatisUtils</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">            sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlSession <span class=\"title function_\">getMybatisUtils</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getMybatisUtils(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlSession <span class=\"title function_\">getMybatisUtils</span><span class=\"params\">(<span class=\"type\">boolean</span> bool)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sqlSessionFactory.openSession(bool);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"在idea中连接数据库\"><a href=\"#在idea中连接数据库\" class=\"headerlink\" title=\"在idea中连接数据库\"></a>在idea中连接数据库</h6><h6 id=\"创建封装连接数据库的工具类\"><a href=\"#创建封装连接数据库的工具类\" class=\"headerlink\" title=\"创建封装连接数据库的工具类\"></a>创建封装连接数据库的工具类</h6><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">            sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\"><span class=\"comment\">//通过sqlsessionfactory连接到数据库</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h6 id=\"创建mybatis-config-xml的配置文件-在其中配置数据库的基本信息-以及实体类xml的映射\"><a href=\"#创建mybatis-config-xml的配置文件-在其中配置数据库的基本信息-以及实体类xml的映射\" class=\"headerlink\" title=\"创建mybatis-config.xml的配置文件,在其中配置数据库的基本信息,以及实体类xml的映射\"></a>创建mybatis-config.xml的配置文件,在其中配置数据库的基本信息,以及实体类xml的映射</h6><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis_study?useSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;com/manager/dao/userMapper.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>或者通过dp.properties来保存数据库的基本配置,不需要转义&amp;字符</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">123</span></span><br><span class=\"line\"><span class=\"attr\">url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/shop?useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class=\"line\"><span class=\"attr\">driver</span>=<span class=\"string\">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure>\n\n<p>mybatis-config.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;dp.properties&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        标准日志输出--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        &lt;setting name=&quot;logImpl&quot; value=&quot;STDOUT_LOGGING&quot;/&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        logj4--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;logImpl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    这个标签可以把实体类的名称作为类型别名  方便在映射中使用--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.manager.pojo&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--环境标签--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--可以配置多个环境--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    映射持久层接口--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        &lt;mapper resource=&quot;com/manager/dao/userMapper.xml&quot;/&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.manager.dao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h6 id=\"创建实体类-pojo\"><a href=\"#创建实体类-pojo\" class=\"headerlink\" title=\"创建实体类(pojo)\"></a>创建实体类(pojo)</h6><h6 id=\"创建dao层\"><a href=\"#创建dao层\" class=\"headerlink\" title=\"创建dao层\"></a>创建dao层</h6><p>dao层的作用为访问数据库，向数据库发送<a href=\"https://so.csdn.net/so/search?q=sql%E8%AF%AD%E5%8F%A5&spm=1001.2101.3001.7020\">sql语句</a>，完成数据的增删改查任务,为上面的实体类创建dao层接口,和映射xml文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">userDao</span> &#123;</span><br><span class=\"line\">    List&lt;user&gt; <span class=\"title function_\">getUserList</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>创建该接口的xml的映射文件</p>\n<p>之后的数据库查询语句写xml映射文件,不需要再去实现接口类</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.manager.dao.userDao&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;com.manager.pojo.user&quot;</span>&gt;</span></span><br><span class=\"line\">            select * from mybatis_study.user;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"xml基本属性\"><a href=\"#xml基本属性\" class=\"headerlink\" title=\"xml基本属性\"></a>xml基本属性</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.manager.dao.userMapper&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h5 id=\"过滤资源\"><a href=\"#过滤资源\" class=\"headerlink\" title=\"过滤资源\"></a>过滤资源</h5><p>用来反行xml等资源</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h5><p>最后在测试类中执行sql语句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">userDaoText</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getMybatisUtils();</span><br><span class=\"line\">        <span class=\"type\">userDao</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(userDao.class);</span><br><span class=\"line\">        List&lt;user&gt; list = mapper.getUserList();</span><br><span class=\"line\">        list.forEach(x-&gt; System.out.println(x.toString()));</span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"关于dao接口的映射文件可以放在resource中的与接口同名的包中\"><a href=\"#关于dao接口的映射文件可以放在resource中的与接口同名的包中\" class=\"headerlink\" title=\"关于dao接口的映射文件可以放在resource中的与接口同名的包中\"></a>关于dao接口的映射文件可以放在resource中的与接口同名的包中</h5><h3 id=\"结果集映射\"><a href=\"#结果集映射\" class=\"headerlink\" title=\"结果集映射\"></a>结果集映射</h3><blockquote>\n<p>对数据中的类型起别名来匹配实体类的属性</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectUsers&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">  select</span><br><span class=\"line\">    user_id             as &quot;id&quot;,</span><br><span class=\"line\">    user_name           as &quot;userName&quot;,</span><br><span class=\"line\">    hashed_password     as &quot;hashedPassword&quot;</span><br><span class=\"line\">  from some_table</span><br><span class=\"line\">  where id = #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>使用map映射实体类中的属性,对与名称一样的属性可以省略</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--结果集映射--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;UserMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;User&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--column数据库中的字段，property实体类中的属性--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;pwd&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;UserMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select * from USER</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectUsers&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;userResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">  select user_id, user_name, hashed_password</span><br><span class=\"line\">  from some_table</span><br><span class=\"line\">  where id = #&#123;id&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>复杂的映射</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 非常复杂的结果映射 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;detailedBlogResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;Blog&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">constructor</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--constructor用于创建实例时注入构造器--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">idArg</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;blog_id&quot;</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;int&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">constructor</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;blog_title&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    association – 一个复杂类型的关联；许多结果将包装成这种类型--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--这里将association中的属性创建author的实例--&gt;</span></span><br><span class=\"line\">    &lt;--!id对一个实例中的属性进行标记,标记出作为 ID 的结果可以帮助提高整体性能 --&gt;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">association</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;author&quot;</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;Author&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_id&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_username&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_password&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_email&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;bio&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_bio&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;favouriteSection&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;author_favourite_section&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">association</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">collection</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;posts&quot;</span> <span class=\"attr\">ofType</span>=<span class=\"string\">&quot;Post&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;post_id&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;subject&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;post_subject&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">association</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;author&quot;</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;Author&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">collection</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;comments&quot;</span> <span class=\"attr\">ofType</span>=<span class=\"string\">&quot;Comment&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;comment_id&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">collection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">collection</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;tags&quot;</span> <span class=\"attr\">ofType</span>=<span class=\"string\">&quot;Tag&quot;</span> &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;tag_id&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">collection</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">discriminator</span> <span class=\"attr\">javaType</span>=<span class=\"string\">&quot;int&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;draft&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">case</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;DraftPost&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">discriminator</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">collection</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">结果映射（resultMap）</span><br><span class=\"line\">constructor - 用于在实例化类时，注入结果到构造方法中</span><br><span class=\"line\">idArg - ID 参数；标记出作为 ID 的结果可以帮助提高整体性能</span><br><span class=\"line\">arg - 将被注入到构造方法的一个普通结果</span><br><span class=\"line\">id – 一个 ID 结果；标记出作为 ID 的结果可以帮助提高整体性能</span><br><span class=\"line\">result – 注入到字段或 JavaBean 属性的普通结果</span><br><span class=\"line\">association – 一个复杂类型的关联；许多结果将包装成这种类型</span><br><span class=\"line\">嵌套结果映射 – 关联可以是 resultMap 元素，或是对其它结果映射的引用</span><br><span class=\"line\">collection – 一个复杂类型的集合</span><br><span class=\"line\">嵌套结果映射 – 集合可以是 resultMap 元素，或是对其它结果映射的引用</span><br><span class=\"line\">discriminator – 使用结果值来决定使用哪个 resultMap</span><br><span class=\"line\">case – 基于某些值的结果映射</span><br><span class=\"line\">嵌套结果映射 – case 也是一个结果映射，因此具有相同的结构和元素；或者引用其它的结果映射</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"log4j使用\"><a href=\"#log4j使用\" class=\"headerlink\" title=\"log4j使用\"></a>log4j使用</h4><p>1.在要使用Log4j的类中，导入包 import org.apache.log4j.Logger;</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.17<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>2.日志对象，参数为当前类的class对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Logger</span> <span class=\"variable\">logger</span> <span class=\"operator\">=</span> Logger.getLogger(UserDaoTest.class);</span><br></pre></td></tr></table></figure>\n\n<p>3.日志级别</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logger.info(<span class=\"string\">&quot;info: 测试log4j&quot;</span>);</span><br><span class=\"line\">logger.debug(<span class=\"string\">&quot;debug: 测试log4j&quot;</span>);</span><br><span class=\"line\">logger.error(<span class=\"string\">&quot;error:测试log4j&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>log4j需要配置才可以使用</p>\n<p>log4j.properties的配置</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class=\"line\"><span class=\"attr\">log4j.rootLogger</span>=<span class=\"string\">DEBUG,console,file</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#控制台输出的相关设置</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console</span> = <span class=\"string\">org.apache.log4j.ConsoleAppender</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.Target</span> = <span class=\"string\">System.out</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.Threshold</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.layout</span> = <span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.layout.ConversionPattern</span>=<span class=\"string\">[%c]-%m%n</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#文件输出的相关设置</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file</span> = <span class=\"string\">org.apache.log4j.RollingFileAppender</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.File</span>=<span class=\"string\">./log/kuang.log</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.MaxFileSize</span>=<span class=\"string\">10mb</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.Threshold</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.layout</span>=<span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.layout.ConversionPattern</span>=<span class=\"string\">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#日志输出级别</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.org.mybatis</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql.Statement</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql.ResultSet</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql.PreparedStatement</span>=<span class=\"string\">DEBUG</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"语法学习","date":"2023-05-05T13:30:42.000Z","_content":"engligh\n不及物动词需要加介词\n句子没有主语时候\n1. there be 句型在句子中有\"有\"and 没有主语的时候\n2. 没有主语可以考虑用 it\n3. 变主动为被动(虽然人称代词可以做主语, 但要注意的是加了之后句子变的具有主观性)\n{\n\t被动时态\n\t一般现在时 am/is/are + 动词的过去分词(done)\n\t一般过去时 was/were + 动词的过去分词\n\t一般将来时 will + be + done \n\t现在进行时 am/is/are +being + done\n\t过去进行时 was/were + being + done\n\t现在完成时 have/has + been + done \n\t过去完成时 had + been + done \n\t情态动词    情态动词+be + done\n\tby 被谁\n\tfor给谁, 为了谁\n}\n单词短语\n孝敬父母  \trespect parents\n执行  carried out\n弱势群体 vulnerable groups\n\n定语\n在句子中的位置,一个定语在前面,多个在后面\n定语为过去式在后面\n\n","source":"_posts/学习笔记/语法学习.md","raw":"---\ntitle: 语法学习\ndate: 2023-05-05 21:30:42\ntags:  \n---\nengligh\n不及物动词需要加介词\n句子没有主语时候\n1. there be 句型在句子中有\"有\"and 没有主语的时候\n2. 没有主语可以考虑用 it\n3. 变主动为被动(虽然人称代词可以做主语, 但要注意的是加了之后句子变的具有主观性)\n{\n\t被动时态\n\t一般现在时 am/is/are + 动词的过去分词(done)\n\t一般过去时 was/were + 动词的过去分词\n\t一般将来时 will + be + done \n\t现在进行时 am/is/are +being + done\n\t过去进行时 was/were + being + done\n\t现在完成时 have/has + been + done \n\t过去完成时 had + been + done \n\t情态动词    情态动词+be + done\n\tby 被谁\n\tfor给谁, 为了谁\n}\n单词短语\n孝敬父母  \trespect parents\n执行  carried out\n弱势群体 vulnerable groups\n\n定语\n在句子中的位置,一个定语在前面,多个在后面\n定语为过去式在后面\n\n","slug":"学习笔记/语法学习","published":1,"updated":"2023-05-19T14:07:31.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oal000mwwvnhqho91zj","content":"<p>engligh<br>不及物动词需要加介词<br>句子没有主语时候</p>\n<ol>\n<li>there be 句型在句子中有”有”and 没有主语的时候</li>\n<li>没有主语可以考虑用 it</li>\n<li>变主动为被动(虽然人称代词可以做主语, 但要注意的是加了之后句子变的具有主观性)<br>{<br> 被动时态<br> 一般现在时 am&#x2F;is&#x2F;are + 动词的过去分词(done)<br> 一般过去时 was&#x2F;were + 动词的过去分词<br> 一般将来时 will + be + done<br> 现在进行时 am&#x2F;is&#x2F;are +being + done<br> 过去进行时 was&#x2F;were + being + done<br> 现在完成时 have&#x2F;has + been + done<br> 过去完成时 had + been + done<br> 情态动词    情态动词+be + done<br> by 被谁<br> for给谁, 为了谁<br>}<br>单词短语<br>孝敬父母  \trespect parents<br>执行  carried out<br>弱势群体 vulnerable groups</li>\n</ol>\n<p>定语<br>在句子中的位置,一个定语在前面,多个在后面<br>定语为过去式在后面</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>engligh<br>不及物动词需要加介词<br>句子没有主语时候</p>\n<ol>\n<li>there be 句型在句子中有”有”and 没有主语的时候</li>\n<li>没有主语可以考虑用 it</li>\n<li>变主动为被动(虽然人称代词可以做主语, 但要注意的是加了之后句子变的具有主观性)<br>{<br> 被动时态<br> 一般现在时 am&#x2F;is&#x2F;are + 动词的过去分词(done)<br> 一般过去时 was&#x2F;were + 动词的过去分词<br> 一般将来时 will + be + done<br> 现在进行时 am&#x2F;is&#x2F;are +being + done<br> 过去进行时 was&#x2F;were + being + done<br> 现在完成时 have&#x2F;has + been + done<br> 过去完成时 had + been + done<br> 情态动词    情态动词+be + done<br> by 被谁<br> for给谁, 为了谁<br>}<br>单词短语<br>孝敬父母  \trespect parents<br>执行  carried out<br>弱势群体 vulnerable groups</li>\n</ol>\n<p>定语<br>在句子中的位置,一个定语在前面,多个在后面<br>定语为过去式在后面</p>\n"},{"title":"SpringMVC","date":"2023-05-05T13:30:42.000Z","_content":"### SpringMVC\n\n#### servlet\n\n需要写servlet类来继承HttpServle并且重写doget和dopust方法,在servlet 中对业务层进行调用,最后重定向或者转发\n\n```java\npublic class helloService extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nSystem.out.println(req.getContextPath());\nresp.sendRedirect(req.getContextPath()+\"/templates/home.html\");//重定向\n//        resp.sendRedirect(req.getContextPath()+\"/jsp/hello.jsp\");//重定向\n}\n```\n\n然后再web.xml中注册servlet\n\n```xml\n <servlet>\n        <servlet-name>hello</servlet-name>\n        <servlet-class>helloService</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>hello</servlet-name>\n        <url-pattern>/hello</url-pattern>\n    </servlet-mapping>\n```\n\n跳转到指定路径先经过web.xml,在其中找到地址所对应的servlet然后找到所对应的servlet,servlet对网页进行重定向或者转发\n\n弊端:当servlet增加的越来越多,去添加会很麻烦,也不直观\n\n#### SpringMVC\n\n![这里写图片描述](http://static.oschina.net/uploads/img/201601/26185156_co9w.jpg)\n\n- M：(Model)  模型  :  应用程序的核心功能，管理这个模块中用的数据和值；\n\n- V(View )视图:  视图提供模型的展示，管理模型如何显示给用户，它是应用程序的外观；\n\n- C(Controller)控制器: 对用户的输入做出反应，管理用户和视图的交互，是连接模型和视图的枢纽。\n\nMVC用于将web（UI）层进行职责解耦\n\n##### 使用xml配置的mvc\n\n首先创建普通的maven项目添加web.xml的框架支持,\n\n![image-20220520200110071](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220520200110071.png)\n\n创建目录lib添加jar到其中.在web.xml中注册DispatcherServlet的servlet并且配置参数和启动级别,它是spring提供给我们的.\n\n```xml\n<!--1.注册DispatcherServlet-->\n<servlet>\n    <servlet-name>springmvc</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <!--关联一个springmvc的配置文件:【servlet-name】-servlet.xml-->\n    <init-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>classpath:springmvc-servlet.xml</param-value>\n    </init-param>\n    <!--启动级别-1-->\n    <load-on-startup>1</load-on-startup>\n</servlet>\n            \n    <!--/ 匹配所有的请求；（不包括.jsp）-->\n    <!--/* 匹配所有的请求；（包括.jsp）-->\n    <servlet-mapping>\n        <servlet-name>springmvc</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>            \n```\n\n创建名为springmvc-servlet.xml的springmvc的上下文注册\n\nSimpleControllerHandlerAdapter控制层适配器\n\nBeanNameUrlHandlerMapping处理servlet映射\n\nInternalResourceViewResolver视图解析器处理dipatcherservlet传递过来的modelandview\n\n```xml\n<bean class=\"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\"/>\n<bean class=\"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter\"/>\n\n<!--视图解析器:DispatcherServlet给他的ModelAndView-->\n<bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"internalResourceViewResolver\">\n    <!--前缀-->\n    <property name=\"prefix\" value=\"/WEB-INF/jsp/\"/>\n    <!--后缀-->\n    <property name=\"suffix\" value=\".jsp\"/>\n</bean>\n```\n\n###### 注册控制层bean\n\n```xml\n<bean id=\"/hello\" class=\"com.manager.controller.helloController\"/>\n```\n\n地址栏输入/hello然后找到控制层\n\n```java\npublic class helloController implements Controller {\n    @Override\n    public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        ModelAndView mv = new ModelAndView();\n\n        //封装对象，放在ModelAndView中。Model\n        mv.addObject(\"msg\",\"HelloSpringMVC!\");\n        //封装要跳转的视图，放在ModelAndView中\n        mv.setViewName(\"hello\"); //: /WEB-INF/jsp/hello.jsp\n        return mv;\n    }\n}\n```\n\n经过控制层处理返回要跳转的视图\n\n![img](https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIXW7Wmm9KVEV1FXUfJMD0KzuYZ7ic5UHggsZDAzyYyrd4pLvnBIVM5zA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n![img](https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIWe8RPcCUeexojBiaPtY7HibQonS3PdCy98oV24F0tYk8IxEUY43N93TA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\nSpringMVC的原理如下图所示：\n\n当发起请求时被前置的控制器拦截到请求，根据请求参数生成代理请求，找到请求对应的实际控制器，控制器处理请求，创建数据模型，访问数据库，将模型响应给中心控制器，控制器使用模型与视图渲染视图结果，将结果返回给中心控制器，再将结果返回给请求者。![img](https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIaosVziclWLEJQkzobxHrpHcmtu2yTeVWPmEI4Yq5PaicS52VaJt8dYfQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n### SpringMVC执行原理\n\n![img](https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7IicxBZbkh0D4dJJiaXSzGEXyzsXDPy7oAJFsBvvBibiaFWpSp75vFIEOCBm7wnt4JKXJCHB9MflUycKw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n**简要分析执行流程**\n\n1. DispatcherServlet表示前置控制器，是整个SpringMVC的控制中心。用户发出请求，DispatcherServlet接收请求并拦截请求。\n\n   我们假设请求的url为 : http://localhost:8080/SpringMVC/hello\n\n   **如上url拆分成三部分：**\n\n   [http://localhost:8080](http://localhost:8080/)服务器域名\n\n   SpringMVC部署在服务器上的web站点\n\n   hello表示控制器在springmvc-servlet中注册\n\n   ```xml\n   <!--Handler-->\n   <bean id=\"/hello\" class=\"com.manager.controller.helloController\"/>\n   ```\n\n   通过分析，如上url表示为：请求位于服务器localhost:8080上的SpringMVC站点的hello控制器。\n\n2. HandlerMapping为处理器映射。DispatcherServlet调用HandlerMapping,HandlerMapping根据请求url查找Handler。\n\n   ```xml\n   <bean class=\"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\"/>\n   <!-- 根据url查找处理器,比如从上面的连接中查找到需要的控制器hello-->\n   ```\n\n3. HandlerExecution表示具体的Handler,其主要作用是根据url查找控制器，如上url被查找控制器为：hello。\n\n4. HandlerExecution将解析后的信息传递给DispatcherServlet,如解析控制器映射等。\n\n5. HandlerAdapter表示处理器适配器，其按照特定的规则去执行Handler。\n\n6. Handler让具体的Controller执行。\n\n   ```java\n   //实现接口controller处理业务及页面跳转重定向\n   public class helloController implements Controller {\n       @Override\n       public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {\n           ModelAndView mv = new ModelAndView();\n   \n           //封装对象，放在ModelAndView中。Model\n           mv.addObject(\"msg\",\"HelloSpringMVC!\");\n           //封装要跳转的视图，放在ModelAndView中\n           mv.setViewName(\"hello\"); //: /WEB-INF/jsp/hello.jsp\n           return mv;\n       }\n   }\n   ```\n\n7. Controller将具体的执行信息返回给HandlerAdapter,如ModelAndView。\n\n8. HandlerAdapter将视图逻辑名或模型传递给DispatcherServlet。\n\n9. DispatcherServlet调用视图解析器(ViewResolver)来解析HandlerAdapter传递的逻辑视图名。\n\n   ```xml\n       <!--视图解析器:DispatcherServlet给他的ModelAndView-->\n       <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"internalResourceViewResolver\">\n           <!--前缀-->\n           <property name=\"prefix\" value=\"/WEB-INF/jsp/\"/>\n           <!--后缀-->\n           <property name=\"suffix\" value=\".jsp\"/>\n       </bean>\n   ```\n\n10. 视图解析器将解析的逻辑视图名传给DispatcherServlet。\n\n11. DispatcherServlet根据视图解析器解析的视图结果，调用具体的视图。\n\n12. 最终视图呈现给用户。\n\n##### 使用annotation减少配置提高效率\n\nweb.xml的配置\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n        version=\"4.0\">\n   <!--1.注册servlet-->\n   <servlet>\n       <servlet-name>SpringMVC</servlet-name>\n       <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n       <!--通过初始化参数指定SpringMVC配置文件的位置，进行关联-->\n       <init-param>\n           <param-name>contextConfigLocation</param-name>\n           <param-value>classpath:springmvc-servlet.xml</param-value>\n       </init-param>\n       <!-- 启动顺序，数字越小，启动越早 -->\n       <load-on-startup>1</load-on-startup>\n   </servlet>\n   <!--所有请求都会被springmvc拦截 -->\n   <servlet-mapping>\n       <servlet-name>SpringMVC</servlet-name>\n       <url-pattern>/</url-pattern>\n   </servlet-mapping>\n</web-app>\n```\n\n1. 1. #### springmvc-servlet.xml配置文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:context=\"http://www.springframework.org/schema/context\"\n      xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/context\n       https://www.springframework.org/schema/context/spring-context.xsd\n       http://www.springframework.org/schema/mvc\n       https://www.springframework.org/schema/mvc/spring-mvc.xsd\">\n   <!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 -->\n   <context:component-scan base-package=\"com.manager.controller\"/>\n   <!-- 让Spring MVC不处理静态资源 -->\n   <mvc:default-servlet-handler />\n   <!--\n   支持mvc注解驱动\n       在spring中一般采用@RequestMapping注解来完成映射关系\n       要想使@RequestMapping注解生效\n       必须向上下文中注册DefaultAnnotationHandlerMapping\n       和一个AnnotationMethodHandlerAdapter实例\n       这两个实例分别在类级别和方法级别处理。\n       而annotation-driven配置帮助我们自动完成上述两个实例的注入。\n    -->\n   <mvc:annotation-driven />\n   <!-- 视图解析器 -->\n   <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\"\n         id=\"internalResourceViewResolver\">\n       <!-- 前缀 -->\n       <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />\n       <!-- 后缀 -->\n       <property name=\"suffix\" value=\".jsp\" />\n   </bean>\n</beans>\n```\n\n##### 编写一个Java控制类：\n\n###### 简单的\n\n```java\n@Controller\npublic class helloController {\n    @RequestMapping(\"/hello\")\n    public String helloAnnotation(){\n        return \"h1\";\n    }\n}\n```\n\n###### 复制一点的\n\n```java\n@Controller\n@RequestMapping(\"/HelloController\")\npublic class HelloController {\n\n   //真实访问地址 : 项目名/HelloController/hello\n   @RequestMapping(\"/hello\")\n    //这个hello为url中的地址,为控制器\n   public String sayHello(Model model){\n       //向模型中添加属性msg与值，可以在JSP页面中取出并渲染\n       model.addAttribute(\"msg\",\"hello,SpringMVC\");\n       //web-inf/jsp/hello.jsp\n       return \"hello\";\n       //返回的这个字符串为要跳转的视图\n  }\n}\n```\n\n在地址栏后输入/hello或者其他网页跳转到hello就会通过控制器进行一系列操作\n\n@RequestMapping是为了映射请求路径，这里因为类与方法上都有映射所以访问时应该是/HelloController/hello；\n方法中声明Model类型的参数是为了把Action中的数据带到视图中；\n方法返回的结果是视图的名称hello，加上配置文件中的前后缀变成WEB-INF/jsp/hello.jsp。\n\n#### 使用springMVC必须配置的三大件：\n\n处理器映射器、处理器适配器、视图解析器\n通常，我们只需要手动配置视图解析器，而处理器映射器和处理器适配器只需要开启注解驱动即可，而省去了大段的xml配置\n\n#### 前后端数据的处理\n\n http://localhost:8080/hello?name=hello1\n\n从链接中得到参数\n\n```java\n@RequestMapping(\"/hello\")\npublic String hello(String name){\n   System.out.println(name);\n   return \"hello\";\n}\n```\n\n输出hello1\n\nhttp://localhost:8080/hello?username=hello1\n\n如果参数名与链接中的参数名不同\n\n```java\n@RequestMapping(\"/hello\")\npublic String hello(@RequestParam(\"username\") String name){\n   System.out.println(name);\n   return \"hello\";\n}\n```\n\n输出hello1\n\n http://localhost:8080/mvc04/user?name=hello&id=1&age=15\n\n提交的额为对象时候名字需要和类的属性名称相同\n\n```java\n@RequestMapping(\"/user\")\npublic String user(User user){\n   System.out.println(user);\n   return \"hello\";\n}\n```\n\n#### 通过ModelAndView\n\n```java\npublic class ControllerTest1 implements Controller {\n\n   public ModelAndView handleRequest(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception {\n       //返回一个模型视图对象\n       ModelAndView mv = new ModelAndView();\n       mv.addObject(\"msg\",\"ControllerTest1\");\n       mv.setViewName(\"test\");\n       return mv;\n  }\n}\n```\n\n#### 通过ModelMap\n\n```java\n@RequestMapping(\"/hello\")\npublic String hello(@RequestParam(\"username\") String name, ModelMap model){\n   //封装要显示到视图中的数据\n   //相当于req.setAttribute(\"name\",name);\n   model.addAttribute(\"name\",name);\n   System.out.println(name);\n   return \"hello\";\n}\n```\n\n通过Model\n\n```java\n@RequestMapping(\"/ct2/hello\")\npublic String hello(@RequestParam(\"username\") String name, Model model){\n   //封装要显示到视图中的数据\n   //相当于req.setAttribute(\"name\",name);\n   model.addAttribute(\"msg\",name);\n   System.out.println(name);\n   return \"test\";\n}\n```\n\n#### 解决网页乱码问题\n\n在javaweb的时候通过添加一层过滤器来给每个请求响应设置统一编码\n\n在SpringMVC中提供了一个过滤器\n\n```xml\n<filter>\n   <filter-name>encoding</filter-name>\n   <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n   <init-param>\n       <param-name>encoding</param-name>\n       <param-value>utf-8</param-value>\n   </init-param>\n</filter>\n<filter-mapping>\n   <filter-name>encoding</filter-name>\n   <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n\n有时候可能支持不是那么好\n\n修改tamcat的配置\n\n```xml\n<Connector URIEncoding=\"utf-8\" port=\"8080\" protocol=\"HTTP/1.1\"\n          connectionTimeout=\"20000\"\n          redirectPort=\"8443\" />\n```\n\n也可以添加自己的过滤器\n\n和javaweb的时候一样添加过滤器类实现filter的接口实现方法doFilter\n\n```java\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws ServletException, IOException {\n        request.setCharacterEncoding(\"utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        response.setContentType(\"text/html;charset=UTF-8\");\n        chain.doFilter(request, response);\n    }\n```\n\n最后在web.xml中配置\n\n```xml\n\n <filter>\n        <filter-name>GenericEncodingFilter</filter-name>\n        <filter-class>com.manager.filter.GenericEncodingFilter</filter-class>\n    </filter>\n    <filter-mapping>\n        <filter-name>GenericEncodingFilter</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n```\n\n","source":"_posts/学习笔记/ssm框架/SpringMVC.md","raw":"---\ntitle: SpringMVC\ndate: 2023-05-05 21:30:42\ntags:  \n---\n### SpringMVC\n\n#### servlet\n\n需要写servlet类来继承HttpServle并且重写doget和dopust方法,在servlet 中对业务层进行调用,最后重定向或者转发\n\n```java\npublic class helloService extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\nSystem.out.println(req.getContextPath());\nresp.sendRedirect(req.getContextPath()+\"/templates/home.html\");//重定向\n//        resp.sendRedirect(req.getContextPath()+\"/jsp/hello.jsp\");//重定向\n}\n```\n\n然后再web.xml中注册servlet\n\n```xml\n <servlet>\n        <servlet-name>hello</servlet-name>\n        <servlet-class>helloService</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>hello</servlet-name>\n        <url-pattern>/hello</url-pattern>\n    </servlet-mapping>\n```\n\n跳转到指定路径先经过web.xml,在其中找到地址所对应的servlet然后找到所对应的servlet,servlet对网页进行重定向或者转发\n\n弊端:当servlet增加的越来越多,去添加会很麻烦,也不直观\n\n#### SpringMVC\n\n![这里写图片描述](http://static.oschina.net/uploads/img/201601/26185156_co9w.jpg)\n\n- M：(Model)  模型  :  应用程序的核心功能，管理这个模块中用的数据和值；\n\n- V(View )视图:  视图提供模型的展示，管理模型如何显示给用户，它是应用程序的外观；\n\n- C(Controller)控制器: 对用户的输入做出反应，管理用户和视图的交互，是连接模型和视图的枢纽。\n\nMVC用于将web（UI）层进行职责解耦\n\n##### 使用xml配置的mvc\n\n首先创建普通的maven项目添加web.xml的框架支持,\n\n![image-20220520200110071](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220520200110071.png)\n\n创建目录lib添加jar到其中.在web.xml中注册DispatcherServlet的servlet并且配置参数和启动级别,它是spring提供给我们的.\n\n```xml\n<!--1.注册DispatcherServlet-->\n<servlet>\n    <servlet-name>springmvc</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <!--关联一个springmvc的配置文件:【servlet-name】-servlet.xml-->\n    <init-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>classpath:springmvc-servlet.xml</param-value>\n    </init-param>\n    <!--启动级别-1-->\n    <load-on-startup>1</load-on-startup>\n</servlet>\n            \n    <!--/ 匹配所有的请求；（不包括.jsp）-->\n    <!--/* 匹配所有的请求；（包括.jsp）-->\n    <servlet-mapping>\n        <servlet-name>springmvc</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>            \n```\n\n创建名为springmvc-servlet.xml的springmvc的上下文注册\n\nSimpleControllerHandlerAdapter控制层适配器\n\nBeanNameUrlHandlerMapping处理servlet映射\n\nInternalResourceViewResolver视图解析器处理dipatcherservlet传递过来的modelandview\n\n```xml\n<bean class=\"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\"/>\n<bean class=\"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter\"/>\n\n<!--视图解析器:DispatcherServlet给他的ModelAndView-->\n<bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"internalResourceViewResolver\">\n    <!--前缀-->\n    <property name=\"prefix\" value=\"/WEB-INF/jsp/\"/>\n    <!--后缀-->\n    <property name=\"suffix\" value=\".jsp\"/>\n</bean>\n```\n\n###### 注册控制层bean\n\n```xml\n<bean id=\"/hello\" class=\"com.manager.controller.helloController\"/>\n```\n\n地址栏输入/hello然后找到控制层\n\n```java\npublic class helloController implements Controller {\n    @Override\n    public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        ModelAndView mv = new ModelAndView();\n\n        //封装对象，放在ModelAndView中。Model\n        mv.addObject(\"msg\",\"HelloSpringMVC!\");\n        //封装要跳转的视图，放在ModelAndView中\n        mv.setViewName(\"hello\"); //: /WEB-INF/jsp/hello.jsp\n        return mv;\n    }\n}\n```\n\n经过控制层处理返回要跳转的视图\n\n![img](https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIXW7Wmm9KVEV1FXUfJMD0KzuYZ7ic5UHggsZDAzyYyrd4pLvnBIVM5zA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n![img](https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIWe8RPcCUeexojBiaPtY7HibQonS3PdCy98oV24F0tYk8IxEUY43N93TA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\nSpringMVC的原理如下图所示：\n\n当发起请求时被前置的控制器拦截到请求，根据请求参数生成代理请求，找到请求对应的实际控制器，控制器处理请求，创建数据模型，访问数据库，将模型响应给中心控制器，控制器使用模型与视图渲染视图结果，将结果返回给中心控制器，再将结果返回给请求者。![img](https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIaosVziclWLEJQkzobxHrpHcmtu2yTeVWPmEI4Yq5PaicS52VaJt8dYfQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n### SpringMVC执行原理\n\n![img](https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7IicxBZbkh0D4dJJiaXSzGEXyzsXDPy7oAJFsBvvBibiaFWpSp75vFIEOCBm7wnt4JKXJCHB9MflUycKw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n**简要分析执行流程**\n\n1. DispatcherServlet表示前置控制器，是整个SpringMVC的控制中心。用户发出请求，DispatcherServlet接收请求并拦截请求。\n\n   我们假设请求的url为 : http://localhost:8080/SpringMVC/hello\n\n   **如上url拆分成三部分：**\n\n   [http://localhost:8080](http://localhost:8080/)服务器域名\n\n   SpringMVC部署在服务器上的web站点\n\n   hello表示控制器在springmvc-servlet中注册\n\n   ```xml\n   <!--Handler-->\n   <bean id=\"/hello\" class=\"com.manager.controller.helloController\"/>\n   ```\n\n   通过分析，如上url表示为：请求位于服务器localhost:8080上的SpringMVC站点的hello控制器。\n\n2. HandlerMapping为处理器映射。DispatcherServlet调用HandlerMapping,HandlerMapping根据请求url查找Handler。\n\n   ```xml\n   <bean class=\"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\"/>\n   <!-- 根据url查找处理器,比如从上面的连接中查找到需要的控制器hello-->\n   ```\n\n3. HandlerExecution表示具体的Handler,其主要作用是根据url查找控制器，如上url被查找控制器为：hello。\n\n4. HandlerExecution将解析后的信息传递给DispatcherServlet,如解析控制器映射等。\n\n5. HandlerAdapter表示处理器适配器，其按照特定的规则去执行Handler。\n\n6. Handler让具体的Controller执行。\n\n   ```java\n   //实现接口controller处理业务及页面跳转重定向\n   public class helloController implements Controller {\n       @Override\n       public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {\n           ModelAndView mv = new ModelAndView();\n   \n           //封装对象，放在ModelAndView中。Model\n           mv.addObject(\"msg\",\"HelloSpringMVC!\");\n           //封装要跳转的视图，放在ModelAndView中\n           mv.setViewName(\"hello\"); //: /WEB-INF/jsp/hello.jsp\n           return mv;\n       }\n   }\n   ```\n\n7. Controller将具体的执行信息返回给HandlerAdapter,如ModelAndView。\n\n8. HandlerAdapter将视图逻辑名或模型传递给DispatcherServlet。\n\n9. DispatcherServlet调用视图解析器(ViewResolver)来解析HandlerAdapter传递的逻辑视图名。\n\n   ```xml\n       <!--视图解析器:DispatcherServlet给他的ModelAndView-->\n       <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"internalResourceViewResolver\">\n           <!--前缀-->\n           <property name=\"prefix\" value=\"/WEB-INF/jsp/\"/>\n           <!--后缀-->\n           <property name=\"suffix\" value=\".jsp\"/>\n       </bean>\n   ```\n\n10. 视图解析器将解析的逻辑视图名传给DispatcherServlet。\n\n11. DispatcherServlet根据视图解析器解析的视图结果，调用具体的视图。\n\n12. 最终视图呈现给用户。\n\n##### 使用annotation减少配置提高效率\n\nweb.xml的配置\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n        version=\"4.0\">\n   <!--1.注册servlet-->\n   <servlet>\n       <servlet-name>SpringMVC</servlet-name>\n       <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n       <!--通过初始化参数指定SpringMVC配置文件的位置，进行关联-->\n       <init-param>\n           <param-name>contextConfigLocation</param-name>\n           <param-value>classpath:springmvc-servlet.xml</param-value>\n       </init-param>\n       <!-- 启动顺序，数字越小，启动越早 -->\n       <load-on-startup>1</load-on-startup>\n   </servlet>\n   <!--所有请求都会被springmvc拦截 -->\n   <servlet-mapping>\n       <servlet-name>SpringMVC</servlet-name>\n       <url-pattern>/</url-pattern>\n   </servlet-mapping>\n</web-app>\n```\n\n1. 1. #### springmvc-servlet.xml配置文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:context=\"http://www.springframework.org/schema/context\"\n      xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/context\n       https://www.springframework.org/schema/context/spring-context.xsd\n       http://www.springframework.org/schema/mvc\n       https://www.springframework.org/schema/mvc/spring-mvc.xsd\">\n   <!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 -->\n   <context:component-scan base-package=\"com.manager.controller\"/>\n   <!-- 让Spring MVC不处理静态资源 -->\n   <mvc:default-servlet-handler />\n   <!--\n   支持mvc注解驱动\n       在spring中一般采用@RequestMapping注解来完成映射关系\n       要想使@RequestMapping注解生效\n       必须向上下文中注册DefaultAnnotationHandlerMapping\n       和一个AnnotationMethodHandlerAdapter实例\n       这两个实例分别在类级别和方法级别处理。\n       而annotation-driven配置帮助我们自动完成上述两个实例的注入。\n    -->\n   <mvc:annotation-driven />\n   <!-- 视图解析器 -->\n   <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\"\n         id=\"internalResourceViewResolver\">\n       <!-- 前缀 -->\n       <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />\n       <!-- 后缀 -->\n       <property name=\"suffix\" value=\".jsp\" />\n   </bean>\n</beans>\n```\n\n##### 编写一个Java控制类：\n\n###### 简单的\n\n```java\n@Controller\npublic class helloController {\n    @RequestMapping(\"/hello\")\n    public String helloAnnotation(){\n        return \"h1\";\n    }\n}\n```\n\n###### 复制一点的\n\n```java\n@Controller\n@RequestMapping(\"/HelloController\")\npublic class HelloController {\n\n   //真实访问地址 : 项目名/HelloController/hello\n   @RequestMapping(\"/hello\")\n    //这个hello为url中的地址,为控制器\n   public String sayHello(Model model){\n       //向模型中添加属性msg与值，可以在JSP页面中取出并渲染\n       model.addAttribute(\"msg\",\"hello,SpringMVC\");\n       //web-inf/jsp/hello.jsp\n       return \"hello\";\n       //返回的这个字符串为要跳转的视图\n  }\n}\n```\n\n在地址栏后输入/hello或者其他网页跳转到hello就会通过控制器进行一系列操作\n\n@RequestMapping是为了映射请求路径，这里因为类与方法上都有映射所以访问时应该是/HelloController/hello；\n方法中声明Model类型的参数是为了把Action中的数据带到视图中；\n方法返回的结果是视图的名称hello，加上配置文件中的前后缀变成WEB-INF/jsp/hello.jsp。\n\n#### 使用springMVC必须配置的三大件：\n\n处理器映射器、处理器适配器、视图解析器\n通常，我们只需要手动配置视图解析器，而处理器映射器和处理器适配器只需要开启注解驱动即可，而省去了大段的xml配置\n\n#### 前后端数据的处理\n\n http://localhost:8080/hello?name=hello1\n\n从链接中得到参数\n\n```java\n@RequestMapping(\"/hello\")\npublic String hello(String name){\n   System.out.println(name);\n   return \"hello\";\n}\n```\n\n输出hello1\n\nhttp://localhost:8080/hello?username=hello1\n\n如果参数名与链接中的参数名不同\n\n```java\n@RequestMapping(\"/hello\")\npublic String hello(@RequestParam(\"username\") String name){\n   System.out.println(name);\n   return \"hello\";\n}\n```\n\n输出hello1\n\n http://localhost:8080/mvc04/user?name=hello&id=1&age=15\n\n提交的额为对象时候名字需要和类的属性名称相同\n\n```java\n@RequestMapping(\"/user\")\npublic String user(User user){\n   System.out.println(user);\n   return \"hello\";\n}\n```\n\n#### 通过ModelAndView\n\n```java\npublic class ControllerTest1 implements Controller {\n\n   public ModelAndView handleRequest(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception {\n       //返回一个模型视图对象\n       ModelAndView mv = new ModelAndView();\n       mv.addObject(\"msg\",\"ControllerTest1\");\n       mv.setViewName(\"test\");\n       return mv;\n  }\n}\n```\n\n#### 通过ModelMap\n\n```java\n@RequestMapping(\"/hello\")\npublic String hello(@RequestParam(\"username\") String name, ModelMap model){\n   //封装要显示到视图中的数据\n   //相当于req.setAttribute(\"name\",name);\n   model.addAttribute(\"name\",name);\n   System.out.println(name);\n   return \"hello\";\n}\n```\n\n通过Model\n\n```java\n@RequestMapping(\"/ct2/hello\")\npublic String hello(@RequestParam(\"username\") String name, Model model){\n   //封装要显示到视图中的数据\n   //相当于req.setAttribute(\"name\",name);\n   model.addAttribute(\"msg\",name);\n   System.out.println(name);\n   return \"test\";\n}\n```\n\n#### 解决网页乱码问题\n\n在javaweb的时候通过添加一层过滤器来给每个请求响应设置统一编码\n\n在SpringMVC中提供了一个过滤器\n\n```xml\n<filter>\n   <filter-name>encoding</filter-name>\n   <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n   <init-param>\n       <param-name>encoding</param-name>\n       <param-value>utf-8</param-value>\n   </init-param>\n</filter>\n<filter-mapping>\n   <filter-name>encoding</filter-name>\n   <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n\n有时候可能支持不是那么好\n\n修改tamcat的配置\n\n```xml\n<Connector URIEncoding=\"utf-8\" port=\"8080\" protocol=\"HTTP/1.1\"\n          connectionTimeout=\"20000\"\n          redirectPort=\"8443\" />\n```\n\n也可以添加自己的过滤器\n\n和javaweb的时候一样添加过滤器类实现filter的接口实现方法doFilter\n\n```java\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws ServletException, IOException {\n        request.setCharacterEncoding(\"utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        response.setContentType(\"text/html;charset=UTF-8\");\n        chain.doFilter(request, response);\n    }\n```\n\n最后在web.xml中配置\n\n```xml\n\n <filter>\n        <filter-name>GenericEncodingFilter</filter-name>\n        <filter-class>com.manager.filter.GenericEncodingFilter</filter-class>\n    </filter>\n    <filter-mapping>\n        <filter-name>GenericEncodingFilter</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n```\n\n","slug":"学习笔记/ssm框架/SpringMVC","published":1,"updated":"2023-05-19T14:07:31.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oal000nwwvn1k6qgbkj","content":"<h3 id=\"SpringMVC\"><a href=\"#SpringMVC\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h3><h4 id=\"servlet\"><a href=\"#servlet\" class=\"headerlink\" title=\"servlet\"></a>servlet</h4><p>需要写servlet类来继承HttpServle并且重写doget和dopust方法,在servlet 中对业务层进行调用,最后重定向或者转发</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">helloService</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">System.out.println(req.getContextPath());</span><br><span class=\"line\">resp.sendRedirect(req.getContextPath()+<span class=\"string\">&quot;/templates/home.html&quot;</span>);<span class=\"comment\">//重定向</span></span><br><span class=\"line\"><span class=\"comment\">//        resp.sendRedirect(req.getContextPath()+&quot;/jsp/hello.jsp&quot;);//重定向</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后再web.xml中注册servlet</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>helloService<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/hello<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>跳转到指定路径先经过web.xml,在其中找到地址所对应的servlet然后找到所对应的servlet,servlet对网页进行重定向或者转发</p>\n<p>弊端:当servlet增加的越来越多,去添加会很麻烦,也不直观</p>\n<h4 id=\"SpringMVC-1\"><a href=\"#SpringMVC-1\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h4><p><img src=\"http://static.oschina.net/uploads/img/201601/26185156_co9w.jpg\" alt=\"这里写图片描述\"></p>\n<ul>\n<li><p>M：(Model)  模型  :  应用程序的核心功能，管理这个模块中用的数据和值；</p>\n</li>\n<li><p>V(View )视图:  视图提供模型的展示，管理模型如何显示给用户，它是应用程序的外观；</p>\n</li>\n<li><p>C(Controller)控制器: 对用户的输入做出反应，管理用户和视图的交互，是连接模型和视图的枢纽。</p>\n</li>\n</ul>\n<p>MVC用于将web（UI）层进行职责解耦</p>\n<h5 id=\"使用xml配置的mvc\"><a href=\"#使用xml配置的mvc\" class=\"headerlink\" title=\"使用xml配置的mvc\"></a>使用xml配置的mvc</h5><p>首先创建普通的maven项目添加web.xml的框架支持,</p>\n<p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220520200110071.png\" alt=\"image-20220520200110071\"></p>\n<p>创建目录lib添加jar到其中.在web.xml中注册DispatcherServlet的servlet并且配置参数和启动级别,它是spring提供给我们的.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--1.注册DispatcherServlet--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>springmvc<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--关联一个springmvc的配置文件:【servlet-name】-servlet.xml--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--启动级别-1--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"comment\">&lt;!--/ 匹配所有的请求；（不包括.jsp）--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--/* 匹配所有的请求；（包括.jsp）--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>springmvc<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span>            </span><br></pre></td></tr></table></figure>\n\n<p>创建名为springmvc-servlet.xml的springmvc的上下文注册</p>\n<p>SimpleControllerHandlerAdapter控制层适配器</p>\n<p>BeanNameUrlHandlerMapping处理servlet映射</p>\n<p>InternalResourceViewResolver视图解析器处理dipatcherservlet传递过来的modelandview</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--视图解析器:DispatcherServlet给他的ModelAndView--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--前缀--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--后缀--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;suffix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"注册控制层bean\"><a href=\"#注册控制层bean\" class=\"headerlink\" title=\"注册控制层bean\"></a>注册控制层bean</h6><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;/hello&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.controller.helloController&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>地址栏输入&#x2F;hello然后找到控制层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">helloController</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Controller</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ModelAndView <span class=\"title function_\">handleRequest</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">ModelAndView</span> <span class=\"variable\">mv</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ModelAndView</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//封装对象，放在ModelAndView中。Model</span></span><br><span class=\"line\">        mv.addObject(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;HelloSpringMVC!&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//封装要跳转的视图，放在ModelAndView中</span></span><br><span class=\"line\">        mv.setViewName(<span class=\"string\">&quot;hello&quot;</span>); <span class=\"comment\">//: /WEB-INF/jsp/hello.jsp</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> mv;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>经过控制层处理返回要跳转的视图</p>\n<p><img src=\"https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIXW7Wmm9KVEV1FXUfJMD0KzuYZ7ic5UHggsZDAzyYyrd4pLvnBIVM5zA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"img\"></p>\n<p><img src=\"https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIWe8RPcCUeexojBiaPtY7HibQonS3PdCy98oV24F0tYk8IxEUY43N93TA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"img\"></p>\n<p>SpringMVC的原理如下图所示：</p>\n<p>当发起请求时被前置的控制器拦截到请求，根据请求参数生成代理请求，找到请求对应的实际控制器，控制器处理请求，创建数据模型，访问数据库，将模型响应给中心控制器，控制器使用模型与视图渲染视图结果，将结果返回给中心控制器，再将结果返回给请求者。<img src=\"https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIaosVziclWLEJQkzobxHrpHcmtu2yTeVWPmEI4Yq5PaicS52VaJt8dYfQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"img\"></p>\n<h3 id=\"SpringMVC执行原理\"><a href=\"#SpringMVC执行原理\" class=\"headerlink\" title=\"SpringMVC执行原理\"></a>SpringMVC执行原理</h3><p><img src=\"https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7IicxBZbkh0D4dJJiaXSzGEXyzsXDPy7oAJFsBvvBibiaFWpSp75vFIEOCBm7wnt4JKXJCHB9MflUycKw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"img\"></p>\n<p><strong>简要分析执行流程</strong></p>\n<ol>\n<li><p>DispatcherServlet表示前置控制器，是整个SpringMVC的控制中心。用户发出请求，DispatcherServlet接收请求并拦截请求。</p>\n<p>我们假设请求的url为 : <a href=\"http://localhost:8080/SpringMVC/hello\">http://localhost:8080/SpringMVC/hello</a></p>\n<p><strong>如上url拆分成三部分：</strong></p>\n<p><a href=\"http://localhost:8080/\">http://localhost:8080</a>服务器域名</p>\n<p>SpringMVC部署在服务器上的web站点</p>\n<p>hello表示控制器在springmvc-servlet中注册</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--Handler--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;/hello&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.controller.helloController&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过分析，如上url表示为：请求位于服务器localhost:8080上的SpringMVC站点的hello控制器。</p>\n</li>\n<li><p>HandlerMapping为处理器映射。DispatcherServlet调用HandlerMapping,HandlerMapping根据请求url查找Handler。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 根据url查找处理器,比如从上面的连接中查找到需要的控制器hello--&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>HandlerExecution表示具体的Handler,其主要作用是根据url查找控制器，如上url被查找控制器为：hello。</p>\n</li>\n<li><p>HandlerExecution将解析后的信息传递给DispatcherServlet,如解析控制器映射等。</p>\n</li>\n<li><p>HandlerAdapter表示处理器适配器，其按照特定的规则去执行Handler。</p>\n</li>\n<li><p>Handler让具体的Controller执行。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现接口controller处理业务及页面跳转重定向</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">helloController</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Controller</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ModelAndView <span class=\"title function_\">handleRequest</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">ModelAndView</span> <span class=\"variable\">mv</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ModelAndView</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//封装对象，放在ModelAndView中。Model</span></span><br><span class=\"line\">        mv.addObject(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;HelloSpringMVC!&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//封装要跳转的视图，放在ModelAndView中</span></span><br><span class=\"line\">        mv.setViewName(<span class=\"string\">&quot;hello&quot;</span>); <span class=\"comment\">//: /WEB-INF/jsp/hello.jsp</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> mv;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller将具体的执行信息返回给HandlerAdapter,如ModelAndView。</p>\n</li>\n<li><p>HandlerAdapter将视图逻辑名或模型传递给DispatcherServlet。</p>\n</li>\n<li><p>DispatcherServlet调用视图解析器(ViewResolver)来解析HandlerAdapter传递的逻辑视图名。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--视图解析器:DispatcherServlet给他的ModelAndView--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--前缀--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--后缀--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;suffix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>视图解析器将解析的逻辑视图名传给DispatcherServlet。</p>\n</li>\n<li><p>DispatcherServlet根据视图解析器解析的视图结果，调用具体的视图。</p>\n</li>\n<li><p>最终视图呈现给用户。</p>\n</li>\n</ol>\n<h5 id=\"使用annotation减少配置提高效率\"><a href=\"#使用annotation减少配置提高效率\" class=\"headerlink\" title=\"使用annotation减少配置提高效率\"></a>使用annotation减少配置提高效率</h5><p>web.xml的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">version</span>=<span class=\"string\">&quot;4.0&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--1.注册servlet--&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>SpringMVC<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!--通过初始化参数指定SpringMVC配置文件的位置，进行关联--&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- 启动顺序，数字越小，启动越早 --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--所有请求都会被springmvc拦截 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>SpringMVC<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><ol>\n<li><h4 id=\"springmvc-servlet-xml配置文件\"><a href=\"#springmvc-servlet-xml配置文件\" class=\"headerlink\" title=\"springmvc-servlet.xml配置文件\"></a>springmvc-servlet.xml配置文件</h4></li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">xmlns:mvc</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/mvc</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">&quot;com.manager.controller&quot;</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- 让Spring MVC不处理静态资源 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">   支持mvc注解驱动</span></span><br><span class=\"line\"><span class=\"comment\">       在spring中一般采用@RequestMapping注解来完成映射关系</span></span><br><span class=\"line\"><span class=\"comment\">       要想使@RequestMapping注解生效</span></span><br><span class=\"line\"><span class=\"comment\">       必须向上下文中注册DefaultAnnotationHandlerMapping</span></span><br><span class=\"line\"><span class=\"comment\">       和一个AnnotationMethodHandlerAdapter实例</span></span><br><span class=\"line\"><span class=\"comment\">       这两个实例分别在类级别和方法级别处理。</span></span><br><span class=\"line\"><span class=\"comment\">       而annotation-driven配置帮助我们自动完成上述两个实例的注入。</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">mvc:annotation-driven</span> /&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- 视图解析器 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">id</span>=<span class=\"string\">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- 前缀 --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- 后缀 --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;suffix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"编写一个Java控制类：\"><a href=\"#编写一个Java控制类：\" class=\"headerlink\" title=\"编写一个Java控制类：\"></a>编写一个Java控制类：</h5><h6 id=\"简单的\"><a href=\"#简单的\" class=\"headerlink\" title=\"简单的\"></a>简单的</h6><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">helloController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">helloAnnotation</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;h1&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"复制一点的\"><a href=\"#复制一点的\" class=\"headerlink\" title=\"复制一点的\"></a>复制一点的</h6><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/HelloController&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//真实访问地址 : 项目名/HelloController/hello</span></span><br><span class=\"line\">   <span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"comment\">//这个hello为url中的地址,为控制器</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">sayHello</span><span class=\"params\">(Model model)</span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">//向模型中添加属性msg与值，可以在JSP页面中取出并渲染</span></span><br><span class=\"line\">       model.addAttribute(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;hello,SpringMVC&quot;</span>);</span><br><span class=\"line\">       <span class=\"comment\">//web-inf/jsp/hello.jsp</span></span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">       <span class=\"comment\">//返回的这个字符串为要跳转的视图</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在地址栏后输入&#x2F;hello或者其他网页跳转到hello就会通过控制器进行一系列操作</p>\n<p>@RequestMapping是为了映射请求路径，这里因为类与方法上都有映射所以访问时应该是&#x2F;HelloController&#x2F;hello；<br>方法中声明Model类型的参数是为了把Action中的数据带到视图中；<br>方法返回的结果是视图的名称hello，加上配置文件中的前后缀变成WEB-INF&#x2F;jsp&#x2F;hello.jsp。</p>\n<h4 id=\"使用springMVC必须配置的三大件：\"><a href=\"#使用springMVC必须配置的三大件：\" class=\"headerlink\" title=\"使用springMVC必须配置的三大件：\"></a>使用springMVC必须配置的三大件：</h4><p>处理器映射器、处理器适配器、视图解析器<br>通常，我们只需要手动配置视图解析器，而处理器映射器和处理器适配器只需要开启注解驱动即可，而省去了大段的xml配置</p>\n<h4 id=\"前后端数据的处理\"><a href=\"#前后端数据的处理\" class=\"headerlink\" title=\"前后端数据的处理\"></a>前后端数据的处理</h4><p> <a href=\"http://localhost:8080/hello?name=hello1\">http://localhost:8080/hello?name=hello1</a></p>\n<p>从链接中得到参数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">(String name)</span>&#123;</span><br><span class=\"line\">   System.out.println(name);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出hello1</p>\n<p><a href=\"http://localhost:8080/hello?username=hello1\">http://localhost:8080/hello?username=hello1</a></p>\n<p>如果参数名与链接中的参数名不同</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;username&quot;)</span> String name)</span>&#123;</span><br><span class=\"line\">   System.out.println(name);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出hello1</p>\n<p> <a href=\"http://localhost:8080/mvc04/user?name=hello&id=1&age=15\">http://localhost:8080/mvc04/user?name=hello&amp;id=1&amp;age=15</a></p>\n<p>提交的额为对象时候名字需要和类的属性名称相同</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">user</span><span class=\"params\">(User user)</span>&#123;</span><br><span class=\"line\">   System.out.println(user);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"通过ModelAndView\"><a href=\"#通过ModelAndView\" class=\"headerlink\" title=\"通过ModelAndView\"></a>通过ModelAndView</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ControllerTest1</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Controller</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> ModelAndView <span class=\"title function_\">handleRequest</span><span class=\"params\">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">       <span class=\"comment\">//返回一个模型视图对象</span></span><br><span class=\"line\">       <span class=\"type\">ModelAndView</span> <span class=\"variable\">mv</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ModelAndView</span>();</span><br><span class=\"line\">       mv.addObject(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;ControllerTest1&quot;</span>);</span><br><span class=\"line\">       mv.setViewName(<span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> mv;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"通过ModelMap\"><a href=\"#通过ModelMap\" class=\"headerlink\" title=\"通过ModelMap\"></a>通过ModelMap</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;username&quot;)</span> String name, ModelMap model)</span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//封装要显示到视图中的数据</span></span><br><span class=\"line\">   <span class=\"comment\">//相当于req.setAttribute(&quot;name&quot;,name);</span></span><br><span class=\"line\">   model.addAttribute(<span class=\"string\">&quot;name&quot;</span>,name);</span><br><span class=\"line\">   System.out.println(name);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过Model</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/ct2/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;username&quot;)</span> String name, Model model)</span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//封装要显示到视图中的数据</span></span><br><span class=\"line\">   <span class=\"comment\">//相当于req.setAttribute(&quot;name&quot;,name);</span></span><br><span class=\"line\">   model.addAttribute(<span class=\"string\">&quot;msg&quot;</span>,name);</span><br><span class=\"line\">   System.out.println(name);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;test&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决网页乱码问题\"><a href=\"#解决网页乱码问题\" class=\"headerlink\" title=\"解决网页乱码问题\"></a>解决网页乱码问题</h4><p>在javaweb的时候通过添加一层过滤器来给每个请求响应设置统一编码</p>\n<p>在SpringMVC中提供了一个过滤器</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>utf-8<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>有时候可能支持不是那么好</p>\n<p>修改tamcat的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">URIEncoding</span>=<span class=\"string\">&quot;utf-8&quot;</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8080&quot;</span> <span class=\"attr\">protocol</span>=<span class=\"string\">&quot;HTTP/1.1&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">&quot;20000&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">redirectPort</span>=<span class=\"string\">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>也可以添加自己的过滤器</p>\n<p>和javaweb的时候一样添加过滤器类实现filter的接口实现方法doFilter</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    request.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">    response.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">    response.setContentType(<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class=\"line\">    chain.doFilter(request, response);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后在web.xml中配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>GenericEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>com.manager.filter.GenericEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>GenericEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h3 id=\"SpringMVC\"><a href=\"#SpringMVC\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h3><h4 id=\"servlet\"><a href=\"#servlet\" class=\"headerlink\" title=\"servlet\"></a>servlet</h4><p>需要写servlet类来继承HttpServle并且重写doget和dopust方法,在servlet 中对业务层进行调用,最后重定向或者转发</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">helloService</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">System.out.println(req.getContextPath());</span><br><span class=\"line\">resp.sendRedirect(req.getContextPath()+<span class=\"string\">&quot;/templates/home.html&quot;</span>);<span class=\"comment\">//重定向</span></span><br><span class=\"line\"><span class=\"comment\">//        resp.sendRedirect(req.getContextPath()+&quot;/jsp/hello.jsp&quot;);//重定向</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后再web.xml中注册servlet</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>helloService<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/hello<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>跳转到指定路径先经过web.xml,在其中找到地址所对应的servlet然后找到所对应的servlet,servlet对网页进行重定向或者转发</p>\n<p>弊端:当servlet增加的越来越多,去添加会很麻烦,也不直观</p>\n<h4 id=\"SpringMVC-1\"><a href=\"#SpringMVC-1\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h4><p><img src=\"http://static.oschina.net/uploads/img/201601/26185156_co9w.jpg\" alt=\"这里写图片描述\"></p>\n<ul>\n<li><p>M：(Model)  模型  :  应用程序的核心功能，管理这个模块中用的数据和值；</p>\n</li>\n<li><p>V(View )视图:  视图提供模型的展示，管理模型如何显示给用户，它是应用程序的外观；</p>\n</li>\n<li><p>C(Controller)控制器: 对用户的输入做出反应，管理用户和视图的交互，是连接模型和视图的枢纽。</p>\n</li>\n</ul>\n<p>MVC用于将web（UI）层进行职责解耦</p>\n<h5 id=\"使用xml配置的mvc\"><a href=\"#使用xml配置的mvc\" class=\"headerlink\" title=\"使用xml配置的mvc\"></a>使用xml配置的mvc</h5><p>首先创建普通的maven项目添加web.xml的框架支持,</p>\n<p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220520200110071.png\" alt=\"image-20220520200110071\"></p>\n<p>创建目录lib添加jar到其中.在web.xml中注册DispatcherServlet的servlet并且配置参数和启动级别,它是spring提供给我们的.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--1.注册DispatcherServlet--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>springmvc<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--关联一个springmvc的配置文件:【servlet-name】-servlet.xml--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--启动级别-1--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"comment\">&lt;!--/ 匹配所有的请求；（不包括.jsp）--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--/* 匹配所有的请求；（包括.jsp）--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>springmvc<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span>            </span><br></pre></td></tr></table></figure>\n\n<p>创建名为springmvc-servlet.xml的springmvc的上下文注册</p>\n<p>SimpleControllerHandlerAdapter控制层适配器</p>\n<p>BeanNameUrlHandlerMapping处理servlet映射</p>\n<p>InternalResourceViewResolver视图解析器处理dipatcherservlet传递过来的modelandview</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--视图解析器:DispatcherServlet给他的ModelAndView--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--前缀--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--后缀--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;suffix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"注册控制层bean\"><a href=\"#注册控制层bean\" class=\"headerlink\" title=\"注册控制层bean\"></a>注册控制层bean</h6><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;/hello&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.controller.helloController&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>地址栏输入&#x2F;hello然后找到控制层</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">helloController</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Controller</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ModelAndView <span class=\"title function_\">handleRequest</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">ModelAndView</span> <span class=\"variable\">mv</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ModelAndView</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//封装对象，放在ModelAndView中。Model</span></span><br><span class=\"line\">        mv.addObject(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;HelloSpringMVC!&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//封装要跳转的视图，放在ModelAndView中</span></span><br><span class=\"line\">        mv.setViewName(<span class=\"string\">&quot;hello&quot;</span>); <span class=\"comment\">//: /WEB-INF/jsp/hello.jsp</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> mv;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>经过控制层处理返回要跳转的视图</p>\n<p><img src=\"https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIXW7Wmm9KVEV1FXUfJMD0KzuYZ7ic5UHggsZDAzyYyrd4pLvnBIVM5zA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"img\"></p>\n<p><img src=\"https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIWe8RPcCUeexojBiaPtY7HibQonS3PdCy98oV24F0tYk8IxEUY43N93TA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"img\"></p>\n<p>SpringMVC的原理如下图所示：</p>\n<p>当发起请求时被前置的控制器拦截到请求，根据请求参数生成代理请求，找到请求对应的实际控制器，控制器处理请求，创建数据模型，访问数据库，将模型响应给中心控制器，控制器使用模型与视图渲染视图结果，将结果返回给中心控制器，再将结果返回给请求者。<img src=\"https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KwPOPWq00pMJiaK86lF6BjIaosVziclWLEJQkzobxHrpHcmtu2yTeVWPmEI4Yq5PaicS52VaJt8dYfQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"img\"></p>\n<h3 id=\"SpringMVC执行原理\"><a href=\"#SpringMVC执行原理\" class=\"headerlink\" title=\"SpringMVC执行原理\"></a>SpringMVC执行原理</h3><p><img src=\"https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7IicxBZbkh0D4dJJiaXSzGEXyzsXDPy7oAJFsBvvBibiaFWpSp75vFIEOCBm7wnt4JKXJCHB9MflUycKw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" alt=\"img\"></p>\n<p><strong>简要分析执行流程</strong></p>\n<ol>\n<li><p>DispatcherServlet表示前置控制器，是整个SpringMVC的控制中心。用户发出请求，DispatcherServlet接收请求并拦截请求。</p>\n<p>我们假设请求的url为 : <a href=\"http://localhost:8080/SpringMVC/hello\">http://localhost:8080/SpringMVC/hello</a></p>\n<p><strong>如上url拆分成三部分：</strong></p>\n<p><a href=\"http://localhost:8080/\">http://localhost:8080</a>服务器域名</p>\n<p>SpringMVC部署在服务器上的web站点</p>\n<p>hello表示控制器在springmvc-servlet中注册</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--Handler--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;/hello&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.controller.helloController&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过分析，如上url表示为：请求位于服务器localhost:8080上的SpringMVC站点的hello控制器。</p>\n</li>\n<li><p>HandlerMapping为处理器映射。DispatcherServlet调用HandlerMapping,HandlerMapping根据请求url查找Handler。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 根据url查找处理器,比如从上面的连接中查找到需要的控制器hello--&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>HandlerExecution表示具体的Handler,其主要作用是根据url查找控制器，如上url被查找控制器为：hello。</p>\n</li>\n<li><p>HandlerExecution将解析后的信息传递给DispatcherServlet,如解析控制器映射等。</p>\n</li>\n<li><p>HandlerAdapter表示处理器适配器，其按照特定的规则去执行Handler。</p>\n</li>\n<li><p>Handler让具体的Controller执行。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现接口controller处理业务及页面跳转重定向</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">helloController</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Controller</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ModelAndView <span class=\"title function_\">handleRequest</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">ModelAndView</span> <span class=\"variable\">mv</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ModelAndView</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//封装对象，放在ModelAndView中。Model</span></span><br><span class=\"line\">        mv.addObject(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;HelloSpringMVC!&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//封装要跳转的视图，放在ModelAndView中</span></span><br><span class=\"line\">        mv.setViewName(<span class=\"string\">&quot;hello&quot;</span>); <span class=\"comment\">//: /WEB-INF/jsp/hello.jsp</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> mv;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Controller将具体的执行信息返回给HandlerAdapter,如ModelAndView。</p>\n</li>\n<li><p>HandlerAdapter将视图逻辑名或模型传递给DispatcherServlet。</p>\n</li>\n<li><p>DispatcherServlet调用视图解析器(ViewResolver)来解析HandlerAdapter传递的逻辑视图名。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--视图解析器:DispatcherServlet给他的ModelAndView--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--前缀--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--后缀--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;suffix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>视图解析器将解析的逻辑视图名传给DispatcherServlet。</p>\n</li>\n<li><p>DispatcherServlet根据视图解析器解析的视图结果，调用具体的视图。</p>\n</li>\n<li><p>最终视图呈现给用户。</p>\n</li>\n</ol>\n<h5 id=\"使用annotation减少配置提高效率\"><a href=\"#使用annotation减少配置提高效率\" class=\"headerlink\" title=\"使用annotation减少配置提高效率\"></a>使用annotation减少配置提高效率</h5><p>web.xml的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">version</span>=<span class=\"string\">&quot;4.0&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--1.注册servlet--&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>SpringMVC<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!--通过初始化参数指定SpringMVC配置文件的位置，进行关联--&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- 启动顺序，数字越小，启动越早 --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--所有请求都会被springmvc拦截 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>SpringMVC<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><ol>\n<li><h4 id=\"springmvc-servlet-xml配置文件\"><a href=\"#springmvc-servlet-xml配置文件\" class=\"headerlink\" title=\"springmvc-servlet.xml配置文件\"></a>springmvc-servlet.xml配置文件</h4></li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">xmlns:mvc</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       http://www.springframework.org/schema/mvc</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">&quot;com.manager.controller&quot;</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- 让Spring MVC不处理静态资源 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">   支持mvc注解驱动</span></span><br><span class=\"line\"><span class=\"comment\">       在spring中一般采用@RequestMapping注解来完成映射关系</span></span><br><span class=\"line\"><span class=\"comment\">       要想使@RequestMapping注解生效</span></span><br><span class=\"line\"><span class=\"comment\">       必须向上下文中注册DefaultAnnotationHandlerMapping</span></span><br><span class=\"line\"><span class=\"comment\">       和一个AnnotationMethodHandlerAdapter实例</span></span><br><span class=\"line\"><span class=\"comment\">       这两个实例分别在类级别和方法级别处理。</span></span><br><span class=\"line\"><span class=\"comment\">       而annotation-driven配置帮助我们自动完成上述两个实例的注入。</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">mvc:annotation-driven</span> /&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- 视图解析器 --&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">id</span>=<span class=\"string\">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- 前缀 --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;prefix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- 后缀 --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;suffix&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"编写一个Java控制类：\"><a href=\"#编写一个Java控制类：\" class=\"headerlink\" title=\"编写一个Java控制类：\"></a>编写一个Java控制类：</h5><h6 id=\"简单的\"><a href=\"#简单的\" class=\"headerlink\" title=\"简单的\"></a>简单的</h6><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">helloController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">helloAnnotation</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;h1&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"复制一点的\"><a href=\"#复制一点的\" class=\"headerlink\" title=\"复制一点的\"></a>复制一点的</h6><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/HelloController&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">//真实访问地址 : 项目名/HelloController/hello</span></span><br><span class=\"line\">   <span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"comment\">//这个hello为url中的地址,为控制器</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">sayHello</span><span class=\"params\">(Model model)</span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">//向模型中添加属性msg与值，可以在JSP页面中取出并渲染</span></span><br><span class=\"line\">       model.addAttribute(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;hello,SpringMVC&quot;</span>);</span><br><span class=\"line\">       <span class=\"comment\">//web-inf/jsp/hello.jsp</span></span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">       <span class=\"comment\">//返回的这个字符串为要跳转的视图</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在地址栏后输入&#x2F;hello或者其他网页跳转到hello就会通过控制器进行一系列操作</p>\n<p>@RequestMapping是为了映射请求路径，这里因为类与方法上都有映射所以访问时应该是&#x2F;HelloController&#x2F;hello；<br>方法中声明Model类型的参数是为了把Action中的数据带到视图中；<br>方法返回的结果是视图的名称hello，加上配置文件中的前后缀变成WEB-INF&#x2F;jsp&#x2F;hello.jsp。</p>\n<h4 id=\"使用springMVC必须配置的三大件：\"><a href=\"#使用springMVC必须配置的三大件：\" class=\"headerlink\" title=\"使用springMVC必须配置的三大件：\"></a>使用springMVC必须配置的三大件：</h4><p>处理器映射器、处理器适配器、视图解析器<br>通常，我们只需要手动配置视图解析器，而处理器映射器和处理器适配器只需要开启注解驱动即可，而省去了大段的xml配置</p>\n<h4 id=\"前后端数据的处理\"><a href=\"#前后端数据的处理\" class=\"headerlink\" title=\"前后端数据的处理\"></a>前后端数据的处理</h4><p> <a href=\"http://localhost:8080/hello?name=hello1\">http://localhost:8080/hello?name=hello1</a></p>\n<p>从链接中得到参数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">(String name)</span>&#123;</span><br><span class=\"line\">   System.out.println(name);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出hello1</p>\n<p><a href=\"http://localhost:8080/hello?username=hello1\">http://localhost:8080/hello?username=hello1</a></p>\n<p>如果参数名与链接中的参数名不同</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;username&quot;)</span> String name)</span>&#123;</span><br><span class=\"line\">   System.out.println(name);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出hello1</p>\n<p> <a href=\"http://localhost:8080/mvc04/user?name=hello&id=1&age=15\">http://localhost:8080/mvc04/user?name=hello&amp;id=1&amp;age=15</a></p>\n<p>提交的额为对象时候名字需要和类的属性名称相同</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">user</span><span class=\"params\">(User user)</span>&#123;</span><br><span class=\"line\">   System.out.println(user);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"通过ModelAndView\"><a href=\"#通过ModelAndView\" class=\"headerlink\" title=\"通过ModelAndView\"></a>通过ModelAndView</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ControllerTest1</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Controller</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> ModelAndView <span class=\"title function_\">handleRequest</span><span class=\"params\">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">       <span class=\"comment\">//返回一个模型视图对象</span></span><br><span class=\"line\">       <span class=\"type\">ModelAndView</span> <span class=\"variable\">mv</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ModelAndView</span>();</span><br><span class=\"line\">       mv.addObject(<span class=\"string\">&quot;msg&quot;</span>,<span class=\"string\">&quot;ControllerTest1&quot;</span>);</span><br><span class=\"line\">       mv.setViewName(<span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> mv;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"通过ModelMap\"><a href=\"#通过ModelMap\" class=\"headerlink\" title=\"通过ModelMap\"></a>通过ModelMap</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;username&quot;)</span> String name, ModelMap model)</span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//封装要显示到视图中的数据</span></span><br><span class=\"line\">   <span class=\"comment\">//相当于req.setAttribute(&quot;name&quot;,name);</span></span><br><span class=\"line\">   model.addAttribute(<span class=\"string\">&quot;name&quot;</span>,name);</span><br><span class=\"line\">   System.out.println(name);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过Model</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/ct2/hello&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestParam(&quot;username&quot;)</span> String name, Model model)</span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//封装要显示到视图中的数据</span></span><br><span class=\"line\">   <span class=\"comment\">//相当于req.setAttribute(&quot;name&quot;,name);</span></span><br><span class=\"line\">   model.addAttribute(<span class=\"string\">&quot;msg&quot;</span>,name);</span><br><span class=\"line\">   System.out.println(name);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"string\">&quot;test&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决网页乱码问题\"><a href=\"#解决网页乱码问题\" class=\"headerlink\" title=\"解决网页乱码问题\"></a>解决网页乱码问题</h4><p>在javaweb的时候通过添加一层过滤器来给每个请求响应设置统一编码</p>\n<p>在SpringMVC中提供了一个过滤器</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>utf-8<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>有时候可能支持不是那么好</p>\n<p>修改tamcat的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">URIEncoding</span>=<span class=\"string\">&quot;utf-8&quot;</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8080&quot;</span> <span class=\"attr\">protocol</span>=<span class=\"string\">&quot;HTTP/1.1&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">&quot;20000&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">redirectPort</span>=<span class=\"string\">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>也可以添加自己的过滤器</p>\n<p>和javaweb的时候一样添加过滤器类实现filter的接口实现方法doFilter</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    request.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">    response.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">    response.setContentType(<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class=\"line\">    chain.doFilter(request, response);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最后在web.xml中配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>GenericEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>com.manager.filter.GenericEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>GenericEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"spring","date":"2023-05-05T13:30:42.000Z","_content":"# spring框架\n\n### 概述\n\nSpring的英文翻译为春天，可以说是给Java程序员带来了春天，因为它极大的简化了开发。我得出一个公式：Spring = 春天 = Java程序员的春天 = 简化开发。最后的简化开发正是Spring框架带来的最大好处。\n\nSpring是一个开放源代码的设计层面框架，它是于2003 年兴起的一个轻量级的Java 开发框架。由Rod Johnson创建，其前身为Interface21框架，后改为了Spring并且正式发布。\n\n### 核心\n\nSpring 的理念：不去重新发明轮子。其核心是控制反转（IOC）和面向切面（AOP）\n\n### spring配置文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n    \n</beans>\n```\n\n通过set方式注入\n\n```xml\n<!-- 通过空的构造方法创建类，然后通过set方法的方式注入-->\n<bean id=\"add\" class=\"com.manager.pojo.Address\">\n    <!--set注入 -->\n      <property name=\"address\" value=\"北京\"/>\n\t<!--构造方法注入-->\n    <constructor-arg index=\"0\" value=\"太原\"/>\n\n</bean>\n```\n\n##### 复杂类型的注入\n\n```xml\n  <bean id=\"s1\" class=\"com.manager.pojo.Student\">\n<!--        普通类型-->\n        <property name=\"id\" value=\"01\"/>\n<!--        对于引用类型-->\n        <property name=\"address\" ref=\"add\"/>\n        <property name=\"name\" value=\"李沧海\"/>\n<!--        list-->\n        <property name=\"hobby\">\n            <list>\n                <value>看书</value>\n            </list>\n        </property>\n<!--map-->\n        <property name=\"book\">\n            <map>\n                <entry value=\"且听风吟\" key=\"村上春树\"/>\n            </map>\n        </property>\n<!--数组-->\n        <property name=\"score\">\n            <array>\n                <value>12</value>\n            </array>\n        </property>\n     <!--空值--> \n<property name=\"email\" value=\"\"/>\n       <null/>\n    </bean>\n```\n\np name space 以使用另外的set注入标签\n\n```xml\nxmlns:p=\"http://www.springframework.org/schema/p\"\n<!-- 普通的set注入-->\n<bean name=\"classic\" class=\"com.example.ExampleBean\">\n        <property name=\"email\" value=\"someone@somewhere.com\"/>\n    </bean>\n<!-- p- name space set注入-->\n    <bean name=\"p-namespace\" class=\"com.example.ExampleBean\"\n        p:email=\"someone@somewhere.com\"/>\n```\n\nc name space \n\n```xml\n```\n\n#### scope 作用域\n\n```xml\n<!--\n    scope 作用域\n    Singletons 单例模式 从容器中得到的对象是同一个对象\n    prototype  原型模式 从容器中得到的对象是不同的对象\n-->\n\n@Scope(\"prototype\")\n<bean id=\"s1\" class=\"com.manager.pojo.Student\" scope=\"prototype\">\n```\n\n#### 自动装箱\n\n- 使用@Autowired关键字 spring会自动注入依赖类型\n\n![image-20220515194628908](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220515194628908.png)\n\n```xml\n<!--    这是手动装箱-->\n    <bean id=\"people\" class=\"com.manager.pojo.People\">\n        <property name=\"name\" value=\"风吹麦浪\"/>\n        <property name=\"cat\" ref=\"cat\"/>\n        <property name=\"dog\" ref=\"dog\"/>\n    </bean>\n<!--    自动装箱-->\n    <bean id=\"people\" class=\"com.manager.pojo.People\" autowire=\"byName\">\n        <property name=\"name\" value=\"风吹麦浪\"/>\n    </bean>\n```\n\n- 通过id名称匹配，通过类型匹配\n\n```xml\nautowire=\"byName\"\nautowire=\"byType\"\n```\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:context=\"http://www.springframework.org/schema/context\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n        https://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context\n        https://www.springframework.org/schema/context/spring-context.xsd\">\n\n    <context:annotation-config/>\n\n</beans>\n```\n\n可以为属性为没有配置的bean为null\n\n```java\n@Autowired(required = false)\n\n@Autowired\npublic void setMovieFinder(@Nullable MovieFinder movieFinder) {\n        ...\n}\n```\n\n##### @Qualifier(value = \"dog12\")\n\n##### 配合@autowired实现按名称匹配\n\n```xml\n<bean id=\"dog2\" class=\"com.manager.pojo.Dog\">\n        <qualifier value=\"12\"/>\n</bean>\n<bean id=\"people\" class=\"com.manager.pojo.People\" autowire=\"byName\">\n    <!-- a-->\n    <property name=\"name\" value=\"风吹麦浪\"/>\n</bean>\n```\n\n### 使用java配置工具类进行配置\n\n创建配置工具类Myconfig使用@Configuration注解标记工具类\n\n```java\n@Configuration\n@Import(MyConfig2.class)  //导入合并其他配置类，类似于配置文件中的 inculde 标签\npublic class MyUtils1 {\n\n    @Bean\n    public User user(){\n        return new User();\n    }\n\n}\n```\n\n```java\nApplicationContext context = new AnnotationConfigApplicationContext(MyUtils1.class);\nUser user = context.getBean(\"user\", User.class);\nSystem.out.println(user.name);\n```\n\n### spring整合mybatis\n\n1. ##### 之前的mybatis使用\n\n   maven导入mybatis依赖\n\n   创建mybatis的xml配置\n\n   idea连接mysql\n\n   创建实体类\n\n   写操作数据库持久层接口,写接口同名的映射xml文件,在xml文件中写sql\n\n   将xml文件在mybatis中注册绑定\n\n   写mybatis工具类,通过SqlSessionFactoryBuilder().build(inputStream);创建sessionFastory工厂,通过工厂便可以生产sqlsession\n\n   ```java\n   SqlSessionFactory sqlSessionFactory;\n   String url=\"mybatis-config.xml\";\n   InputStream inputStream = Resources.getResourceAsStream(url);\n   sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n   ```\n\n   sqlsession便可以通过getMapper(AccountMapper.class)方法得到mapper去执行sql\n\n   2. #### 整合后创建使用mybatis\n\n      一种通过spring配置文件创建mybatis的方法\n\n      导入spring-mybatis的依赖\n\n      在bean上下文中配置mybatis的bean\n\n      1. 这是数据源,即数据库的基本信息,驱动密码\n\n      ```xml\n        <!--配置数据源：数据源有非常多，可以使用第三方的，也可使使用Spring的-->\n          <bean id=\"dataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n              <property name=\"driverClassName\" value=\"com.mysql.cj.jdbc.Driver\"/>\n              <property name=\"url\" value=\"jdbc:mysql://localhost:3306/shop?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8\"/>\n              <property name=\"username\" value=\"root\"/>\n              <property name=\"password\" value=\"123\"/>\n          </bean>\n      ```\n\n      2. 这是sqlsessionfactorybean类似mybatis中的sqlsessionfactory用来创建sqlsession,它的参数分别是数据源,mybatis的配置,mapper文件\n\n      ```xml\n      <!--配置SqlSessionFactory-->\n      <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n          <property name=\"dataSource\" ref=\"dataSource\"/>\n          <!--关联Mybatis-->\n          <property name=\"configLocation\" value=\"classpath:mybatis-config.xml\"/>\n          <property name=\"mapperLocations\" value=\"classpath*:com/manager/**/*.xml\" />\n      </bean>\n      ```\n\n   3. 使用线程安全的SqlSessionTemplate的类创建session,他的构建器需要sqlsessionfactory来创建\n\n      ```xml\n      <!--注册sqlSessionTemplate , 关联sqlSessionFactory-->\n      <bean id=\"sqlSession\" class=\"org.mybatis.spring.SqlSessionTemplate\">\n          <!--利用构造器注入-->\n          <constructor-arg index=\"0\" ref=\"sqlSessionFactory\"/>\n      </bean>\n      ```\n\n这样通过spring就把mybatis配置写好了,接下来需要实体类,需要dao接口,接口映射xml文件和接口实现类,在接口实现类中绑定一个sqlsession来调用接口方法实现,通过容器创建\n\n```xml\n   <bean id=\"accountDao\" class=\"com.manager.dao.AccountMapperImpl\">\n        <property name=\"sqlSession\" ref=\"sqlSession\"/>\n    </bean>\n```\n\n","source":"_posts/学习笔记/ssm框架/spring.md","raw":"---\ntitle: spring\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# spring框架\n\n### 概述\n\nSpring的英文翻译为春天，可以说是给Java程序员带来了春天，因为它极大的简化了开发。我得出一个公式：Spring = 春天 = Java程序员的春天 = 简化开发。最后的简化开发正是Spring框架带来的最大好处。\n\nSpring是一个开放源代码的设计层面框架，它是于2003 年兴起的一个轻量级的Java 开发框架。由Rod Johnson创建，其前身为Interface21框架，后改为了Spring并且正式发布。\n\n### 核心\n\nSpring 的理念：不去重新发明轮子。其核心是控制反转（IOC）和面向切面（AOP）\n\n### spring配置文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n    \n</beans>\n```\n\n通过set方式注入\n\n```xml\n<!-- 通过空的构造方法创建类，然后通过set方法的方式注入-->\n<bean id=\"add\" class=\"com.manager.pojo.Address\">\n    <!--set注入 -->\n      <property name=\"address\" value=\"北京\"/>\n\t<!--构造方法注入-->\n    <constructor-arg index=\"0\" value=\"太原\"/>\n\n</bean>\n```\n\n##### 复杂类型的注入\n\n```xml\n  <bean id=\"s1\" class=\"com.manager.pojo.Student\">\n<!--        普通类型-->\n        <property name=\"id\" value=\"01\"/>\n<!--        对于引用类型-->\n        <property name=\"address\" ref=\"add\"/>\n        <property name=\"name\" value=\"李沧海\"/>\n<!--        list-->\n        <property name=\"hobby\">\n            <list>\n                <value>看书</value>\n            </list>\n        </property>\n<!--map-->\n        <property name=\"book\">\n            <map>\n                <entry value=\"且听风吟\" key=\"村上春树\"/>\n            </map>\n        </property>\n<!--数组-->\n        <property name=\"score\">\n            <array>\n                <value>12</value>\n            </array>\n        </property>\n     <!--空值--> \n<property name=\"email\" value=\"\"/>\n       <null/>\n    </bean>\n```\n\np name space 以使用另外的set注入标签\n\n```xml\nxmlns:p=\"http://www.springframework.org/schema/p\"\n<!-- 普通的set注入-->\n<bean name=\"classic\" class=\"com.example.ExampleBean\">\n        <property name=\"email\" value=\"someone@somewhere.com\"/>\n    </bean>\n<!-- p- name space set注入-->\n    <bean name=\"p-namespace\" class=\"com.example.ExampleBean\"\n        p:email=\"someone@somewhere.com\"/>\n```\n\nc name space \n\n```xml\n```\n\n#### scope 作用域\n\n```xml\n<!--\n    scope 作用域\n    Singletons 单例模式 从容器中得到的对象是同一个对象\n    prototype  原型模式 从容器中得到的对象是不同的对象\n-->\n\n@Scope(\"prototype\")\n<bean id=\"s1\" class=\"com.manager.pojo.Student\" scope=\"prototype\">\n```\n\n#### 自动装箱\n\n- 使用@Autowired关键字 spring会自动注入依赖类型\n\n![image-20220515194628908](C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220515194628908.png)\n\n```xml\n<!--    这是手动装箱-->\n    <bean id=\"people\" class=\"com.manager.pojo.People\">\n        <property name=\"name\" value=\"风吹麦浪\"/>\n        <property name=\"cat\" ref=\"cat\"/>\n        <property name=\"dog\" ref=\"dog\"/>\n    </bean>\n<!--    自动装箱-->\n    <bean id=\"people\" class=\"com.manager.pojo.People\" autowire=\"byName\">\n        <property name=\"name\" value=\"风吹麦浪\"/>\n    </bean>\n```\n\n- 通过id名称匹配，通过类型匹配\n\n```xml\nautowire=\"byName\"\nautowire=\"byType\"\n```\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:context=\"http://www.springframework.org/schema/context\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n        https://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context\n        https://www.springframework.org/schema/context/spring-context.xsd\">\n\n    <context:annotation-config/>\n\n</beans>\n```\n\n可以为属性为没有配置的bean为null\n\n```java\n@Autowired(required = false)\n\n@Autowired\npublic void setMovieFinder(@Nullable MovieFinder movieFinder) {\n        ...\n}\n```\n\n##### @Qualifier(value = \"dog12\")\n\n##### 配合@autowired实现按名称匹配\n\n```xml\n<bean id=\"dog2\" class=\"com.manager.pojo.Dog\">\n        <qualifier value=\"12\"/>\n</bean>\n<bean id=\"people\" class=\"com.manager.pojo.People\" autowire=\"byName\">\n    <!-- a-->\n    <property name=\"name\" value=\"风吹麦浪\"/>\n</bean>\n```\n\n### 使用java配置工具类进行配置\n\n创建配置工具类Myconfig使用@Configuration注解标记工具类\n\n```java\n@Configuration\n@Import(MyConfig2.class)  //导入合并其他配置类，类似于配置文件中的 inculde 标签\npublic class MyUtils1 {\n\n    @Bean\n    public User user(){\n        return new User();\n    }\n\n}\n```\n\n```java\nApplicationContext context = new AnnotationConfigApplicationContext(MyUtils1.class);\nUser user = context.getBean(\"user\", User.class);\nSystem.out.println(user.name);\n```\n\n### spring整合mybatis\n\n1. ##### 之前的mybatis使用\n\n   maven导入mybatis依赖\n\n   创建mybatis的xml配置\n\n   idea连接mysql\n\n   创建实体类\n\n   写操作数据库持久层接口,写接口同名的映射xml文件,在xml文件中写sql\n\n   将xml文件在mybatis中注册绑定\n\n   写mybatis工具类,通过SqlSessionFactoryBuilder().build(inputStream);创建sessionFastory工厂,通过工厂便可以生产sqlsession\n\n   ```java\n   SqlSessionFactory sqlSessionFactory;\n   String url=\"mybatis-config.xml\";\n   InputStream inputStream = Resources.getResourceAsStream(url);\n   sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n   ```\n\n   sqlsession便可以通过getMapper(AccountMapper.class)方法得到mapper去执行sql\n\n   2. #### 整合后创建使用mybatis\n\n      一种通过spring配置文件创建mybatis的方法\n\n      导入spring-mybatis的依赖\n\n      在bean上下文中配置mybatis的bean\n\n      1. 这是数据源,即数据库的基本信息,驱动密码\n\n      ```xml\n        <!--配置数据源：数据源有非常多，可以使用第三方的，也可使使用Spring的-->\n          <bean id=\"dataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n              <property name=\"driverClassName\" value=\"com.mysql.cj.jdbc.Driver\"/>\n              <property name=\"url\" value=\"jdbc:mysql://localhost:3306/shop?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8\"/>\n              <property name=\"username\" value=\"root\"/>\n              <property name=\"password\" value=\"123\"/>\n          </bean>\n      ```\n\n      2. 这是sqlsessionfactorybean类似mybatis中的sqlsessionfactory用来创建sqlsession,它的参数分别是数据源,mybatis的配置,mapper文件\n\n      ```xml\n      <!--配置SqlSessionFactory-->\n      <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n          <property name=\"dataSource\" ref=\"dataSource\"/>\n          <!--关联Mybatis-->\n          <property name=\"configLocation\" value=\"classpath:mybatis-config.xml\"/>\n          <property name=\"mapperLocations\" value=\"classpath*:com/manager/**/*.xml\" />\n      </bean>\n      ```\n\n   3. 使用线程安全的SqlSessionTemplate的类创建session,他的构建器需要sqlsessionfactory来创建\n\n      ```xml\n      <!--注册sqlSessionTemplate , 关联sqlSessionFactory-->\n      <bean id=\"sqlSession\" class=\"org.mybatis.spring.SqlSessionTemplate\">\n          <!--利用构造器注入-->\n          <constructor-arg index=\"0\" ref=\"sqlSessionFactory\"/>\n      </bean>\n      ```\n\n这样通过spring就把mybatis配置写好了,接下来需要实体类,需要dao接口,接口映射xml文件和接口实现类,在接口实现类中绑定一个sqlsession来调用接口方法实现,通过容器创建\n\n```xml\n   <bean id=\"accountDao\" class=\"com.manager.dao.AccountMapperImpl\">\n        <property name=\"sqlSession\" ref=\"sqlSession\"/>\n    </bean>\n```\n\n","slug":"学习笔记/ssm框架/spring","published":1,"updated":"2023-05-19T14:07:31.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oam000owwvnfzycdotm","content":"<h1 id=\"spring框架\"><a href=\"#spring框架\" class=\"headerlink\" title=\"spring框架\"></a>spring框架</h1><h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>Spring的英文翻译为春天，可以说是给Java程序员带来了春天，因为它极大的简化了开发。我得出一个公式：Spring &#x3D; 春天 &#x3D; Java程序员的春天 &#x3D; 简化开发。最后的简化开发正是Spring框架带来的最大好处。</p>\n<p>Spring是一个开放源代码的设计层面框架，它是于2003 年兴起的一个轻量级的Java 开发框架。由Rod Johnson创建，其前身为Interface21框架，后改为了Spring并且正式发布。</p>\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><p>Spring 的理念：不去重新发明轮子。其核心是控制反转（IOC）和面向切面（AOP）</p>\n<h3 id=\"spring配置文件\"><a href=\"#spring配置文件\" class=\"headerlink\" title=\"spring配置文件\"></a>spring配置文件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过set方式注入</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 通过空的构造方法创建类，然后通过set方法的方式注入--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;add&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.Address&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--set注入 --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;address&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;北京&quot;</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--构造方法注入--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;太原&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"复杂类型的注入\"><a href=\"#复杂类型的注入\" class=\"headerlink\" title=\"复杂类型的注入\"></a>复杂类型的注入</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;s1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.Student&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        普通类型--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;01&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        对于引用类型--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;address&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;add&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;李沧海&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        list--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;hobby&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>看书<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--map--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;book&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;且听风吟&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;村上春树&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--数组--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;score&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>12<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--空值--&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">null</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>p name space 以使用另外的set注入标签</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 普通的set注入--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;classic&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.example.ExampleBean&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;someone@somewhere.com&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- p- name space set注入--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;p-namespace&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.example.ExampleBean&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">p:email</span>=<span class=\"string\">&quot;someone@somewhere.com&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>c name space </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"></span><br><span class=\"line\">#### scope 作用域</span><br><span class=\"line\"></span><br><span class=\"line\">```xml</span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    scope 作用域</span></span><br><span class=\"line\"><span class=\"comment\">    Singletons 单例模式 从容器中得到的对象是同一个对象</span></span><br><span class=\"line\"><span class=\"comment\">    prototype  原型模式 从容器中得到的对象是不同的对象</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">@Scope(&quot;prototype&quot;)</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;s1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.Student&quot;</span> <span class=\"attr\">scope</span>=<span class=\"string\">&quot;prototype&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"自动装箱\"><a href=\"#自动装箱\" class=\"headerlink\" title=\"自动装箱\"></a>自动装箱</h4><ul>\n<li>使用@Autowired关键字 spring会自动注入依赖类型</li>\n</ul>\n<p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220515194628908.png\" alt=\"image-20220515194628908\"></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--    这是手动装箱--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;people&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.People&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;风吹麦浪&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;cat&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;cat&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dog&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dog&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    自动装箱--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;people&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.People&quot;</span> <span class=\"attr\">autowire</span>=<span class=\"string\">&quot;byName&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;风吹麦浪&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>通过id名称匹配，通过类型匹配</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">autowire=&quot;byName&quot;</span><br><span class=\"line\">autowire=&quot;byType&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">        http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:annotation-config</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以为属性为没有配置的bean为null</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired(required = false)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMovieFinder</span><span class=\"params\">(<span class=\"meta\">@Nullable</span> MovieFinder movieFinder)</span> &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Qualifier-value-x3D-“dog12”\"><a href=\"#Qualifier-value-x3D-“dog12”\" class=\"headerlink\" title=\"@Qualifier(value &#x3D; “dog12”)\"></a>@Qualifier(value &#x3D; “dog12”)</h5><h5 id=\"配合-autowired实现按名称匹配\"><a href=\"#配合-autowired实现按名称匹配\" class=\"headerlink\" title=\"配合@autowired实现按名称匹配\"></a>配合@autowired实现按名称匹配</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dog2&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.Dog&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">qualifier</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;12&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;people&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.People&quot;</span> <span class=\"attr\">autowire</span>=<span class=\"string\">&quot;byName&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- a--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;风吹麦浪&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用java配置工具类进行配置\"><a href=\"#使用java配置工具类进行配置\" class=\"headerlink\" title=\"使用java配置工具类进行配置\"></a>使用java配置工具类进行配置</h3><p>创建配置工具类Myconfig使用@Configuration注解标记工具类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@Import(MyConfig2.class)</span>  <span class=\"comment\">//导入合并其他配置类，类似于配置文件中的 inculde 标签</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyUtils1</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> User <span class=\"title function_\">user</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ApplicationContext</span> <span class=\"variable\">context</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AnnotationConfigApplicationContext</span>(MyUtils1.class);</span><br><span class=\"line\"><span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> context.getBean(<span class=\"string\">&quot;user&quot;</span>, User.class);</span><br><span class=\"line\">System.out.println(user.name);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"spring整合mybatis\"><a href=\"#spring整合mybatis\" class=\"headerlink\" title=\"spring整合mybatis\"></a>spring整合mybatis</h3><ol>\n<li><h5 id=\"之前的mybatis使用\"><a href=\"#之前的mybatis使用\" class=\"headerlink\" title=\"之前的mybatis使用\"></a>之前的mybatis使用</h5><p>maven导入mybatis依赖</p>\n<p>创建mybatis的xml配置</p>\n<p>idea连接mysql</p>\n<p>创建实体类</p>\n<p>写操作数据库持久层接口,写接口同名的映射xml文件,在xml文件中写sql</p>\n<p>将xml文件在mybatis中注册绑定</p>\n<p>写mybatis工具类,通过SqlSessionFactoryBuilder().build(inputStream);创建sessionFastory工厂,通过工厂便可以生产sqlsession</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SqlSessionFactory sqlSessionFactory;</span><br><span class=\"line\">String url=<span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(url);</span><br><span class=\"line\">sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br></pre></td></tr></table></figure>\n\n<p>sqlsession便可以通过getMapper(AccountMapper.class)方法得到mapper去执行sql</p>\n<ol start=\"2\">\n<li><h4 id=\"整合后创建使用mybatis\"><a href=\"#整合后创建使用mybatis\" class=\"headerlink\" title=\"整合后创建使用mybatis\"></a>整合后创建使用mybatis</h4><p>一种通过spring配置文件创建mybatis的方法</p>\n<p>导入spring-mybatis的依赖</p>\n<p>在bean上下文中配置mybatis的bean</p>\n<ol>\n<li>这是数据源,即数据库的基本信息,驱动密码</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--配置数据源：数据源有非常多，可以使用第三方的，也可使使用Spring的--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/shop?useSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=utf8&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>这是sqlsessionfactorybean类似mybatis中的sqlsessionfactory用来创建sqlsession,它的参数分别是数据源,mybatis的配置,mapper文件</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--配置SqlSessionFactory--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--关联Mybatis--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;configLocation&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;mapperLocations&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;classpath*:com/manager/**/*.xml&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用线程安全的SqlSessionTemplate的类创建session,他的构建器需要sqlsessionfactory来创建</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--注册sqlSessionTemplate , 关联sqlSessionFactory--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sqlSession&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--利用构造器注入--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<p>这样通过spring就把mybatis配置写好了,接下来需要实体类,需要dao接口,接口映射xml文件和接口实现类,在接口实现类中绑定一个sqlsession来调用接口方法实现,通过容器创建</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;accountDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.dao.AccountMapperImpl&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sqlSession&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;sqlSession&quot;</span>/&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"spring框架\"><a href=\"#spring框架\" class=\"headerlink\" title=\"spring框架\"></a>spring框架</h1><h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>Spring的英文翻译为春天，可以说是给Java程序员带来了春天，因为它极大的简化了开发。我得出一个公式：Spring &#x3D; 春天 &#x3D; Java程序员的春天 &#x3D; 简化开发。最后的简化开发正是Spring框架带来的最大好处。</p>\n<p>Spring是一个开放源代码的设计层面框架，它是于2003 年兴起的一个轻量级的Java 开发框架。由Rod Johnson创建，其前身为Interface21框架，后改为了Spring并且正式发布。</p>\n<h3 id=\"核心\"><a href=\"#核心\" class=\"headerlink\" title=\"核心\"></a>核心</h3><p>Spring 的理念：不去重新发明轮子。其核心是控制反转（IOC）和面向切面（AOP）</p>\n<h3 id=\"spring配置文件\"><a href=\"#spring配置文件\" class=\"headerlink\" title=\"spring配置文件\"></a>spring配置文件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过set方式注入</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 通过空的构造方法创建类，然后通过set方法的方式注入--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;add&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.Address&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--set注入 --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;address&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;北京&quot;</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--构造方法注入--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;太原&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"复杂类型的注入\"><a href=\"#复杂类型的注入\" class=\"headerlink\" title=\"复杂类型的注入\"></a>复杂类型的注入</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;s1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.Student&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        普通类型--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;01&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        对于引用类型--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;address&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;add&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;李沧海&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        list--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;hobby&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>看书<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--map--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;book&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;且听风吟&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;村上春树&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--数组--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;score&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>12<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--空值--&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">null</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>p name space 以使用另外的set注入标签</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 普通的set注入--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;classic&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.example.ExampleBean&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;someone@somewhere.com&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- p- name space set注入--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;p-namespace&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.example.ExampleBean&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">p:email</span>=<span class=\"string\">&quot;someone@somewhere.com&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>c name space </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"></span><br><span class=\"line\">#### scope 作用域</span><br><span class=\"line\"></span><br><span class=\"line\">```xml</span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    scope 作用域</span></span><br><span class=\"line\"><span class=\"comment\">    Singletons 单例模式 从容器中得到的对象是同一个对象</span></span><br><span class=\"line\"><span class=\"comment\">    prototype  原型模式 从容器中得到的对象是不同的对象</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">@Scope(&quot;prototype&quot;)</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;s1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.Student&quot;</span> <span class=\"attr\">scope</span>=<span class=\"string\">&quot;prototype&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"自动装箱\"><a href=\"#自动装箱\" class=\"headerlink\" title=\"自动装箱\"></a>自动装箱</h4><ul>\n<li>使用@Autowired关键字 spring会自动注入依赖类型</li>\n</ul>\n<p><img src=\"C:\\Users\\wrw\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220515194628908.png\" alt=\"image-20220515194628908\"></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--    这是手动装箱--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;people&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.People&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;风吹麦浪&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;cat&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;cat&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dog&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dog&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    自动装箱--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;people&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.People&quot;</span> <span class=\"attr\">autowire</span>=<span class=\"string\">&quot;byName&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;风吹麦浪&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>通过id名称匹配，通过类型匹配</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">autowire=&quot;byName&quot;</span><br><span class=\"line\">autowire=&quot;byType&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">        http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:annotation-config</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以为属性为没有配置的bean为null</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired(required = false)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMovieFinder</span><span class=\"params\">(<span class=\"meta\">@Nullable</span> MovieFinder movieFinder)</span> &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Qualifier-value-x3D-“dog12”\"><a href=\"#Qualifier-value-x3D-“dog12”\" class=\"headerlink\" title=\"@Qualifier(value &#x3D; “dog12”)\"></a>@Qualifier(value &#x3D; “dog12”)</h5><h5 id=\"配合-autowired实现按名称匹配\"><a href=\"#配合-autowired实现按名称匹配\" class=\"headerlink\" title=\"配合@autowired实现按名称匹配\"></a>配合@autowired实现按名称匹配</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dog2&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.Dog&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">qualifier</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;12&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;people&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.pojo.People&quot;</span> <span class=\"attr\">autowire</span>=<span class=\"string\">&quot;byName&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- a--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;风吹麦浪&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用java配置工具类进行配置\"><a href=\"#使用java配置工具类进行配置\" class=\"headerlink\" title=\"使用java配置工具类进行配置\"></a>使用java配置工具类进行配置</h3><p>创建配置工具类Myconfig使用@Configuration注解标记工具类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@Import(MyConfig2.class)</span>  <span class=\"comment\">//导入合并其他配置类，类似于配置文件中的 inculde 标签</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyUtils1</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> User <span class=\"title function_\">user</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ApplicationContext</span> <span class=\"variable\">context</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AnnotationConfigApplicationContext</span>(MyUtils1.class);</span><br><span class=\"line\"><span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> context.getBean(<span class=\"string\">&quot;user&quot;</span>, User.class);</span><br><span class=\"line\">System.out.println(user.name);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"spring整合mybatis\"><a href=\"#spring整合mybatis\" class=\"headerlink\" title=\"spring整合mybatis\"></a>spring整合mybatis</h3><ol>\n<li><h5 id=\"之前的mybatis使用\"><a href=\"#之前的mybatis使用\" class=\"headerlink\" title=\"之前的mybatis使用\"></a>之前的mybatis使用</h5><p>maven导入mybatis依赖</p>\n<p>创建mybatis的xml配置</p>\n<p>idea连接mysql</p>\n<p>创建实体类</p>\n<p>写操作数据库持久层接口,写接口同名的映射xml文件,在xml文件中写sql</p>\n<p>将xml文件在mybatis中注册绑定</p>\n<p>写mybatis工具类,通过SqlSessionFactoryBuilder().build(inputStream);创建sessionFastory工厂,通过工厂便可以生产sqlsession</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SqlSessionFactory sqlSessionFactory;</span><br><span class=\"line\">String url=<span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(url);</span><br><span class=\"line\">sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br></pre></td></tr></table></figure>\n\n<p>sqlsession便可以通过getMapper(AccountMapper.class)方法得到mapper去执行sql</p>\n<ol start=\"2\">\n<li><h4 id=\"整合后创建使用mybatis\"><a href=\"#整合后创建使用mybatis\" class=\"headerlink\" title=\"整合后创建使用mybatis\"></a>整合后创建使用mybatis</h4><p>一种通过spring配置文件创建mybatis的方法</p>\n<p>导入spring-mybatis的依赖</p>\n<p>在bean上下文中配置mybatis的bean</p>\n<ol>\n<li>这是数据源,即数据库的基本信息,驱动密码</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--配置数据源：数据源有非常多，可以使用第三方的，也可使使用Spring的--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/shop?useSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=utf8&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>这是sqlsessionfactorybean类似mybatis中的sqlsessionfactory用来创建sqlsession,它的参数分别是数据源,mybatis的配置,mapper文件</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--配置SqlSessionFactory--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--关联Mybatis--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;configLocation&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;mapperLocations&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;classpath*:com/manager/**/*.xml&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用线程安全的SqlSessionTemplate的类创建session,他的构建器需要sqlsessionfactory来创建</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--注册sqlSessionTemplate , 关联sqlSessionFactory--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sqlSession&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--利用构造器注入--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ol>\n<p>这样通过spring就把mybatis配置写好了,接下来需要实体类,需要dao接口,接口映射xml文件和接口实现类,在接口实现类中绑定一个sqlsession来调用接口方法实现,通过容器创建</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;accountDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.manager.dao.AccountMapperImpl&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;sqlSession&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;sqlSession&quot;</span>/&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"springBoot","date":"2023-05-05T13:30:42.000Z","_content":"","source":"_posts/学习笔记/web/springBoot.md","raw":"---\ntitle: springBoot\ndate: 2023-05-05 21:30:42\ntags:  \n---\n","slug":"学习笔记/web/springBoot","published":1,"updated":"2023-05-19T14:07:31.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oam000pwwvn45ff6pbx","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"powershell","date":"2023-05-05T13:30:42.000Z","_content":"## 永久添加别名\n\n```shell\nnotepad $profile.AllUsersAllHosts\n```\n添加文本\n```txt\nset-alias -name pn -value pnpm\n将pnmp 简写为 pn\n```\n","source":"_posts/学习笔记/win/powershell.md","raw":"---\ntitle: powershell\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 永久添加别名\n\n```shell\nnotepad $profile.AllUsersAllHosts\n```\n添加文本\n```txt\nset-alias -name pn -value pnpm\n将pnmp 简写为 pn\n```\n","slug":"学习笔记/win/powershell","published":1,"updated":"2023-05-19T14:07:31.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oan000qwwvndxkagy65","content":"<h2 id=\"永久添加别名\"><a href=\"#永久添加别名\" class=\"headerlink\" title=\"永久添加别名\"></a>永久添加别名</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notepad $profile.AllUsersAllHosts</span><br></pre></td></tr></table></figure>\n<p>添加文本</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-alias -name pn -value pnpm</span><br><span class=\"line\">将pnmp 简写为 pn</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"永久添加别名\"><a href=\"#永久添加别名\" class=\"headerlink\" title=\"永久添加别名\"></a>永久添加别名</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notepad $profile.AllUsersAllHosts</span><br></pre></td></tr></table></figure>\n<p>添加文本</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-alias -name pn -value pnpm</span><br><span class=\"line\">将pnmp 简写为 pn</span><br></pre></td></tr></table></figure>\n"},{"title":"计算机组成原理","date":"2023-05-05T13:30:42.000Z","_content":"# 计算机的硬件组成\n五大部件 输入设备，输出设备，存储器，运算器，控制器\n主机=（cpu=控制器+运算器）+ 主存\n计算机主要性能指标\n机器字长 数据通路宽度 主存容量 运算速度 \n# 数值的表示\n整数\n浮点数\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670639742503-e35fc398-6d2a-4822-a358-e978d4b26bf4.png#averageHue=%23f7f7f7&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5ec83e2a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=861&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65413&status=done&style=shadow&taskId=uef3daf7a-b47a-4342-bd9a-10088f50ad3&title=&width=635.8154032726407)\n**数据的表示范围 原码 补码**\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670639976554-7f79be83-3ff7-4a5a-9e8c-4a95dd81840c.png#averageHue=%23f7f7f7&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5282d5e4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=734&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52419&status=done&style=shadow&taskId=u1505ba14-fbf5-4d12-931f-690e75cc662&title=&width=542.0307851360258)\n\n# 指令系统\n## 3.1指令格式\n### 思维导图\n![[指令系统.jpg]]\n指令的基本格式是\n![](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1665565710375-3f93fbcd-5236-4903-ab53-d061da7e6b9c.jpeg)\n ![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640240207-8c50abf7-43a0-4e34-b085-d6fb1ad850c8.png#averageHue=%23f2f2f2&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=263&id=ud63cabb4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=356&originWidth=971&originalType=binary&ratio=1&rotation=0&showTitle=false&size=86487&status=done&style=shadow&taskId=u845e7e19-8f2a-48fc-a33d-23d5465e216&title=&width=717.0461748870314)\n编制方式：字节，字\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640768024-7f13b669-edc7-48a6-9f34-179ccd7a0f2a.png#averageHue=%23fafefd&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=168&id=u2a170f39&margin=%5Bobject%20Object%5D&name=image.png&originHeight=228&originWidth=790&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45653&status=done&style=shadow&taskId=uaf41fd05-3698-44ab-ada8-0d8762debfb&title=&width=583.384632503352)\n\n## IEEE754标准的浮点数\n| 类型 | 数符 | 阶码 | 尾数 | 总位数 | 偏置值 |\n| --- | --- | --- | --- | --- | --- |\n| 单精度浮点型 | 1 | 8 | 13 | 31 | 127 |\n| 双精度浮点型 | 1 | 11 | 52 | 64 | 1023 |\n| 临时浮点数 | 1 | 15 | 64 | 80 | 16383 |\n\n![Screenshot_20221027_203732.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1666874378699-8f66276f-f4a2-491f-a95e-8d6812d26106.png#averageHue=%23f7f7f7&clientId=u0885d815-63db-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u38b16a3f&margin=%5Bobject%20Object%5D&name=Screenshot_20221027_203732.png&originHeight=269&originWidth=743&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15675&status=done&style=shadow&taskId=ud21cc878-db16-460b-ae27-240e2ca7a1a&title=)\n将（100.25）转为短浮点数\n基本流程：\n1. 整数转换，除二取余\n2. 小数转换，乘二取整\n3. 结果组合\n4. 科学记数法\n5. 指数偏移\n6. 拼接组合\n##### 整数转换\n100/2=50余0\n50/2=25余0\n25/2=12余1\n12/2=6余0\n6/2=3余0\n3/2=1余1\n1\n100转换为（1100100）2\n##### 小数取整\n0.25*2=0.5取0\n0.5*2=1 取 1\n0.25转为 （0.01）2 \n##### 组合结果\n100.25=（1100100.01）2\n##### 科学计数法\n1100100.01=1.10010001*26\n##### 指数偏移\n偏移量127+6=133\n阶码=133=（10000101）2\n##### 拼接组合\n数符+阶码+尾数\n0  \t10000101  10010001\n尾数最高位默认隐含一个1\n尾数实际是（1.10010001）2\n#### 短浮点数到整数\n1 10000011 10010010000000000000000\n符号位 1 为负数\n阶码 10000011  = 131 减去偏移值 127 =4\n尾数1.1001001\n组合-1.1001001*24\n二进制-11001.001=25.125\n##### 阶码全零，全一的情况\n作为保留作他用，正常取值范围1～254即-126～127\n全零表示机器零\n全一时候 尾数为0表示正负无穷\n#### 数据的机器运算\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640926068-87d37634-ef59-4f39-9f70-9c6a7d3c29fd.png#averageHue=%23f6f6f6&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=298&id=uc99fea7b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=403&originWidth=830&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56491&status=done&style=shadow&taskId=ud596e95b-c1e0-448a-afe4-ec158ea3c17&title=&width=612.9230949085851)\n除法不需要\n\n# 存储系统和结构\n**重点**\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648055137-c662e2a1-8522-47bb-a28d-df60d7c516db.png#averageHue=%23eed7d4&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=380&id=uef16f568&margin=%5Bobject%20Object%5D&name=image.png&originHeight=515&originWidth=1080&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114418&status=done&style=shadow&taskId=uea4e5adc-8c0a-4517-be6a-b6bc524d872&title=&width=797.5384849412914)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648077488-bbeedf7f-34bc-4dfb-9b50-eabbbbe55ec9.png#averageHue=%23e6cfcd&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=466&id=u317ace61&margin=%5Bobject%20Object%5D&name=image.png&originHeight=631&originWidth=1149&originalType=binary&ratio=1&rotation=0&showTitle=false&size=168081&status=done&style=shadow&taskId=u4a382775-6ab1-486a-b39d-2a14a78bb72&title=&width=848.4923325903184)\n\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648088433-00c41f17-b8fa-4769-b31b-31a740cc93f4.png#averageHue=%23e5cecb&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=478&id=u46b95248&margin=%5Bobject%20Object%5D&name=image.png&originHeight=647&originWidth=1134&originalType=binary&ratio=1&rotation=0&showTitle=false&size=190845&status=done&style=shadow&taskId=u0694b531-6f1d-4cfd-8302-b0710aa1f9c&title=&width=837.415409188356)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648104764-e442ee94-d911-4764-a090-496c787ed8ca.png#averageHue=%23eed8d6&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=419&id=uca23510f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=567&originWidth=1112&originalType=binary&ratio=1&rotation=0&showTitle=false&size=110000&status=done&style=shadow&taskId=ub27c6bad-c942-49f9-adb1-6d49a0a34ac&title=&width=821.1692548654778)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648139089-c102a299-5edd-4bbb-9d0a-ff89670bec83.png#averageHue=%23f5f4f3&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=602&id=ue9f54940&margin=%5Bobject%20Object%5D&name=image.png&originHeight=815&originWidth=1439&originalType=binary&ratio=1&rotation=0&showTitle=false&size=122502&status=done&style=shadow&taskId=u4e1c3982-5628-4382-ae0d-49b33496235&title=&width=1062.6461850282576)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648197344-c8c568d5-d600-4ec4-8322-0eee42f737bc.png#averageHue=%23efeded&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=607&id=uc2361fe6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=822&originWidth=663&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119386&status=done&style=shadow&taskId=u246eb774-1a5a-4799-94a3-f1ec5fa1a9b&title=&width=489.6000143667372)\n编址方式 1. 字节编址 2. 字编址\n**字节编址**以字节数表示存储容量\n**字编址**以字的单元数*机器字长表示存储容量\n例子：64K*16 这个是字编址，64k个存储单元与机器字长16位\n转为字节编址为128K*8 这个8是8位，8位为一个字节，这就是字节编址\n##### 1.某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：\n（1）该机所允许的最大主存空间是多少？\n（2）若每个模块板为32K×8位，共需几个模块板？\n（3）每个模块板内共有几片RAM芯片？\n（4）共有多少片RAM？\n（5）CPU如何选择各模块板？\n218 =262144位=262144/8 b=32768b=\n1kb=1024b\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724588220-1d6b592a-646a-4cfb-b3e7-ec8aae91ed91.png#averageHue=%23eeeeee&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=270&id=ua1b2ad25&margin=%5Bobject%20Object%5D&name=image.png&originHeight=366&originWidth=668&originalType=binary&ratio=1&rotation=0&showTitle=true&size=61531&status=done&style=shadow&taskId=u28096fc4-39d8-4f64-bd51-22a7510162a&title=%E4%B8%BB%E5%AD%98%E7%9A%84%E6%9E%84%E6%88%90&width=493.2923221673913 \"主存的构成\")\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724600435-6d586353-5f8c-4882-9669-b45d56c5e4ec.png#averageHue=%23f7f7f7&clientId=u38b7a52e-dc1f-4&crop=0&crop=0.0759&crop=1&crop=0.7957&from=paste&height=343&id=u92a222ad&margin=%5Bobject%20Object%5D&name=image.png&originHeight=464&originWidth=440&originalType=binary&ratio=1&rotation=0&showTitle=true&size=45793&status=done&style=shadow&taskId=u0c867578-9eac-4b44-a29d-c834d1b4ecc&title=%E5%AD%98%E5%82%A8%E5%85%83&width=325 \"存储元\")\nmos管上接受到高电平，mos管就导通这时如果给这条线输入高电平，电容两侧就会产生电压，电容就会充电，这就相当于写入了一个二进制位。如果电容有电导通这条线，在这条线上就会读出二进制1，否者为0。这就是最小的存储单位，存储元。\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724595914-7a428815-1b7d-49c6-b6e3-1fbd233c885a.png#averageHue=%23f7f5f5&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=0.5409&from=paste&height=268&id=u874c96ca&margin=%5Bobject%20Object%5D&name=image.png&originHeight=363&originWidth=1183&originalType=binary&ratio=1&rotation=0&showTitle=true&size=104002&status=done&style=shadow&taskId=ua3128c8b-fd64-4a91-a4d4-fdd67f24993&title=%E5%AD%98%E5%82%A8%E5%8D%95%E5%85%83&width=874 \"存储单元\")\n这是一个存储单元，由多个存储元构成，期中红色的是自选线，绿色的是数据线，片选线导通就可以对数据进行读写，而具体的是读是写由数据线来控制。期中数据线有8条表示一次可以读取8个比特位，这就与机器字长有关系了。多个存储单元就构成存储体。\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724592572-e28044b5-8f73-4b4d-a79b-a752879a856a.png#averageHue=%23eeeeee&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=275&id=u8c458cf2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=372&originWidth=718&originalType=binary&ratio=1&rotation=0&showTitle=true&size=46286&status=done&style=shadow&taskId=u74244fed-77d6-4cff-972d-6db6c00ae83&title=%E5%AD%98%E5%82%A8%E4%BD%93&width=530.2154001739326 \"存储体\")\n选择哪个存储单元由地址寄存器来确定，而数据读取写入最后由数据寄存器来负责。\n![9eb83e6ec9d7c4dd0879275eac0d746.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670752287797-6581ffe8-7ea4-45da-8838-dd135bc2191f.png#averageHue=%23f0ecec&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=0.9574&from=drop&height=1080&id=u04fe5801&margin=%5Bobject%20Object%5D&name=9eb83e6ec9d7c4dd0879275eac0d746.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=818476&status=done&style=shadow&taskId=uef4440ad-dbd9-4540-a541-38171cb2de6&title=&width=1920)\n地址寄存器接收来自地址总线的地址，通过地址译码器选择指定的存储单元。\nMAR地址寄存器有n位，则能映射2n个存储单元，图中的机器存储大小可以表示为：\n23 * 8bit = 23 * 1B = 8 * 1B = 8B\n其中23为存储单元的大小，数量 8bit 为一个存储单元（存储字/机器字长）大小\n![13311c99-2ed4-410f-99f8-9d5eb53e1b44.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670753529349-4d7edd60-7a45-44d8-9d1a-7988d56a3135.png#averageHue=%23f0ecec&clientId=u38b7a52e-dc1f-4&crop=0.0211&crop=0.015&crop=0.9817&crop=0.9349&from=drop&height=1037&id=u420f19ec&margin=%5Bobject%20Object%5D&name=13311c99-2ed4-410f-99f8-9d5eb53e1b44.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=949557&status=done&style=shadow&taskId=uaf979647-db83-4f23-8e0e-0620a48792f&title=&width=1844)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670753832191-bf142f93-6c11-456a-a1ed-2c6965d3adaa.png#averageHue=%23ede1d9&clientId=u38b7a52e-dc1f-4&crop=0.0229&crop=0&crop=1&crop=1&from=paste&height=229&id=uf1c01d68&margin=%5Bobject%20Object%5D&name=image.png&originHeight=317&originWidth=711&originalType=binary&ratio=1&rotation=0&showTitle=false&size=141155&status=done&style=shadow&taskId=u82e49bf0-0c91-45a1-a588-615909e0c1a&title=&width=513)\n在译码器，MAR,MDR上都连接着控制电路，控制电路当电信号稳定后才可以进行下一步。\n控制电路的输入片选线低电平有效，只有片选线为低电平时候这个控制电路才有效，读写电路是控制是进行读操作还是写操作。读写控制线有两条线的有一条线的。\n![cc150a47e9d83db39e9c3029a8be807.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670754163624-59553be5-e961-4160-b1bb-77c5029891a8.png#averageHue=%23ede8e7&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u34cc0fab&margin=%5Bobject%20Object%5D&name=cc150a47e9d83db39e9c3029a8be807.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=true&size=1294833&status=done&style=shadow&taskId=u3ddd1ff5-42d4-4fa3-909c-b09301177db&title=%E5%86%85%E5%AD%98%E6%9D%A1%E5%8F%AF%E8%83%BD%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%86%E7%89%87%EF%BC%8C%E9%80%9A%E8%BF%87%E7%89%87%E9%80%89%E7%BA%BF%E6%9D%A5%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E7%9A%84%E9%82%A3%E4%B8%80%E6%9D%A1 \"内存条可能有多个分片，通过片选线来选择需要的那一条\")\n如果分析一个芯片至少多少个引脚：有vcc，GND，地址总线，数据总线的条数，控制电路的片选线，读写控制线。\n\n---\n\n**1. 已知某64位机主存采用半导体存储器，其地址码为26位，若使用256K×16位的DRAM芯片组成该机所允许的最大主存空间，并选用模块板结构形式。**（1） 每个模块板为1024K×64位，共需几个模块板？\n（2） 每个模块板内共有多少DRAM芯片?\n（3）主存共需多少DRAM芯片? CPU如何选择各模块板？\n地址码26位，64位的机器，机器字长64\n机器内存容量：226*64bit = 4GB\n1024K=1024*1024=210*210\n每个模块板主存容量：1024K×64bit=220*64bit\n芯片：256K×16=218×16bit\n\n1. 226*64bit/220*64bit=226-20 =26=**64 **\n2. 220*64bit/218×16bit=24=**16**\n3. 主存共需DRAM芯片为：16×64=1024 (片)\n\n每个模块板有16片DRAM芯片，构成容量为1024K×64位，需20根地址线(A19~A0)完成模块板内存储单元寻址。一共有64块模块板，采用6根高位地址线(A25~A20)，通过6：64译码器译码产生片选信号对各模块板进行选择。\n位扩展 4片256K×16—>256K×64\n字扩展：4组（256K×64）à1024K×64位\n\n## 主存储器的性能指标\n![思维导图.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670913171682-5aaf666e-9379-4b7a-9b65-ae61ce736de3.png#averageHue=%230c0b08&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u04ae261e&margin=%5Bobject%20Object%5D&name=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png&originHeight=828&originWidth=1770&originalType=binary&ratio=1&rotation=0&showTitle=true&size=197607&status=done&style=shadow&taskId=ub7d1e487-ebf5-4326-8ab6-db7f8c1270d&title=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE \"思维导图\")\n## 半导体随机存储器（RAM）\n### DRAM与SRAM的对比\n![d4887fa7b61908e871f04ae0c858bc8.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670839412544-cd9324c0-16f2-4d7e-bda2-337f9a642a7f.png#averageHue=%23ede1de&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ud1a7658b&margin=%5Bobject%20Object%5D&name=d4887fa7b61908e871f04ae0c858bc8.png&originHeight=625&originWidth=1148&originalType=binary&ratio=1&rotation=0&showTitle=true&size=366739&status=done&style=shadow&taskId=ua2728dec-bb48-4b96-991d-0acb7c57b3d&title=sram%E4%B8%8Edram%E7%9A%84%E5%AF%B9%E6%AF%94 \"sram与dram的对比\")\nsram采用双稳态可以非破坏性读写，而dram是破坏性读写，需要恢复状态，而且电容里的电会在2ms后消失，所以存储器需要定时刷新。对于上面说的译码器连接出来的片选线，如果一个单元一条线会浪费资源，对于220也就是1M大小的存储单元需要220条线去选择，而如果分成行列式，只需要行，列各自1024条就好，一个存储单元由一个行一个列来选择，大大降低了布线的要求。\n#### 动态RAM的刷新\n![a5b5be8a8338b5e74a6075b76a78bdb.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840378913-744327ce-825b-4d5f-8943-1517ee8609e5.png#averageHue=%23ececeb&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ub48d0ea6&margin=%5Bobject%20Object%5D&name=a5b5be8a8338b5e74a6075b76a78bdb.png&originHeight=614&originWidth=1095&originalType=binary&ratio=1&rotation=0&showTitle=false&size=306704&status=done&style=shadow&taskId=ua9d0ec4c-0f6e-4f14-b75a-51698622313&title=)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840467938-be1ace3c-862c-413f-b992-0f4fbbd4849b.png#averageHue=%23edeceb&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=520&id=u30ab716c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=704&originWidth=1267&originalType=binary&ratio=1&rotation=0&showTitle=true&size=596658&status=done&style=shadow&taskId=u6f29b4a9-211a-4c37-a2f2-a4aea771548&title=%E5%88%B7%E6%96%B0&width=935.6307966857557 \"刷新\")\n### RAM芯片分析\n#### 地址译码方式\n##### 单译码\n即自选法，上面提到的单地址线的译码方式\n![4ecf380ad1d951af9d26ba88c922891.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914114481-5eec7eb5-5762-4fc7-8b45-bf5e573e0405.jpeg#averageHue=%23efefef&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=311&id=u6fa9b211&margin=%5Bobject%20Object%5D&name=4ecf380ad1d951af9d26ba88c922891.jpg&originHeight=1544&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=364086&status=done&style=shadow&taskId=ude42b972-f046-4344-bb99-2d90a1c3be5&title=&width=257.73077392578125)\n##### 双译码\n![1e20befd85b6f6a5d2cd390a89502a2.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914151696-39e2a5d3-161e-49c7-9d67-5919555ad2cd.jpeg#averageHue=%23f1f1f1&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=286&id=ua08620d5&margin=%5Bobject%20Object%5D&name=1e20befd85b6f6a5d2cd390a89502a2.jpg&originHeight=1280&originWidth=1850&originalType=binary&ratio=1&rotation=0&showTitle=false&size=361865&status=done&style=shadow&taskId=u4b23a76c-3395-40d2-9237-6a1a768120f&title=&width=412.73077392578125)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840521436-38a8af09-2eb8-4dd0-a2e4-893d0c3b306d.png#averageHue=%23f2f0f0&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=480&id=u763c8755&margin=%5Bobject%20Object%5D&name=image.png&originHeight=650&originWidth=1247&originalType=binary&ratio=1&rotation=0&showTitle=true&size=286550&status=done&style=shadow&taskId=u819c7f1d-d073-40f5-983a-0caa407750f&title=%E5%9C%B0%E5%9D%80%E7%BA%BF%E5%A4%8D%E7%94%A8%E6%8A%80%E6%9C%AF&width=920.8615654831392 \"地址线复用技术\")\n地址线复用技术，分两次传输地址码，先传行地址码，后传列地址码。\n![356562e2de3964179013a6574b194f5.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914212480-0a7406dd-dcf5-4af4-a911-39bf0d2d445c.jpeg#averageHue=%23e1e1e1&clientId=u4b755130-ef81-4&crop=0.0136&crop=0.7361&crop=0.9747&crop=0.9307&from=drop&height=1230&id=u98a4c741&margin=%5Bobject%20Object%5D&name=356562e2de3964179013a6574b194f5.jpg&originHeight=1280&originWidth=1902&originalType=binary&ratio=1&rotation=0&showTitle=true&size=793405&status=done&style=shadow&taskId=uebd8701f-477e-4716-bc14-4a2c1404141&title=%E4%B8%A4%E7%A7%8D%E8%AF%91%E7%A0%81%E6%96%B9%E5%BC%8F%E7%9A%84%E6%AF%94%E8%BE%83&width=1828 \"两种译码方式的比较\")\n\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840641563-63b06a25-f098-4957-9c9a-d87ae85e62ea.png#averageHue=%23ebe1de&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=521&id=u741162ea&margin=%5Bobject%20Object%5D&name=image.png&originHeight=706&originWidth=1252&originalType=binary&ratio=1&rotation=0&showTitle=false&size=516936&status=done&style=shadow&taskId=ucd6a1602-afb8-4324-9aa1-04fe7e537d4&title=&width=924.5538732837933)\n\n## 主存储器的连接与控制\n存储芯片容量有限，主存储器由若干个芯片构成。而且连接起来的芯片需要与cpu连接，才能在CPU的控制下进行读写操作。\n![cc36b50df0939ea7602313128573519.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896866825-78298a8f-a859-48f0-ba3f-7c796148f900.png#averageHue=%23f6f7f4&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=467&id=uee402f01&margin=%5Bobject%20Object%5D&name=cc36b50df0939ea7602313128573519.png&originHeight=633&originWidth=1103&originalType=binary&ratio=1&rotation=0&showTitle=true&size=141368&status=done&style=shadow&taskId=u8bd6049f-060f-406e-b09d-d64814f5852&title=cpu%E4%B8%8E%E5%AD%98%E5%82%A8%E5%99%A8%E8%BF%9E%E6%8E%A5%E7%BB%93%E6%9E%84&width=814.5231008243004 \"cpu与存储器连接结构\")\n### 主存容量的拓展\n总片数=总容量/容量(每片)\n拓展方法有字拓展，位拓展，字位同时拓展\n#### 位拓展\n只在位的方向上拓展也就是，将各存储器的片选线，地址线，读写线连接起来，然后数据线单独列出来。\n![8721bc7419f59135d89e0b964394213.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897024158-722dd24e-ed5b-4eee-be96-b7f5a115891b.png#averageHue=%23f2f1f1&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u81c50178&margin=%5Bobject%20Object%5D&name=8721bc7419f59135d89e0b964394213.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=510593&status=done&style=shadow&taskId=u22a55c6a-73ad-4da4-9777-9af86742dec&title=&width=1417.8461954511847)\n\n![8557344cdab1216f84e34a268a7309e.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897072848-5fa54c5c-1d86-4040-b431-3bec6c339581.png#averageHue=%23f0f0e4&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub2a5303f&margin=%5Bobject%20Object%5D&name=8557344cdab1216f84e34a268a7309e.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=568132&status=done&style=shadow&taskId=u6b5c71c5-344a-4b72-8c0c-79a1c3671b0&title=&width=1417.8461954511847)\n如：64K*1的sram芯片组成64K*8的存储器需要8片\n其中每一片是主存储器的一位，读取数据的时候，他们同时接收到cpu的地址，然后每个片里面选择相同的存储单元，取数；\n#### 字拓展\n每个芯片的字长和主存储器的字长相同，在字数上进行拓展。地址线和位拓展一样并联，数据线并联，读写线并联，然后需要通过片选线来选择操作的存储单元。\n如：16K*8的sram组成64k*8的存储器的需要4片\n(64K*8)/(16K*8)=4\n![8ec266ee37316322921ae52b0d88b7a.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670893624071-a36dd5ea-e6a0-4b16-b3bc-2ced08809981.png#averageHue=%23f0e2d9&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ud9789832&margin=%5Bobject%20Object%5D&name=8ec266ee37316322921ae52b0d88b7a.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=848347&status=done&style=shadow&taskId=u66859226-55b1-449d-8552-c7770d093c5&title=&width=1417.8461954511847)\n图中的存储单元8k*8bit，两个通过字拓展可以组成16k*8bit的主存，其中8k=213需要至少13条地址线，A0~A12一共13条地址线，接下来就是如何选择对应的存储单元了。\n可以直接通过一个地址线去选择，如A13为高电平时候选择左边的存储单元，A14为高电平选择右边的，这样虽然直接方便，但是N个存储单元就需要n个地址线，设计不合理。\n增加一个译码器，如1-2译码器，只需要一个地址线就可以选择不同的存储单元。上图中的cpu还有A13A14A15三条多余的地址线，使用译码器的话可以有选择23个存储单元。\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670894359506-f3bad6c0-3f7f-403f-aaf9-e435dd9ab5d1.png#averageHue=%23f9f8f8&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=283&id=u44b83c40&margin=%5Bobject%20Object%5D&name=image.png&originHeight=383&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=true&size=14924&status=done&style=shadow&taskId=u55562f3c-b46b-4221-b979-54eb9e81c96&title=1-2%E8%AF%91%E7%A0%81%E5%99%A8&width=369.23078006541266 \"1-2译码器\")\n然后是地址的分配\n对于第一种线选法\n![a76b130684a535bf8c8fa653a381e4e.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670895840156-d820bf6a-8032-4a08-9b8a-781e72c8f7c2.png#averageHue=%239bb735&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u760a6dbe&margin=%5Bobject%20Object%5D&name=a76b130684a535bf8c8fa653a381e4e.png&originHeight=183&originWidth=606&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7640&status=done&style=shadow&taskId=ub050e981-bdd7-4c38-b25d-a6de67dc1ca&title=)\n可以看出内存地址分配上的不连续，对内存地址有浪费。\n而采用译码器![02f29b511df3a8ac08b9e06a1dbabf2.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896066457-830256be-27de-4461-87c7-d822d40af921.png#averageHue=%2396bb36&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u017d5760&margin=%5Bobject%20Object%5D&name=02f29b511df3a8ac08b9e06a1dbabf2.png&originHeight=183&originWidth=1537&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9191&status=done&style=shadow&taskId=u97eeac88-0fac-4e5d-8317-b267786bf98&title=)\n地址从全0到全1,内存地址分配上是连续的。\n![f73a91316547c79c0d76c3605cbd246.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896141930-319bd01a-7039-40fa-85ee-4a2e029e1c0b.png#averageHue=%23eee4dc&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uce4deeda&margin=%5Bobject%20Object%5D&name=f73a91316547c79c0d76c3605cbd246.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=true&size=747671&status=done&style=shadow&taskId=u38dd6b4e-7a03-4b96-afd0-8895953af55&title=%E5%AD%97%E6%8B%93%E5%B1%95%E5%9B%9B%E7%89%87%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87%E7%9A%84%E7%BB%93%E6%9E%84&width=1417.8461954511847 \"字拓展四片存储芯片的结构\")\n![310d25dd5583fae4c382232d977a8ca.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896193603-e3eb5ca2-8194-4fb4-b81e-10f50d4bf7a9.png#averageHue=%23f3f2f2&clientId=u24c759c1-b7b9-4&crop=0.1606&crop=0.204&crop=0.8317&crop=0.4398&from=paste&height=536&id=u684860cf&margin=%5Bobject%20Object%5D&name=310d25dd5583fae4c382232d977a8ca.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=441813&status=done&style=shadow&taskId=uc10a7511-0af0-4846-a1db-cd2b9d4f7b4&title=&width=952)\n译码器\n![2022-12-12 21 49 30.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896370859-b4bb5c69-c239-44f6-b241-29d28749e93e.png#averageHue=%23edecec&clientId=u24c759c1-b7b9-4&crop=0.2998&crop=0.1061&crop=1&crop=0.8667&from=paste&height=559&id=u0a4fa4a6&margin=%5Bobject%20Object%5D&name=2022-12-12%2021%2049%2030.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=772028&status=done&style=shadow&taskId=u13667770-ca4e-4826-b66e-5642fd86bfc&title=&width=993)\ncpu先发出地址信号，等待信号稳定后，向译码器发送使能信号，选择使用的芯片进行操作。\n\n#### 字拓展与位拓展同时拓展\n\n![881d127f170d9769a728e9168cbbb83.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896657015-34f5ad14-b06b-450f-95bc-f18aef98d98b.png#averageHue=%23e0eeda&clientId=u24c759c1-b7b9-4&crop=0.1484&crop=0.1768&crop=0.7721&crop=0.7743&from=paste&height=497&id=u4144cee8&margin=%5Bobject%20Object%5D&name=881d127f170d9769a728e9168cbbb83.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1991330&status=done&style=shadow&taskId=uf0758c87-5b6d-4f60-bd7e-18ce2735871&title=&width=884)\n如：16K*4的芯片组成64k*8的存储器\n需要8片横向上两片，纵向上4片\n### 主存储器和cpu的连接\n#### 主存和cpu的硬连接\n主存和cpu的三组连线：地址总线(AB)，数据总线(AB)，控制总线(CB)\n![主存和cpu的硬连接.drawio.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670915463484-7ba2cc8d-bfd7-47e3-85fc-ce1390fd6eb7.png#averageHue=%23a5a5a5&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ud3b07818&margin=%5Bobject%20Object%5D&name=%E4%B8%BB%E5%AD%98%E5%92%8Ccpu%E7%9A%84%E7%A1%AC%E8%BF%9E%E6%8E%A5.drawio.png&originHeight=262&originWidth=392&originalType=binary&ratio=1&rotation=0&showTitle=true&size=29285&status=done&style=shadow&taskId=u7612b03e-6beb-476c-b384-fc15e00e5cd&title=%E4%B8%BB%E5%AD%98%E4%B8%8ECPU%E7%9A%84%E7%A1%AC%E8%BF%9E%E6%8E%A5 \"主存与CPU的硬连接\")\nMAR接收来自pc的指令地址或者地址形成部件的操作数地址，已确定要访问的单元。\nMDR是向主存写入数据或者读入数据的缓冲部件。\nMFC为工作完成信号\n#### 主存和cpu的软连接\n硬连接是物理基础连接，还需要软连接即cpu向主存发送读或者写命令，这是两个部件有效工作的关键。\nCPU对主存进行读写操作时，首先在地址总线给出地址信号，然后发送相应的读写命令并在数据总线上交换信息。\n![411f94e7dd5896be28e4018083a1f42.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670916367378-d6dfa975-e6b0-4fa3-b1e9-a2533380f771.jpeg#averageHue=%23e7e7e7&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u21b2297b&margin=%5Bobject%20Object%5D&name=411f94e7dd5896be28e4018083a1f42.jpg&originHeight=1769&originWidth=3812&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3937946&status=done&style=shadow&taskId=u39e3dafd-7654-4232-a811-bca846370e1&title=)\nM(MAR)是地址寄存器给的地址中的数据\n##### 异步读取的方式\nMFC是工作完成信号\nCPU与主存之间速度不匹配没有统一的时钟信号，由MFC通知cpu工作完成\n##### 同步的读取方式\nCPU与主存采用统一的时钟信号，cpu与主存配合，不需要主存工作完成信号\n### 主存的校验\n无奇偶校验\n奇偶校验\n错误校验与纠正(ECC)\n\n### 本节回顾\n![2022-12-12 21 42 24.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897107404-eae00de8-104f-4451-b2a5-b8cce0066dd1.png#averageHue=%23f0f0ef&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=524&id=u54464178&margin=%5Bobject%20Object%5D&name=2022-12-12%2021%2042%2024.png&originHeight=709&originWidth=1256&originalType=binary&ratio=1&rotation=0&showTitle=false&size=224006&status=done&style=shadow&taskId=ub373c8ba-2ffe-4e54-adf9-e5f5e5f07eb&title=&width=927.5077195243166)\n## 提高主存读写速度的技术\n### 双端口RAM\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670990062812-157dee84-d222-4814-b018-45b4afc92503.png#averageHue=%23ececec&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=160&id=u3ed4e2c4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=216&originWidth=432&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25028&status=done&style=shadow&taskId=u40bff7ba-f2ee-459f-b7ab-7c22b96445e&title=&width=319.0153939765165)\n即主存与cpu之间有多条数据线连接，优化了多核cpu访问同一根内存条的速度。\n需要两组完全独立的数据线，地址线，控制线。cpu，ram中也要有更复杂的控制电路\n两个端口对同一个主存操作的情况：\n\n1. 两个端口同时对不同的地址单元存取数据。\t\t没问题\n2. 两个端口同时对同一地址单元读取数据。\t\t\t没问题\n3. 两个端口同时对同一地址单元写入数据。\t\t\t写入错误\n4. 两个端口同时对同一地址单元，一个读入，一个写入。\t读出错误\n\n为了解决这个问题可以添加一个标志位，但这个标志位置0则暂时关闭一个端口，未被关闭的端口正常工作，被关闭的阻塞等待。\n\n### 多模块存储器\n#### 单体多字存储器\n每次并行的读取m个连续的字\n总线宽度也要拓展为m个字\n#### 多体并行存储器\n##### 高位交叉编址\n数据顺序存储在物理地址上也是连续的，在访问一次后需要等待恢复时间，才能继续下次的访问。\n##### 低位交叉编址\n数据在物理地址上是不连续的，分在不同的存储芯片上，每次访问后下次访问的数据在下一个存储芯片不需要等待就可以访问下个数据，等待数据恢复好，就能开始下次的访问。\n![2022-12-13 16 04 54.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991391393-8f1c5881-d703-44ff-9838-c0afb396acae.png#averageHue=%23e5e5e5&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u4986e13e&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2004%2054.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=564508&status=done&style=shadow&taskId=uc4724899-8eed-4ca0-875a-4e3ef19acdf&title=&width=1019.076952980539)\n存取时间r 存取周期t 假设t=4r，则需要t+4r就可以\n![2022-12-13 16 25 54.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991500750-41f06252-c99b-4733-b0ef-12cd39e4c67e.png#averageHue=%23e6e5e4&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=ue6e327e4&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2025%2054.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644354&status=done&style=shadow&taskId=ub047f339-2732-4fdc-bde3-af6b83d056d&title=&width=1019.076952980539)\n![2022-12-13 16 34 29.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991806199-4f3b81d7-8f53-41f8-8b7f-6a3633539b39.png#averageHue=%2379897d&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u525d4ac2&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2034%2029.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1047853&status=done&style=shadow&taskId=u23579969-0bfb-483a-b324-7ae1819b9a0&title=&width=1019.076952980539)\n![2022-12-13 16 30 04.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991827986-cc96ac13-8351-4dc1-bd1c-c2d43326b9d4.png#averageHue=%23e9e9e9&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u115bba1a&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2030%2004.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=415251&status=done&style=shadow&taskId=ud6f6ba5b-786b-45d6-bc3d-22703572403&title=&width=1019.076952980539)\n\n\n\n## 多体交叉存储技术\n## 固态硬盘SSD\n![2022-12-14 09 19 13.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991782446-fcf9f17c-ba57-4f24-b6aa-4b529b1bee9a.png#averageHue=%23e1e1e1&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u4e9ee9ae&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2019%2013.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=867323&status=done&style=shadow&taskId=u2e6ef93f-ed4d-4224-9f45-42a467d4650&title=&width=1417.8461954511847)\n\n\n\n\n## 高速缓冲存储器\n### cache基本原理\n#### 局部性原理\n时间局部性\n现在访问的数据在未来的一段时间内很可能也会被访问\n空间局部性\n在未来要用到的信息很可能与现在在用的信息在存储空间上是邻近的\n### 性能分析\n假设cache的命中率95%，速度是主存的5倍，假设主存和cache同时访问，则使用cache后性能的提升多少。\nh=95%\ncache的存取周期为t，主存5t\nT=0.95*t+(1-0.95)*5t=1.2t\n性能提升了5t/1.2t倍\n若先访问cache然后才主存\nT=0.95*t+(1-0.95)*6t\n![2022-12-14 09 44 42.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671021741406-b1dd1779-9ea1-4977-adf3-190c3dc7296f.png#averageHue=%23ededed&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0024f375&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2044%2042.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=572776&status=done&style=shadow&taskId=u9c5ad303-0008-4e0b-902d-13ca99b58c1&title=&width=1417.8461954511847)\n### cache和主存的映射方式\n首先cache和主存是分块的cache中的块和主存中的块大小相等，不过cache中的容量大小要小的多。对每个cache块都有一个标志位，来标志这个块是否有效。如果不设置的话默认初始化为0，不能正确表达映射。还有多位的标志位用来标志这个cache所映射的地址。\n#### 全相连映射\n全相连映射即随便映射，主存中的数据块可以在cache中随意的存放。\n![2022-12-14 10 00 51.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022121334-1dbfe533-9017-4e48-b593-17ac989a1d34.png#averageHue=%23ecebeb&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uac511611&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2000%2051.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=822207&status=done&style=shadow&taskId=u17403779-0b50-4584-a1a7-2e78fd16102&title=&width=1417.8461954511847)\n关于访存，计算机会访问cache的标志位，若与要访问的地址匹配则命中。\n![2022-12-14 10 03 55.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022143955-af4fcfe4-91b9-4da9-9ee8-45ee14e15763.png#averageHue=%23e9e9e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0c7ce0b7&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2003%2055.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=951066&status=done&style=shadow&taskId=u6736f811-1f47-4909-83ee-70a69a998f4&title=&width=1417.8461954511847)\n\n#### 直接映射\n直接映射\n![2022-12-14 10 07 05.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022156174-7a1779ec-7ad6-4c83-aa98-a2900d366318.png#averageHue=%23e8e4d9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u4e285f65&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2007%2005.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1024269&status=done&style=shadow&taskId=ud21e3c41-34db-472d-9811-4b99039794d&title=&width=1417.8461954511847)\n主存中的块会被存放到指定的cache块中，主存块对cache的块数量取mod即可得到。\n因为是取模所以相当于取地址码的最后几位即可。所需要的地址标志位少。\n\n#### 组相连映射\n![2022-12-14 10 11 21.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022198595-87cbd4b7-47d4-4923-8a8a-689e2377301a.png#averageHue=%23e3e0d9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u68c4798f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2011%2021.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1118364&status=done&style=shadow&taskId=u3084b323-cfde-4c1c-b7b3-b0dea0535db&title=&width=1417.8461954511847)\n对cache进行分组主存对cache的组进行取模来得到分配的指定小组，这些主存块只能分配到这个小组内，不过在小组内采用全相联映射。因为对有指定的cache小组块所以需要记录的标志根据cache的小组数量i可以少log2i\n\n![2022-12-14 09 53 28.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022058602-9b400035-9457-4a9e-967f-f04fdd3989ca.png#averageHue=%23e8e7e7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u5937f6b2&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2053%2028.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=738494&status=done&style=shadow&taskId=u3e008c5f-8348-42e0-a814-f56ff5db5ef&title=&width=1417.8461954511847)\n![2022-12-14 10 11 08.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022181872-d3f62b43-ec61-4de0-a8f8-f97781cc400f.png#averageHue=%23e8e8e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ua4387e74&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2011%2008.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=783120&status=done&style=shadow&taskId=u03999ae5-80d5-449f-875f-ac316a831d2&title=&width=1417.8461954511847)\n\n### cache的替换算法\n在采用组相联和全相联，主存往cache块中送数据块的时候cache满了，这时候就需要替换算法。\n#### 随机算法\n![2022-12-14 10 16 55.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022432481-9bcf4f75-38d2-4519-9063-3007d06fd923.png#averageHue=%23e7e5cb&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u22cb0c78&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2016%2055.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=614920&status=done&style=shadow&taskId=u439404ee-eb83-4255-99a6-03e14d55ce6&title=&width=1417.8461954511847)\n不管过去未来是否使用直接替换一个随机的块。\n#### 先进先出\n![2022-12-14 10 18 29.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022395846-8ebe678f-a188-4d35-acb6-bbffd09d311b.png#averageHue=%23e6e4c9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ue2273df5&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2018%2029.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=690789&status=done&style=shadow&taskId=u27715317-b9df-4e9f-b512-f2ff28d5513&title=&width=1417.8461954511847)\n![2022-12-14 10 19 56.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022403335-2b195d7f-1202-40d3-b681-8ff1e87fcad6.png#averageHue=%23e1e0ab&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ue59c5595&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2019%2056.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=804510&status=done&style=shadow&taskId=u59b38ac7-aa9c-4de6-8c03-bfde094b241&title=&width=1417.8461954511847)\n根据先进先出的队列，将最早进入的cache块替换掉。\n#### 最近最少使用\n![2022-12-14 10 22 59.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022411710-c2878811-f91f-4f67-966c-042af0286051.png#averageHue=%23d5d57d&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub3309d32&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2022%2059.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=754987&status=done&style=shadow&taskId=ua5181e8e-87ff-4816-b519-41117158901&title=&width=1417.8461954511847)\n使用计数器记录当cache被使用后计数器清0，否则+1，最大不超过cache中数据块的数量。\n当有新的数据需要替换则替换计数器最大的那块。\n#### 最不经常使用\n对经常使用的块的计数器+1，没次替换掉较小的，如果这段时间在刷抖音，则抖音的块计数器的数值很高短时间下不来，为后续其他应用的使用很不方便。![2022-12-14 10 32 46.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022419298-7ee5fcbd-89cf-4c69-ae49-636dbd035080.png#averageHue=%23e2dfdf&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u41b839fa&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2032%2046.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=534600&status=done&style=shadow&taskId=ubfc462d7-298c-47ed-aaa3-c9f57591db9&title=&width=1417.8461954511847)\n### cache的写策略\n\n![2022-12-14 10 40 47.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022454042-dba38946-45b5-49c4-8af0-3bedbd2b99a3.png#averageHue=%23eaeaea&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=301&id=u63e3894b&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2040%2047.png&originHeight=407&originWidth=720&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112329&status=done&style=shadow&taskId=u474a5c58-b262-4b2c-a8a7-06a215e33cf&title=&width=531.6923232941942)\n#### 写命中\n全写法：对cache命中时在cache和主存中全部更新数据，并且在写入主存时使用写缓冲，把数据块写入缓冲队列中，缓冲块速度相对主存要快。当缓冲块满了之后需要cpu阻塞等待缓冲区的写入。\n写回法：cache命中之后只写入cache，只有当这块被替换的时候才写回去主存。对于写回法需要一个脏位的标志位来表明数据被修改过。\n![2022-12-14 10 37 24.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022587499-8fe69f83-8a26-4ef0-b473-5a9224e813f5.png#averageHue=%23ebe9e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0a8c5666&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2037%2024.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=664807&status=done&style=shadow&taskId=ua7cb51a9-e031-40c1-9bdb-5fb778ea546&title=&width=1417.8461954511847)\n\n![2022-12-14 10 35 40.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022576717-2ef8b9f3-359f-4386-ac59-508af7de712a.png#averageHue=%23eae7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub90ffc2f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2035%2040.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=708881&status=done&style=shadow&taskId=udf181796-4581-499d-b3de-272e52489e2&title=&width=1417.8461954511847)\n\n![2022-12-14 10 37 52.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022537125-17229ff3-2650-4b9a-a966-d0244f558790.png#averageHue=%23e9e7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u6b5b8d75&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2037%2052.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=757679&status=done&style=shadow&taskId=uad94c6ed-10a9-46b0-a3d1-a993438076d&title=&width=1417.8461954511847)\n\n#### 写不命中\n非写分配法：当CPU对cache不命中时候只写入主存不调入cache\n写分配法：写入主存还读入cache\n![2022-12-14 10 38 58.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022530365-b18257e5-8d20-4b06-a03b-0220cb00b7e4.png#averageHue=%23ebeae9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=0.8776&from=paste&height=798&id=u2895c86d&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2038%2058.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=655953&status=done&style=shadow&taskId=u2ebe2d81-6fba-4a72-bed6-a5c5c3f4f97&title=&width=1418)\n### 多级缓冲\n\n![2022-12-14 10 40 04.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022595152-96eb98b5-c072-40c0-9bb0-4739e827137c.png#averageHue=%23d3d2d1&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0cb5affa&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2040%2004.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644382&status=done&style=shadow&taskId=uc2d19840-38c7-482d-b8ba-ee0ef778526&title=&width=1417.8461954511847)\n## 虚拟存储器\n虚拟存储器由主存和磁盘存储器组成。这两个存储器在硬件和操作系统的联合下完成工作。\n同cache和主存一样对磁盘存储器分页，在需要的时候将数据从磁盘加载到主存当中。\n\n虚拟存储器将主存或辅存的地址空间统一编址,形成一个庞大的存储空间。在这个大空间里,用户可以自由编程,完全不必考虑程序在主存是否装得下以及这些程序将来在主存中的实际存放位置。\n用户编程的地址称为虚地址或逻辑地址,实际的主存单元地址称为实地址或物理地址,显然,虚地址要比实地址大得多。\n在实际的物理存储层次上,所编程序和数据在操作系统管理下,先送入磁盘,然后操作系统将当前运行所需要的部分调人主存,供 CPU 使用,其余暂不运行部分留在磁盘中。\n程序运行时,CPU 以虚地址来访问主存,由辅助硬件找出虚地址和实地址之间的对应关系,并判断这个虚地址指示的存储单元内容是否已装人主存。如果已在主存中,则通过地址变换，CPU 可直接访问主存的实际单元;如果不在主存中,则把包含这个字的一页或一个程序段调人主存后再由 CPU 访问。如果主存已满，则由替换算法从主存中将暂不运行的-页或一段调回辅存,再从辅存调人新的一页或一段到主存。从原理的角度看,虚拟存储器和 Cache-主存有不少相同之处。事实上,前面提到的各种方法是先应用于虚拟存储器中后来才发展到 Cache-主存层次中的。\n### 页式存储\n页表\n![75503b93ec8e29a22136244b2f5a6f9.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1671082763884-efc8d387-8703-44e5-997a-7d7226b2fa49.jpeg#averageHue=%23e6e6e6&clientId=uf565cf03-2fc5-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=611&id=u3928a025&margin=%5Bobject%20Object%5D&name=75503b93ec8e29a22136244b2f5a6f9.jpg&originHeight=1564&originWidth=1280&originalType=binary&ratio=1&rotation=90&showTitle=false&size=560219&status=done&style=none&taskId=udd6f59a6-6f98-4216-b60f-3b8cbf8fd66&title=&width=499.67694091796875)\n![2022-12-14 10 49 28.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022608065-66e83f89-d83c-498b-b404-e3c5e0c16bf1.png#averageHue=%23ece7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9cc5a594&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2049%2028.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=583989&status=done&style=shadow&taskId=u49be1cd1-ab1c-49da-9bee-74621512583&title=&width=1417.8461954511847)\n![2022-12-14 10 54 50.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022614641-b87423e3-e2fd-47e2-b1fa-0f358e780bd0.png#averageHue=%23e9e5e4&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u7c116a6f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2054%2050.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=686735&status=done&style=shadow&taskId=uc28ebb3c-5558-429a-896c-9813453ac67&title=&width=1417.8461954511847)\n![2022-12-14 10 57 54.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022619926-7b862abd-6d44-47cf-8bf9-aed76c858087.png#averageHue=%23ebe9e7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uf00b7a73&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2057%2054.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=744614&status=done&style=shadow&taskId=u0dabc67b-ade5-4d01-92f5-d9af80f3349&title=&width=1417.8461954511847)\n![2022-12-14 11 01 39.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022625276-3c48590b-c7b6-48ea-bdba-d1e98911fde2.png#averageHue=%23eceae7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0ccc535b&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2001%2039.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=665284&status=done&style=shadow&taskId=u6f343dce-49d1-4ad0-a6bf-587c5f7ba51&title=&width=1417.8461954511847)\n![2022-12-14 11 02 04.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022630272-3a074d42-1f44-441e-8213-8a3186495a8f.png#averageHue=%23ebe7df&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9b3497c9&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2002%2004.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=777004&status=done&style=shadow&taskId=ue06c216e-8495-4366-8fcd-58e60341588&title=&width=1417.8461954511847)\n![2022-12-14 11 03 41.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022636206-432e458f-c1f6-4712-b015-06244388a2f8.png#averageHue=%23eae7de&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u50bceef0&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2003%2041.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=819812&status=done&style=shadow&taskId=u1b37b3bb-98c5-4eff-b086-227f595f975&title=&width=1417.8461954511847)\n![2022-12-14 11 04 34.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022641508-735a9e89-b612-4337-8efd-ccfd5c134238.png#averageHue=%23f2f0ef&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9c88909f&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2004%2034.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=592589&status=done&style=shadow&taskId=uc3ae885a-ba9a-467b-a45f-03f6ed0662f&title=&width=1417.8461954511847)\n![2022-12-14 11 07 13.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022647103-eabe16b3-3406-44c8-849c-e74ff307c301.png#averageHue=%23ebe7e1&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u5c6830ec&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2007%2013.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1033429&status=done&style=shadow&taskId=u2aa6f2f6-3983-40cc-b70f-7e8002818e3&title=&width=1417.8461954511847)\n![2022-12-14 11 11 43.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022653928-483a6452-f731-4ea6-acc4-19c90f6ad3d8.png#averageHue=%23afaead&clientId=ud7de39bb-26e9-4&crop=0.1453&crop=0.0626&crop=0.6757&crop=0.5785&from=paste&height=423&id=u64946b63&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2011%2043.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=829624&status=done&style=shadow&taskId=u61a65403-1c5d-451a-9384-accb6c97d48&title=&width=752)\n![2022-12-14 11 14 19.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022671809-e7cd90f6-3d14-4359-9090-40c829529bf5.png#averageHue=%23868482&clientId=ud7de39bb-26e9-4&crop=0.1419&crop=0.066&crop=0.6806&crop=0.61&from=paste&height=363&id=u626c2495&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2014%2019.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1492413&status=done&style=shadow&taskId=u72354868-b245-488f-9606-68e6575fc96&title=&width=644.9923095703125)\n![2022-12-14 11 14 37.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022678838-f787410b-6909-4b0d-b148-df6bbffea9c1.png#averageHue=%23e8e3e2&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=431&id=u6da600f8&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2014%2037.png&originHeight=583&originWidth=1032&originalType=binary&ratio=1&rotation=0&showTitle=false&size=223798&status=done&style=shadow&taskId=u0f69980b-8a71-4da6-a7c7-c938d95edfe&title=&width=762.0923300550118)\n页表是慢表，存在着cache和主存一样的关系的快表。\n### 段式存储\n同分页一样，只不过他是按程序段划分。大小参差不齐\n### 段页式存储\n\n# 中央处理器\n## 概念\n中央处理器由控制器和运算器组成，是整个计算机的核心所在。\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671087529901-3b9a976a-2af5-4c9e-8644-5394008d324c.png#averageHue=%231b1b1b&clientId=uf565cf03-2fc5-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=665&id=uabb14610&margin=%5Bobject%20Object%5D&name=image.png&originHeight=900&originWidth=972&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23077&status=done&style=none&taskId=u67be6af6-03e6-4b7e-a534-6be18abbc40&title=&width=717.7846364471623)\n控制器的主要功能如下 ：\n1. 从主存中取出一条指令,并指出下一条指令在主存中的位置\n2. 对指令进行译码或测试,产生相应的操作控制信号，以便启动规定的动作.\n3. 指挥并控制 CPU主存和输人输出设备之间的数据流动方向。\n运算器的主要功能如下：\n1. 执行所有的算术运算。\n2. 执行所有的逻辑运算，并进行逻辑测试。\n\n![9bb3489df9e6f00bf1e1fa2764a0a00.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1671083834847-ae030b1f-c6a7-4c5d-8509-5a22d0612ac7.jpeg#averageHue=%2376716c&clientId=uf565cf03-2fc5-4&crop=0&crop=0.1855&crop=1&crop=0.7614&from=drop&height=1280&id=u74a41fab&margin=%5Bobject%20Object%5D&name=9bb3489df9e6f00bf1e1fa2764a0a00.jpg&originHeight=1280&originWidth=1706&originalType=binary&ratio=1&rotation=0&showTitle=false&size=556039&status=done&style=none&taskId=u6f890811-1bea-43da-be90-58a6051403f&title=&width=1706)\n![[cpu的内部结构.png]]\n## 运算器和控制器\n### 运算器的基本组成\n![[运算器的组成.png]]\n###  控制器的基本组成\n![[控制器的组成.png]]\n### 控制器的基本结构\n![[控制器的基本结构.png]]\n### 运算器和控制器的功能\n![[运算器和控制器的功能.png]]\n### cpu 单总线结构\n![[cpu单总线结构.png]]\n要在各个寄存器中传递数据，只需要用 cu 控制个寄存器或者其他单元的控制信号，\n如 pc->mar\nCu 给 pc 的读控制线一个信号，mar 的输入控制线一个信号这样数据就会通过总线传递。\nAlu 逻辑运算单元，只能同时输入才能有效。所以信号不可以分两次送进 alu，这时候就需要 acc 累加寄存器，提前将一个数加载到 acc 中这样就可以和输入数据同时进入 alu。\n## 指令执行的过程\n### 指令周期\n指令周期：CPU从主存中取出并执行一条指令所需的全部时间。\n![[指令周期.png]] \n指令周期常用若干个机器周期表示，机器周期又叫CPU周期。\n一个机器周期又分为若干个时钟周期。\n**时钟周期**又叫CPU时钟周期，是CPU操作的最基本单位。\n计算机的主频3.0GHz说的是一秒钟计算机可以有3.0G个时钟周期。\n![[指令周期-机器周期-时钟周期.png]]\n一些指令的周期\n![[一些指令的周期.png]]\n一般一个指令周期的最后会有中断周期，这段时间内会检测来自外部的中断信息，如果有中断信号，则将当前pc保存到堆栈寄存器当中（记得sp-1），保存当前状态。等待中断信号处理后恢复运行。\n### 指令周期的流程控制\n![[指令周期的流程控制.png]]\n对应四个周期存在四个触发器，指定触发器置1表示这个指令周期正处于这个状态\n![[指令周期的触发器.png]]\n### 取指周期\n![[取指周期.png]]\n### 间指周期\n\n### 中断周期\n![[中断周期.png]]\n### 执行周期\n\n### 指令执行的方案\n![[指令执行的方案.png]]\n### 小节回顾\n![[指令周期的小节回顾.png]]\n\n##  硬布线控制器\n### Cu 控制单元结构\n![[硬布线控制器.png]]\nCu 控制单元接收指令寄存器过来的经过译码器的指令。\n操作码译码器类似地址译码器，将输入的指令转为合适的输出，一个指令对应一条输出。操作码有 n 位译码器就有 2<sup>n</sup> 个输出\n节拍发生器接收时钟信号，有 n 个输出表示一个指令周期分为 N 个时钟周期，一般这个长度由操作时间最长的访问主存单元的时间确定。\nCu 内部集成四个触发器，用来表示指令执行的第几个周期\nCu 接收其他部分的单元的反馈信息\nCu 根据上面输入的不同的信号，输出 n 个控制信号表示有 N 个位操作\n![[微指令的线路的设计.png]]\n设计指令的时候，考虑把前后不依靠不冲突的指令设计在一个周期\n\n### 硬布线控制器的设计\n设计步骤：\n1. 分析每个阶段的微操作序列（取址，间址，执行，中断）在指令的不同阶段有哪些微操作\n2. 选择 cpu 的控制方式 （定长机器周期和不定长机器周期）这里一个机器周期安排 3 个节拍信号，即 3 个时钟信号\n3. 安排微操作时序，将机器周期的微操作序列用 3 个时钟信号完成\n4. 电路的设计，确定每个微操作的逻辑表达式并用电路实现\n取值周期：（大多数的微操作的取值周期都是这样）\n1. 将要执行的操作的地址从 pc 程序计数器读入 MAR\n2. 给主存一个读数据信号\n3. 将 MAR 指向的地址从内存单元中读到 MDR 数据寄存器\n4. Pc 程序计数器加一\n5. 数据寄存器将指令传给 ir 指令寄存器\n6. Ir 将指令操作码给指令译码器\n间址周期：（指令中的地址是一个间接地址，这时候就需要间接寻址）\n1. 指令寄存器中的地址传递给 MAR\n2.  给主存一个读数据信号\n3. 将 MAR 指向的地址从内存单元中读到 MDR 数据寄存器\n4. 将新的数据替换 ir 中的操作数\n可以看出上面两个周期都有用到同样的操作，在分析完全部周期后统计制表就可以写出指定操作的逻辑表达式。然后就可以设计电路。\n这种硬布线控制器每增加一种指令操作就需要重新设计电路，很是复杂，扩充指令很困难，不过由于由硬件设计执行速度很快。因此常常用在 risc精简指令集。\n## 微程序控制器\n\n\n\n# 总线\n# 外部设备\n# 输入输出\n\n","source":"_posts/学习笔记/计算机组成原理.md","raw":"---\ntitle: 计算机组成原理\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# 计算机的硬件组成\n五大部件 输入设备，输出设备，存储器，运算器，控制器\n主机=（cpu=控制器+运算器）+ 主存\n计算机主要性能指标\n机器字长 数据通路宽度 主存容量 运算速度 \n# 数值的表示\n整数\n浮点数\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670639742503-e35fc398-6d2a-4822-a358-e978d4b26bf4.png#averageHue=%23f7f7f7&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5ec83e2a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=861&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65413&status=done&style=shadow&taskId=uef3daf7a-b47a-4342-bd9a-10088f50ad3&title=&width=635.8154032726407)\n**数据的表示范围 原码 补码**\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670639976554-7f79be83-3ff7-4a5a-9e8c-4a95dd81840c.png#averageHue=%23f7f7f7&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5282d5e4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=734&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52419&status=done&style=shadow&taskId=u1505ba14-fbf5-4d12-931f-690e75cc662&title=&width=542.0307851360258)\n\n# 指令系统\n## 3.1指令格式\n### 思维导图\n![[指令系统.jpg]]\n指令的基本格式是\n![](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1665565710375-3f93fbcd-5236-4903-ab53-d061da7e6b9c.jpeg)\n ![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640240207-8c50abf7-43a0-4e34-b085-d6fb1ad850c8.png#averageHue=%23f2f2f2&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=263&id=ud63cabb4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=356&originWidth=971&originalType=binary&ratio=1&rotation=0&showTitle=false&size=86487&status=done&style=shadow&taskId=u845e7e19-8f2a-48fc-a33d-23d5465e216&title=&width=717.0461748870314)\n编制方式：字节，字\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640768024-7f13b669-edc7-48a6-9f34-179ccd7a0f2a.png#averageHue=%23fafefd&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=168&id=u2a170f39&margin=%5Bobject%20Object%5D&name=image.png&originHeight=228&originWidth=790&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45653&status=done&style=shadow&taskId=uaf41fd05-3698-44ab-ada8-0d8762debfb&title=&width=583.384632503352)\n\n## IEEE754标准的浮点数\n| 类型 | 数符 | 阶码 | 尾数 | 总位数 | 偏置值 |\n| --- | --- | --- | --- | --- | --- |\n| 单精度浮点型 | 1 | 8 | 13 | 31 | 127 |\n| 双精度浮点型 | 1 | 11 | 52 | 64 | 1023 |\n| 临时浮点数 | 1 | 15 | 64 | 80 | 16383 |\n\n![Screenshot_20221027_203732.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1666874378699-8f66276f-f4a2-491f-a95e-8d6812d26106.png#averageHue=%23f7f7f7&clientId=u0885d815-63db-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u38b16a3f&margin=%5Bobject%20Object%5D&name=Screenshot_20221027_203732.png&originHeight=269&originWidth=743&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15675&status=done&style=shadow&taskId=ud21cc878-db16-460b-ae27-240e2ca7a1a&title=)\n将（100.25）转为短浮点数\n基本流程：\n1. 整数转换，除二取余\n2. 小数转换，乘二取整\n3. 结果组合\n4. 科学记数法\n5. 指数偏移\n6. 拼接组合\n##### 整数转换\n100/2=50余0\n50/2=25余0\n25/2=12余1\n12/2=6余0\n6/2=3余0\n3/2=1余1\n1\n100转换为（1100100）2\n##### 小数取整\n0.25*2=0.5取0\n0.5*2=1 取 1\n0.25转为 （0.01）2 \n##### 组合结果\n100.25=（1100100.01）2\n##### 科学计数法\n1100100.01=1.10010001*26\n##### 指数偏移\n偏移量127+6=133\n阶码=133=（10000101）2\n##### 拼接组合\n数符+阶码+尾数\n0  \t10000101  10010001\n尾数最高位默认隐含一个1\n尾数实际是（1.10010001）2\n#### 短浮点数到整数\n1 10000011 10010010000000000000000\n符号位 1 为负数\n阶码 10000011  = 131 减去偏移值 127 =4\n尾数1.1001001\n组合-1.1001001*24\n二进制-11001.001=25.125\n##### 阶码全零，全一的情况\n作为保留作他用，正常取值范围1～254即-126～127\n全零表示机器零\n全一时候 尾数为0表示正负无穷\n#### 数据的机器运算\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640926068-87d37634-ef59-4f39-9f70-9c6a7d3c29fd.png#averageHue=%23f6f6f6&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=298&id=uc99fea7b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=403&originWidth=830&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56491&status=done&style=shadow&taskId=ud596e95b-c1e0-448a-afe4-ec158ea3c17&title=&width=612.9230949085851)\n除法不需要\n\n# 存储系统和结构\n**重点**\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648055137-c662e2a1-8522-47bb-a28d-df60d7c516db.png#averageHue=%23eed7d4&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=380&id=uef16f568&margin=%5Bobject%20Object%5D&name=image.png&originHeight=515&originWidth=1080&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114418&status=done&style=shadow&taskId=uea4e5adc-8c0a-4517-be6a-b6bc524d872&title=&width=797.5384849412914)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648077488-bbeedf7f-34bc-4dfb-9b50-eabbbbe55ec9.png#averageHue=%23e6cfcd&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=466&id=u317ace61&margin=%5Bobject%20Object%5D&name=image.png&originHeight=631&originWidth=1149&originalType=binary&ratio=1&rotation=0&showTitle=false&size=168081&status=done&style=shadow&taskId=u4a382775-6ab1-486a-b39d-2a14a78bb72&title=&width=848.4923325903184)\n\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648088433-00c41f17-b8fa-4769-b31b-31a740cc93f4.png#averageHue=%23e5cecb&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=478&id=u46b95248&margin=%5Bobject%20Object%5D&name=image.png&originHeight=647&originWidth=1134&originalType=binary&ratio=1&rotation=0&showTitle=false&size=190845&status=done&style=shadow&taskId=u0694b531-6f1d-4cfd-8302-b0710aa1f9c&title=&width=837.415409188356)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648104764-e442ee94-d911-4764-a090-496c787ed8ca.png#averageHue=%23eed8d6&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=419&id=uca23510f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=567&originWidth=1112&originalType=binary&ratio=1&rotation=0&showTitle=false&size=110000&status=done&style=shadow&taskId=ub27c6bad-c942-49f9-adb1-6d49a0a34ac&title=&width=821.1692548654778)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648139089-c102a299-5edd-4bbb-9d0a-ff89670bec83.png#averageHue=%23f5f4f3&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=602&id=ue9f54940&margin=%5Bobject%20Object%5D&name=image.png&originHeight=815&originWidth=1439&originalType=binary&ratio=1&rotation=0&showTitle=false&size=122502&status=done&style=shadow&taskId=u4e1c3982-5628-4382-ae0d-49b33496235&title=&width=1062.6461850282576)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648197344-c8c568d5-d600-4ec4-8322-0eee42f737bc.png#averageHue=%23efeded&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=607&id=uc2361fe6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=822&originWidth=663&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119386&status=done&style=shadow&taskId=u246eb774-1a5a-4799-94a3-f1ec5fa1a9b&title=&width=489.6000143667372)\n编址方式 1. 字节编址 2. 字编址\n**字节编址**以字节数表示存储容量\n**字编址**以字的单元数*机器字长表示存储容量\n例子：64K*16 这个是字编址，64k个存储单元与机器字长16位\n转为字节编址为128K*8 这个8是8位，8位为一个字节，这就是字节编址\n##### 1.某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：\n（1）该机所允许的最大主存空间是多少？\n（2）若每个模块板为32K×8位，共需几个模块板？\n（3）每个模块板内共有几片RAM芯片？\n（4）共有多少片RAM？\n（5）CPU如何选择各模块板？\n218 =262144位=262144/8 b=32768b=\n1kb=1024b\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724588220-1d6b592a-646a-4cfb-b3e7-ec8aae91ed91.png#averageHue=%23eeeeee&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=270&id=ua1b2ad25&margin=%5Bobject%20Object%5D&name=image.png&originHeight=366&originWidth=668&originalType=binary&ratio=1&rotation=0&showTitle=true&size=61531&status=done&style=shadow&taskId=u28096fc4-39d8-4f64-bd51-22a7510162a&title=%E4%B8%BB%E5%AD%98%E7%9A%84%E6%9E%84%E6%88%90&width=493.2923221673913 \"主存的构成\")\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724600435-6d586353-5f8c-4882-9669-b45d56c5e4ec.png#averageHue=%23f7f7f7&clientId=u38b7a52e-dc1f-4&crop=0&crop=0.0759&crop=1&crop=0.7957&from=paste&height=343&id=u92a222ad&margin=%5Bobject%20Object%5D&name=image.png&originHeight=464&originWidth=440&originalType=binary&ratio=1&rotation=0&showTitle=true&size=45793&status=done&style=shadow&taskId=u0c867578-9eac-4b44-a29d-c834d1b4ecc&title=%E5%AD%98%E5%82%A8%E5%85%83&width=325 \"存储元\")\nmos管上接受到高电平，mos管就导通这时如果给这条线输入高电平，电容两侧就会产生电压，电容就会充电，这就相当于写入了一个二进制位。如果电容有电导通这条线，在这条线上就会读出二进制1，否者为0。这就是最小的存储单位，存储元。\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724595914-7a428815-1b7d-49c6-b6e3-1fbd233c885a.png#averageHue=%23f7f5f5&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=0.5409&from=paste&height=268&id=u874c96ca&margin=%5Bobject%20Object%5D&name=image.png&originHeight=363&originWidth=1183&originalType=binary&ratio=1&rotation=0&showTitle=true&size=104002&status=done&style=shadow&taskId=ua3128c8b-fd64-4a91-a4d4-fdd67f24993&title=%E5%AD%98%E5%82%A8%E5%8D%95%E5%85%83&width=874 \"存储单元\")\n这是一个存储单元，由多个存储元构成，期中红色的是自选线，绿色的是数据线，片选线导通就可以对数据进行读写，而具体的是读是写由数据线来控制。期中数据线有8条表示一次可以读取8个比特位，这就与机器字长有关系了。多个存储单元就构成存储体。\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724592572-e28044b5-8f73-4b4d-a79b-a752879a856a.png#averageHue=%23eeeeee&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=275&id=u8c458cf2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=372&originWidth=718&originalType=binary&ratio=1&rotation=0&showTitle=true&size=46286&status=done&style=shadow&taskId=u74244fed-77d6-4cff-972d-6db6c00ae83&title=%E5%AD%98%E5%82%A8%E4%BD%93&width=530.2154001739326 \"存储体\")\n选择哪个存储单元由地址寄存器来确定，而数据读取写入最后由数据寄存器来负责。\n![9eb83e6ec9d7c4dd0879275eac0d746.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670752287797-6581ffe8-7ea4-45da-8838-dd135bc2191f.png#averageHue=%23f0ecec&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=0.9574&from=drop&height=1080&id=u04fe5801&margin=%5Bobject%20Object%5D&name=9eb83e6ec9d7c4dd0879275eac0d746.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=818476&status=done&style=shadow&taskId=uef4440ad-dbd9-4540-a541-38171cb2de6&title=&width=1920)\n地址寄存器接收来自地址总线的地址，通过地址译码器选择指定的存储单元。\nMAR地址寄存器有n位，则能映射2n个存储单元，图中的机器存储大小可以表示为：\n23 * 8bit = 23 * 1B = 8 * 1B = 8B\n其中23为存储单元的大小，数量 8bit 为一个存储单元（存储字/机器字长）大小\n![13311c99-2ed4-410f-99f8-9d5eb53e1b44.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670753529349-4d7edd60-7a45-44d8-9d1a-7988d56a3135.png#averageHue=%23f0ecec&clientId=u38b7a52e-dc1f-4&crop=0.0211&crop=0.015&crop=0.9817&crop=0.9349&from=drop&height=1037&id=u420f19ec&margin=%5Bobject%20Object%5D&name=13311c99-2ed4-410f-99f8-9d5eb53e1b44.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=949557&status=done&style=shadow&taskId=uaf979647-db83-4f23-8e0e-0620a48792f&title=&width=1844)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670753832191-bf142f93-6c11-456a-a1ed-2c6965d3adaa.png#averageHue=%23ede1d9&clientId=u38b7a52e-dc1f-4&crop=0.0229&crop=0&crop=1&crop=1&from=paste&height=229&id=uf1c01d68&margin=%5Bobject%20Object%5D&name=image.png&originHeight=317&originWidth=711&originalType=binary&ratio=1&rotation=0&showTitle=false&size=141155&status=done&style=shadow&taskId=u82e49bf0-0c91-45a1-a588-615909e0c1a&title=&width=513)\n在译码器，MAR,MDR上都连接着控制电路，控制电路当电信号稳定后才可以进行下一步。\n控制电路的输入片选线低电平有效，只有片选线为低电平时候这个控制电路才有效，读写电路是控制是进行读操作还是写操作。读写控制线有两条线的有一条线的。\n![cc150a47e9d83db39e9c3029a8be807.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670754163624-59553be5-e961-4160-b1bb-77c5029891a8.png#averageHue=%23ede8e7&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u34cc0fab&margin=%5Bobject%20Object%5D&name=cc150a47e9d83db39e9c3029a8be807.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=true&size=1294833&status=done&style=shadow&taskId=u3ddd1ff5-42d4-4fa3-909c-b09301177db&title=%E5%86%85%E5%AD%98%E6%9D%A1%E5%8F%AF%E8%83%BD%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%86%E7%89%87%EF%BC%8C%E9%80%9A%E8%BF%87%E7%89%87%E9%80%89%E7%BA%BF%E6%9D%A5%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E7%9A%84%E9%82%A3%E4%B8%80%E6%9D%A1 \"内存条可能有多个分片，通过片选线来选择需要的那一条\")\n如果分析一个芯片至少多少个引脚：有vcc，GND，地址总线，数据总线的条数，控制电路的片选线，读写控制线。\n\n---\n\n**1. 已知某64位机主存采用半导体存储器，其地址码为26位，若使用256K×16位的DRAM芯片组成该机所允许的最大主存空间，并选用模块板结构形式。**（1） 每个模块板为1024K×64位，共需几个模块板？\n（2） 每个模块板内共有多少DRAM芯片?\n（3）主存共需多少DRAM芯片? CPU如何选择各模块板？\n地址码26位，64位的机器，机器字长64\n机器内存容量：226*64bit = 4GB\n1024K=1024*1024=210*210\n每个模块板主存容量：1024K×64bit=220*64bit\n芯片：256K×16=218×16bit\n\n1. 226*64bit/220*64bit=226-20 =26=**64 **\n2. 220*64bit/218×16bit=24=**16**\n3. 主存共需DRAM芯片为：16×64=1024 (片)\n\n每个模块板有16片DRAM芯片，构成容量为1024K×64位，需20根地址线(A19~A0)完成模块板内存储单元寻址。一共有64块模块板，采用6根高位地址线(A25~A20)，通过6：64译码器译码产生片选信号对各模块板进行选择。\n位扩展 4片256K×16—>256K×64\n字扩展：4组（256K×64）à1024K×64位\n\n## 主存储器的性能指标\n![思维导图.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670913171682-5aaf666e-9379-4b7a-9b65-ae61ce736de3.png#averageHue=%230c0b08&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u04ae261e&margin=%5Bobject%20Object%5D&name=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png&originHeight=828&originWidth=1770&originalType=binary&ratio=1&rotation=0&showTitle=true&size=197607&status=done&style=shadow&taskId=ub7d1e487-ebf5-4326-8ab6-db7f8c1270d&title=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE \"思维导图\")\n## 半导体随机存储器（RAM）\n### DRAM与SRAM的对比\n![d4887fa7b61908e871f04ae0c858bc8.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670839412544-cd9324c0-16f2-4d7e-bda2-337f9a642a7f.png#averageHue=%23ede1de&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ud1a7658b&margin=%5Bobject%20Object%5D&name=d4887fa7b61908e871f04ae0c858bc8.png&originHeight=625&originWidth=1148&originalType=binary&ratio=1&rotation=0&showTitle=true&size=366739&status=done&style=shadow&taskId=ua2728dec-bb48-4b96-991d-0acb7c57b3d&title=sram%E4%B8%8Edram%E7%9A%84%E5%AF%B9%E6%AF%94 \"sram与dram的对比\")\nsram采用双稳态可以非破坏性读写，而dram是破坏性读写，需要恢复状态，而且电容里的电会在2ms后消失，所以存储器需要定时刷新。对于上面说的译码器连接出来的片选线，如果一个单元一条线会浪费资源，对于220也就是1M大小的存储单元需要220条线去选择，而如果分成行列式，只需要行，列各自1024条就好，一个存储单元由一个行一个列来选择，大大降低了布线的要求。\n#### 动态RAM的刷新\n![a5b5be8a8338b5e74a6075b76a78bdb.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840378913-744327ce-825b-4d5f-8943-1517ee8609e5.png#averageHue=%23ececeb&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ub48d0ea6&margin=%5Bobject%20Object%5D&name=a5b5be8a8338b5e74a6075b76a78bdb.png&originHeight=614&originWidth=1095&originalType=binary&ratio=1&rotation=0&showTitle=false&size=306704&status=done&style=shadow&taskId=ua9d0ec4c-0f6e-4f14-b75a-51698622313&title=)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840467938-be1ace3c-862c-413f-b992-0f4fbbd4849b.png#averageHue=%23edeceb&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=520&id=u30ab716c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=704&originWidth=1267&originalType=binary&ratio=1&rotation=0&showTitle=true&size=596658&status=done&style=shadow&taskId=u6f29b4a9-211a-4c37-a2f2-a4aea771548&title=%E5%88%B7%E6%96%B0&width=935.6307966857557 \"刷新\")\n### RAM芯片分析\n#### 地址译码方式\n##### 单译码\n即自选法，上面提到的单地址线的译码方式\n![4ecf380ad1d951af9d26ba88c922891.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914114481-5eec7eb5-5762-4fc7-8b45-bf5e573e0405.jpeg#averageHue=%23efefef&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=311&id=u6fa9b211&margin=%5Bobject%20Object%5D&name=4ecf380ad1d951af9d26ba88c922891.jpg&originHeight=1544&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=364086&status=done&style=shadow&taskId=ude42b972-f046-4344-bb99-2d90a1c3be5&title=&width=257.73077392578125)\n##### 双译码\n![1e20befd85b6f6a5d2cd390a89502a2.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914151696-39e2a5d3-161e-49c7-9d67-5919555ad2cd.jpeg#averageHue=%23f1f1f1&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=286&id=ua08620d5&margin=%5Bobject%20Object%5D&name=1e20befd85b6f6a5d2cd390a89502a2.jpg&originHeight=1280&originWidth=1850&originalType=binary&ratio=1&rotation=0&showTitle=false&size=361865&status=done&style=shadow&taskId=u4b23a76c-3395-40d2-9237-6a1a768120f&title=&width=412.73077392578125)\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840521436-38a8af09-2eb8-4dd0-a2e4-893d0c3b306d.png#averageHue=%23f2f0f0&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=480&id=u763c8755&margin=%5Bobject%20Object%5D&name=image.png&originHeight=650&originWidth=1247&originalType=binary&ratio=1&rotation=0&showTitle=true&size=286550&status=done&style=shadow&taskId=u819c7f1d-d073-40f5-983a-0caa407750f&title=%E5%9C%B0%E5%9D%80%E7%BA%BF%E5%A4%8D%E7%94%A8%E6%8A%80%E6%9C%AF&width=920.8615654831392 \"地址线复用技术\")\n地址线复用技术，分两次传输地址码，先传行地址码，后传列地址码。\n![356562e2de3964179013a6574b194f5.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914212480-0a7406dd-dcf5-4af4-a911-39bf0d2d445c.jpeg#averageHue=%23e1e1e1&clientId=u4b755130-ef81-4&crop=0.0136&crop=0.7361&crop=0.9747&crop=0.9307&from=drop&height=1230&id=u98a4c741&margin=%5Bobject%20Object%5D&name=356562e2de3964179013a6574b194f5.jpg&originHeight=1280&originWidth=1902&originalType=binary&ratio=1&rotation=0&showTitle=true&size=793405&status=done&style=shadow&taskId=uebd8701f-477e-4716-bc14-4a2c1404141&title=%E4%B8%A4%E7%A7%8D%E8%AF%91%E7%A0%81%E6%96%B9%E5%BC%8F%E7%9A%84%E6%AF%94%E8%BE%83&width=1828 \"两种译码方式的比较\")\n\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840641563-63b06a25-f098-4957-9c9a-d87ae85e62ea.png#averageHue=%23ebe1de&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=521&id=u741162ea&margin=%5Bobject%20Object%5D&name=image.png&originHeight=706&originWidth=1252&originalType=binary&ratio=1&rotation=0&showTitle=false&size=516936&status=done&style=shadow&taskId=ucd6a1602-afb8-4324-9aa1-04fe7e537d4&title=&width=924.5538732837933)\n\n## 主存储器的连接与控制\n存储芯片容量有限，主存储器由若干个芯片构成。而且连接起来的芯片需要与cpu连接，才能在CPU的控制下进行读写操作。\n![cc36b50df0939ea7602313128573519.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896866825-78298a8f-a859-48f0-ba3f-7c796148f900.png#averageHue=%23f6f7f4&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=467&id=uee402f01&margin=%5Bobject%20Object%5D&name=cc36b50df0939ea7602313128573519.png&originHeight=633&originWidth=1103&originalType=binary&ratio=1&rotation=0&showTitle=true&size=141368&status=done&style=shadow&taskId=u8bd6049f-060f-406e-b09d-d64814f5852&title=cpu%E4%B8%8E%E5%AD%98%E5%82%A8%E5%99%A8%E8%BF%9E%E6%8E%A5%E7%BB%93%E6%9E%84&width=814.5231008243004 \"cpu与存储器连接结构\")\n### 主存容量的拓展\n总片数=总容量/容量(每片)\n拓展方法有字拓展，位拓展，字位同时拓展\n#### 位拓展\n只在位的方向上拓展也就是，将各存储器的片选线，地址线，读写线连接起来，然后数据线单独列出来。\n![8721bc7419f59135d89e0b964394213.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897024158-722dd24e-ed5b-4eee-be96-b7f5a115891b.png#averageHue=%23f2f1f1&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u81c50178&margin=%5Bobject%20Object%5D&name=8721bc7419f59135d89e0b964394213.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=510593&status=done&style=shadow&taskId=u22a55c6a-73ad-4da4-9777-9af86742dec&title=&width=1417.8461954511847)\n\n![8557344cdab1216f84e34a268a7309e.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897072848-5fa54c5c-1d86-4040-b431-3bec6c339581.png#averageHue=%23f0f0e4&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub2a5303f&margin=%5Bobject%20Object%5D&name=8557344cdab1216f84e34a268a7309e.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=568132&status=done&style=shadow&taskId=u6b5c71c5-344a-4b72-8c0c-79a1c3671b0&title=&width=1417.8461954511847)\n如：64K*1的sram芯片组成64K*8的存储器需要8片\n其中每一片是主存储器的一位，读取数据的时候，他们同时接收到cpu的地址，然后每个片里面选择相同的存储单元，取数；\n#### 字拓展\n每个芯片的字长和主存储器的字长相同，在字数上进行拓展。地址线和位拓展一样并联，数据线并联，读写线并联，然后需要通过片选线来选择操作的存储单元。\n如：16K*8的sram组成64k*8的存储器的需要4片\n(64K*8)/(16K*8)=4\n![8ec266ee37316322921ae52b0d88b7a.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670893624071-a36dd5ea-e6a0-4b16-b3bc-2ced08809981.png#averageHue=%23f0e2d9&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ud9789832&margin=%5Bobject%20Object%5D&name=8ec266ee37316322921ae52b0d88b7a.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=848347&status=done&style=shadow&taskId=u66859226-55b1-449d-8552-c7770d093c5&title=&width=1417.8461954511847)\n图中的存储单元8k*8bit，两个通过字拓展可以组成16k*8bit的主存，其中8k=213需要至少13条地址线，A0~A12一共13条地址线，接下来就是如何选择对应的存储单元了。\n可以直接通过一个地址线去选择，如A13为高电平时候选择左边的存储单元，A14为高电平选择右边的，这样虽然直接方便，但是N个存储单元就需要n个地址线，设计不合理。\n增加一个译码器，如1-2译码器，只需要一个地址线就可以选择不同的存储单元。上图中的cpu还有A13A14A15三条多余的地址线，使用译码器的话可以有选择23个存储单元。\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670894359506-f3bad6c0-3f7f-403f-aaf9-e435dd9ab5d1.png#averageHue=%23f9f8f8&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=283&id=u44b83c40&margin=%5Bobject%20Object%5D&name=image.png&originHeight=383&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=true&size=14924&status=done&style=shadow&taskId=u55562f3c-b46b-4221-b979-54eb9e81c96&title=1-2%E8%AF%91%E7%A0%81%E5%99%A8&width=369.23078006541266 \"1-2译码器\")\n然后是地址的分配\n对于第一种线选法\n![a76b130684a535bf8c8fa653a381e4e.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670895840156-d820bf6a-8032-4a08-9b8a-781e72c8f7c2.png#averageHue=%239bb735&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u760a6dbe&margin=%5Bobject%20Object%5D&name=a76b130684a535bf8c8fa653a381e4e.png&originHeight=183&originWidth=606&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7640&status=done&style=shadow&taskId=ub050e981-bdd7-4c38-b25d-a6de67dc1ca&title=)\n可以看出内存地址分配上的不连续，对内存地址有浪费。\n而采用译码器![02f29b511df3a8ac08b9e06a1dbabf2.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896066457-830256be-27de-4461-87c7-d822d40af921.png#averageHue=%2396bb36&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u017d5760&margin=%5Bobject%20Object%5D&name=02f29b511df3a8ac08b9e06a1dbabf2.png&originHeight=183&originWidth=1537&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9191&status=done&style=shadow&taskId=u97eeac88-0fac-4e5d-8317-b267786bf98&title=)\n地址从全0到全1,内存地址分配上是连续的。\n![f73a91316547c79c0d76c3605cbd246.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896141930-319bd01a-7039-40fa-85ee-4a2e029e1c0b.png#averageHue=%23eee4dc&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uce4deeda&margin=%5Bobject%20Object%5D&name=f73a91316547c79c0d76c3605cbd246.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=true&size=747671&status=done&style=shadow&taskId=u38dd6b4e-7a03-4b96-afd0-8895953af55&title=%E5%AD%97%E6%8B%93%E5%B1%95%E5%9B%9B%E7%89%87%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87%E7%9A%84%E7%BB%93%E6%9E%84&width=1417.8461954511847 \"字拓展四片存储芯片的结构\")\n![310d25dd5583fae4c382232d977a8ca.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896193603-e3eb5ca2-8194-4fb4-b81e-10f50d4bf7a9.png#averageHue=%23f3f2f2&clientId=u24c759c1-b7b9-4&crop=0.1606&crop=0.204&crop=0.8317&crop=0.4398&from=paste&height=536&id=u684860cf&margin=%5Bobject%20Object%5D&name=310d25dd5583fae4c382232d977a8ca.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=441813&status=done&style=shadow&taskId=uc10a7511-0af0-4846-a1db-cd2b9d4f7b4&title=&width=952)\n译码器\n![2022-12-12 21 49 30.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896370859-b4bb5c69-c239-44f6-b241-29d28749e93e.png#averageHue=%23edecec&clientId=u24c759c1-b7b9-4&crop=0.2998&crop=0.1061&crop=1&crop=0.8667&from=paste&height=559&id=u0a4fa4a6&margin=%5Bobject%20Object%5D&name=2022-12-12%2021%2049%2030.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=772028&status=done&style=shadow&taskId=u13667770-ca4e-4826-b66e-5642fd86bfc&title=&width=993)\ncpu先发出地址信号，等待信号稳定后，向译码器发送使能信号，选择使用的芯片进行操作。\n\n#### 字拓展与位拓展同时拓展\n\n![881d127f170d9769a728e9168cbbb83.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896657015-34f5ad14-b06b-450f-95bc-f18aef98d98b.png#averageHue=%23e0eeda&clientId=u24c759c1-b7b9-4&crop=0.1484&crop=0.1768&crop=0.7721&crop=0.7743&from=paste&height=497&id=u4144cee8&margin=%5Bobject%20Object%5D&name=881d127f170d9769a728e9168cbbb83.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1991330&status=done&style=shadow&taskId=uf0758c87-5b6d-4f60-bd7e-18ce2735871&title=&width=884)\n如：16K*4的芯片组成64k*8的存储器\n需要8片横向上两片，纵向上4片\n### 主存储器和cpu的连接\n#### 主存和cpu的硬连接\n主存和cpu的三组连线：地址总线(AB)，数据总线(AB)，控制总线(CB)\n![主存和cpu的硬连接.drawio.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670915463484-7ba2cc8d-bfd7-47e3-85fc-ce1390fd6eb7.png#averageHue=%23a5a5a5&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ud3b07818&margin=%5Bobject%20Object%5D&name=%E4%B8%BB%E5%AD%98%E5%92%8Ccpu%E7%9A%84%E7%A1%AC%E8%BF%9E%E6%8E%A5.drawio.png&originHeight=262&originWidth=392&originalType=binary&ratio=1&rotation=0&showTitle=true&size=29285&status=done&style=shadow&taskId=u7612b03e-6beb-476c-b384-fc15e00e5cd&title=%E4%B8%BB%E5%AD%98%E4%B8%8ECPU%E7%9A%84%E7%A1%AC%E8%BF%9E%E6%8E%A5 \"主存与CPU的硬连接\")\nMAR接收来自pc的指令地址或者地址形成部件的操作数地址，已确定要访问的单元。\nMDR是向主存写入数据或者读入数据的缓冲部件。\nMFC为工作完成信号\n#### 主存和cpu的软连接\n硬连接是物理基础连接，还需要软连接即cpu向主存发送读或者写命令，这是两个部件有效工作的关键。\nCPU对主存进行读写操作时，首先在地址总线给出地址信号，然后发送相应的读写命令并在数据总线上交换信息。\n![411f94e7dd5896be28e4018083a1f42.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670916367378-d6dfa975-e6b0-4fa3-b1e9-a2533380f771.jpeg#averageHue=%23e7e7e7&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u21b2297b&margin=%5Bobject%20Object%5D&name=411f94e7dd5896be28e4018083a1f42.jpg&originHeight=1769&originWidth=3812&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3937946&status=done&style=shadow&taskId=u39e3dafd-7654-4232-a811-bca846370e1&title=)\nM(MAR)是地址寄存器给的地址中的数据\n##### 异步读取的方式\nMFC是工作完成信号\nCPU与主存之间速度不匹配没有统一的时钟信号，由MFC通知cpu工作完成\n##### 同步的读取方式\nCPU与主存采用统一的时钟信号，cpu与主存配合，不需要主存工作完成信号\n### 主存的校验\n无奇偶校验\n奇偶校验\n错误校验与纠正(ECC)\n\n### 本节回顾\n![2022-12-12 21 42 24.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897107404-eae00de8-104f-4451-b2a5-b8cce0066dd1.png#averageHue=%23f0f0ef&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=524&id=u54464178&margin=%5Bobject%20Object%5D&name=2022-12-12%2021%2042%2024.png&originHeight=709&originWidth=1256&originalType=binary&ratio=1&rotation=0&showTitle=false&size=224006&status=done&style=shadow&taskId=ub373c8ba-2ffe-4e54-adf9-e5f5e5f07eb&title=&width=927.5077195243166)\n## 提高主存读写速度的技术\n### 双端口RAM\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670990062812-157dee84-d222-4814-b018-45b4afc92503.png#averageHue=%23ececec&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=160&id=u3ed4e2c4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=216&originWidth=432&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25028&status=done&style=shadow&taskId=u40bff7ba-f2ee-459f-b7ab-7c22b96445e&title=&width=319.0153939765165)\n即主存与cpu之间有多条数据线连接，优化了多核cpu访问同一根内存条的速度。\n需要两组完全独立的数据线，地址线，控制线。cpu，ram中也要有更复杂的控制电路\n两个端口对同一个主存操作的情况：\n\n1. 两个端口同时对不同的地址单元存取数据。\t\t没问题\n2. 两个端口同时对同一地址单元读取数据。\t\t\t没问题\n3. 两个端口同时对同一地址单元写入数据。\t\t\t写入错误\n4. 两个端口同时对同一地址单元，一个读入，一个写入。\t读出错误\n\n为了解决这个问题可以添加一个标志位，但这个标志位置0则暂时关闭一个端口，未被关闭的端口正常工作，被关闭的阻塞等待。\n\n### 多模块存储器\n#### 单体多字存储器\n每次并行的读取m个连续的字\n总线宽度也要拓展为m个字\n#### 多体并行存储器\n##### 高位交叉编址\n数据顺序存储在物理地址上也是连续的，在访问一次后需要等待恢复时间，才能继续下次的访问。\n##### 低位交叉编址\n数据在物理地址上是不连续的，分在不同的存储芯片上，每次访问后下次访问的数据在下一个存储芯片不需要等待就可以访问下个数据，等待数据恢复好，就能开始下次的访问。\n![2022-12-13 16 04 54.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991391393-8f1c5881-d703-44ff-9838-c0afb396acae.png#averageHue=%23e5e5e5&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u4986e13e&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2004%2054.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=564508&status=done&style=shadow&taskId=uc4724899-8eed-4ca0-875a-4e3ef19acdf&title=&width=1019.076952980539)\n存取时间r 存取周期t 假设t=4r，则需要t+4r就可以\n![2022-12-13 16 25 54.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991500750-41f06252-c99b-4733-b0ef-12cd39e4c67e.png#averageHue=%23e6e5e4&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=ue6e327e4&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2025%2054.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644354&status=done&style=shadow&taskId=ub047f339-2732-4fdc-bde3-af6b83d056d&title=&width=1019.076952980539)\n![2022-12-13 16 34 29.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991806199-4f3b81d7-8f53-41f8-8b7f-6a3633539b39.png#averageHue=%2379897d&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u525d4ac2&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2034%2029.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1047853&status=done&style=shadow&taskId=u23579969-0bfb-483a-b324-7ae1819b9a0&title=&width=1019.076952980539)\n![2022-12-13 16 30 04.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991827986-cc96ac13-8351-4dc1-bd1c-c2d43326b9d4.png#averageHue=%23e9e9e9&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u115bba1a&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2030%2004.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=415251&status=done&style=shadow&taskId=ud6f6ba5b-786b-45d6-bc3d-22703572403&title=&width=1019.076952980539)\n\n\n\n## 多体交叉存储技术\n## 固态硬盘SSD\n![2022-12-14 09 19 13.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991782446-fcf9f17c-ba57-4f24-b6aa-4b529b1bee9a.png#averageHue=%23e1e1e1&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u4e9ee9ae&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2019%2013.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=867323&status=done&style=shadow&taskId=u2e6ef93f-ed4d-4224-9f45-42a467d4650&title=&width=1417.8461954511847)\n\n\n\n\n## 高速缓冲存储器\n### cache基本原理\n#### 局部性原理\n时间局部性\n现在访问的数据在未来的一段时间内很可能也会被访问\n空间局部性\n在未来要用到的信息很可能与现在在用的信息在存储空间上是邻近的\n### 性能分析\n假设cache的命中率95%，速度是主存的5倍，假设主存和cache同时访问，则使用cache后性能的提升多少。\nh=95%\ncache的存取周期为t，主存5t\nT=0.95*t+(1-0.95)*5t=1.2t\n性能提升了5t/1.2t倍\n若先访问cache然后才主存\nT=0.95*t+(1-0.95)*6t\n![2022-12-14 09 44 42.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671021741406-b1dd1779-9ea1-4977-adf3-190c3dc7296f.png#averageHue=%23ededed&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0024f375&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2044%2042.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=572776&status=done&style=shadow&taskId=u9c5ad303-0008-4e0b-902d-13ca99b58c1&title=&width=1417.8461954511847)\n### cache和主存的映射方式\n首先cache和主存是分块的cache中的块和主存中的块大小相等，不过cache中的容量大小要小的多。对每个cache块都有一个标志位，来标志这个块是否有效。如果不设置的话默认初始化为0，不能正确表达映射。还有多位的标志位用来标志这个cache所映射的地址。\n#### 全相连映射\n全相连映射即随便映射，主存中的数据块可以在cache中随意的存放。\n![2022-12-14 10 00 51.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022121334-1dbfe533-9017-4e48-b593-17ac989a1d34.png#averageHue=%23ecebeb&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uac511611&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2000%2051.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=822207&status=done&style=shadow&taskId=u17403779-0b50-4584-a1a7-2e78fd16102&title=&width=1417.8461954511847)\n关于访存，计算机会访问cache的标志位，若与要访问的地址匹配则命中。\n![2022-12-14 10 03 55.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022143955-af4fcfe4-91b9-4da9-9ee8-45ee14e15763.png#averageHue=%23e9e9e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0c7ce0b7&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2003%2055.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=951066&status=done&style=shadow&taskId=u6736f811-1f47-4909-83ee-70a69a998f4&title=&width=1417.8461954511847)\n\n#### 直接映射\n直接映射\n![2022-12-14 10 07 05.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022156174-7a1779ec-7ad6-4c83-aa98-a2900d366318.png#averageHue=%23e8e4d9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u4e285f65&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2007%2005.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1024269&status=done&style=shadow&taskId=ud21e3c41-34db-472d-9811-4b99039794d&title=&width=1417.8461954511847)\n主存中的块会被存放到指定的cache块中，主存块对cache的块数量取mod即可得到。\n因为是取模所以相当于取地址码的最后几位即可。所需要的地址标志位少。\n\n#### 组相连映射\n![2022-12-14 10 11 21.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022198595-87cbd4b7-47d4-4923-8a8a-689e2377301a.png#averageHue=%23e3e0d9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u68c4798f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2011%2021.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1118364&status=done&style=shadow&taskId=u3084b323-cfde-4c1c-b7b3-b0dea0535db&title=&width=1417.8461954511847)\n对cache进行分组主存对cache的组进行取模来得到分配的指定小组，这些主存块只能分配到这个小组内，不过在小组内采用全相联映射。因为对有指定的cache小组块所以需要记录的标志根据cache的小组数量i可以少log2i\n\n![2022-12-14 09 53 28.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022058602-9b400035-9457-4a9e-967f-f04fdd3989ca.png#averageHue=%23e8e7e7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u5937f6b2&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2053%2028.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=738494&status=done&style=shadow&taskId=u3e008c5f-8348-42e0-a814-f56ff5db5ef&title=&width=1417.8461954511847)\n![2022-12-14 10 11 08.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022181872-d3f62b43-ec61-4de0-a8f8-f97781cc400f.png#averageHue=%23e8e8e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ua4387e74&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2011%2008.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=783120&status=done&style=shadow&taskId=u03999ae5-80d5-449f-875f-ac316a831d2&title=&width=1417.8461954511847)\n\n### cache的替换算法\n在采用组相联和全相联，主存往cache块中送数据块的时候cache满了，这时候就需要替换算法。\n#### 随机算法\n![2022-12-14 10 16 55.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022432481-9bcf4f75-38d2-4519-9063-3007d06fd923.png#averageHue=%23e7e5cb&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u22cb0c78&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2016%2055.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=614920&status=done&style=shadow&taskId=u439404ee-eb83-4255-99a6-03e14d55ce6&title=&width=1417.8461954511847)\n不管过去未来是否使用直接替换一个随机的块。\n#### 先进先出\n![2022-12-14 10 18 29.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022395846-8ebe678f-a188-4d35-acb6-bbffd09d311b.png#averageHue=%23e6e4c9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ue2273df5&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2018%2029.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=690789&status=done&style=shadow&taskId=u27715317-b9df-4e9f-b512-f2ff28d5513&title=&width=1417.8461954511847)\n![2022-12-14 10 19 56.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022403335-2b195d7f-1202-40d3-b681-8ff1e87fcad6.png#averageHue=%23e1e0ab&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ue59c5595&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2019%2056.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=804510&status=done&style=shadow&taskId=u59b38ac7-aa9c-4de6-8c03-bfde094b241&title=&width=1417.8461954511847)\n根据先进先出的队列，将最早进入的cache块替换掉。\n#### 最近最少使用\n![2022-12-14 10 22 59.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022411710-c2878811-f91f-4f67-966c-042af0286051.png#averageHue=%23d5d57d&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub3309d32&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2022%2059.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=754987&status=done&style=shadow&taskId=ua5181e8e-87ff-4816-b519-41117158901&title=&width=1417.8461954511847)\n使用计数器记录当cache被使用后计数器清0，否则+1，最大不超过cache中数据块的数量。\n当有新的数据需要替换则替换计数器最大的那块。\n#### 最不经常使用\n对经常使用的块的计数器+1，没次替换掉较小的，如果这段时间在刷抖音，则抖音的块计数器的数值很高短时间下不来，为后续其他应用的使用很不方便。![2022-12-14 10 32 46.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022419298-7ee5fcbd-89cf-4c69-ae49-636dbd035080.png#averageHue=%23e2dfdf&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u41b839fa&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2032%2046.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=534600&status=done&style=shadow&taskId=ubfc462d7-298c-47ed-aaa3-c9f57591db9&title=&width=1417.8461954511847)\n### cache的写策略\n\n![2022-12-14 10 40 47.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022454042-dba38946-45b5-49c4-8af0-3bedbd2b99a3.png#averageHue=%23eaeaea&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=301&id=u63e3894b&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2040%2047.png&originHeight=407&originWidth=720&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112329&status=done&style=shadow&taskId=u474a5c58-b262-4b2c-a8a7-06a215e33cf&title=&width=531.6923232941942)\n#### 写命中\n全写法：对cache命中时在cache和主存中全部更新数据，并且在写入主存时使用写缓冲，把数据块写入缓冲队列中，缓冲块速度相对主存要快。当缓冲块满了之后需要cpu阻塞等待缓冲区的写入。\n写回法：cache命中之后只写入cache，只有当这块被替换的时候才写回去主存。对于写回法需要一个脏位的标志位来表明数据被修改过。\n![2022-12-14 10 37 24.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022587499-8fe69f83-8a26-4ef0-b473-5a9224e813f5.png#averageHue=%23ebe9e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0a8c5666&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2037%2024.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=664807&status=done&style=shadow&taskId=ua7cb51a9-e031-40c1-9bdb-5fb778ea546&title=&width=1417.8461954511847)\n\n![2022-12-14 10 35 40.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022576717-2ef8b9f3-359f-4386-ac59-508af7de712a.png#averageHue=%23eae7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub90ffc2f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2035%2040.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=708881&status=done&style=shadow&taskId=udf181796-4581-499d-b3de-272e52489e2&title=&width=1417.8461954511847)\n\n![2022-12-14 10 37 52.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022537125-17229ff3-2650-4b9a-a966-d0244f558790.png#averageHue=%23e9e7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u6b5b8d75&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2037%2052.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=757679&status=done&style=shadow&taskId=uad94c6ed-10a9-46b0-a3d1-a993438076d&title=&width=1417.8461954511847)\n\n#### 写不命中\n非写分配法：当CPU对cache不命中时候只写入主存不调入cache\n写分配法：写入主存还读入cache\n![2022-12-14 10 38 58.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022530365-b18257e5-8d20-4b06-a03b-0220cb00b7e4.png#averageHue=%23ebeae9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=0.8776&from=paste&height=798&id=u2895c86d&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2038%2058.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=655953&status=done&style=shadow&taskId=u2ebe2d81-6fba-4a72-bed6-a5c5c3f4f97&title=&width=1418)\n### 多级缓冲\n\n![2022-12-14 10 40 04.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022595152-96eb98b5-c072-40c0-9bb0-4739e827137c.png#averageHue=%23d3d2d1&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0cb5affa&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2040%2004.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644382&status=done&style=shadow&taskId=uc2d19840-38c7-482d-b8ba-ee0ef778526&title=&width=1417.8461954511847)\n## 虚拟存储器\n虚拟存储器由主存和磁盘存储器组成。这两个存储器在硬件和操作系统的联合下完成工作。\n同cache和主存一样对磁盘存储器分页，在需要的时候将数据从磁盘加载到主存当中。\n\n虚拟存储器将主存或辅存的地址空间统一编址,形成一个庞大的存储空间。在这个大空间里,用户可以自由编程,完全不必考虑程序在主存是否装得下以及这些程序将来在主存中的实际存放位置。\n用户编程的地址称为虚地址或逻辑地址,实际的主存单元地址称为实地址或物理地址,显然,虚地址要比实地址大得多。\n在实际的物理存储层次上,所编程序和数据在操作系统管理下,先送入磁盘,然后操作系统将当前运行所需要的部分调人主存,供 CPU 使用,其余暂不运行部分留在磁盘中。\n程序运行时,CPU 以虚地址来访问主存,由辅助硬件找出虚地址和实地址之间的对应关系,并判断这个虚地址指示的存储单元内容是否已装人主存。如果已在主存中,则通过地址变换，CPU 可直接访问主存的实际单元;如果不在主存中,则把包含这个字的一页或一个程序段调人主存后再由 CPU 访问。如果主存已满，则由替换算法从主存中将暂不运行的-页或一段调回辅存,再从辅存调人新的一页或一段到主存。从原理的角度看,虚拟存储器和 Cache-主存有不少相同之处。事实上,前面提到的各种方法是先应用于虚拟存储器中后来才发展到 Cache-主存层次中的。\n### 页式存储\n页表\n![75503b93ec8e29a22136244b2f5a6f9.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1671082763884-efc8d387-8703-44e5-997a-7d7226b2fa49.jpeg#averageHue=%23e6e6e6&clientId=uf565cf03-2fc5-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=611&id=u3928a025&margin=%5Bobject%20Object%5D&name=75503b93ec8e29a22136244b2f5a6f9.jpg&originHeight=1564&originWidth=1280&originalType=binary&ratio=1&rotation=90&showTitle=false&size=560219&status=done&style=none&taskId=udd6f59a6-6f98-4216-b60f-3b8cbf8fd66&title=&width=499.67694091796875)\n![2022-12-14 10 49 28.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022608065-66e83f89-d83c-498b-b404-e3c5e0c16bf1.png#averageHue=%23ece7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9cc5a594&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2049%2028.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=583989&status=done&style=shadow&taskId=u49be1cd1-ab1c-49da-9bee-74621512583&title=&width=1417.8461954511847)\n![2022-12-14 10 54 50.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022614641-b87423e3-e2fd-47e2-b1fa-0f358e780bd0.png#averageHue=%23e9e5e4&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u7c116a6f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2054%2050.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=686735&status=done&style=shadow&taskId=uc28ebb3c-5558-429a-896c-9813453ac67&title=&width=1417.8461954511847)\n![2022-12-14 10 57 54.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022619926-7b862abd-6d44-47cf-8bf9-aed76c858087.png#averageHue=%23ebe9e7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uf00b7a73&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2057%2054.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=744614&status=done&style=shadow&taskId=u0dabc67b-ade5-4d01-92f5-d9af80f3349&title=&width=1417.8461954511847)\n![2022-12-14 11 01 39.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022625276-3c48590b-c7b6-48ea-bdba-d1e98911fde2.png#averageHue=%23eceae7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0ccc535b&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2001%2039.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=665284&status=done&style=shadow&taskId=u6f343dce-49d1-4ad0-a6bf-587c5f7ba51&title=&width=1417.8461954511847)\n![2022-12-14 11 02 04.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022630272-3a074d42-1f44-441e-8213-8a3186495a8f.png#averageHue=%23ebe7df&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9b3497c9&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2002%2004.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=777004&status=done&style=shadow&taskId=ue06c216e-8495-4366-8fcd-58e60341588&title=&width=1417.8461954511847)\n![2022-12-14 11 03 41.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022636206-432e458f-c1f6-4712-b015-06244388a2f8.png#averageHue=%23eae7de&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u50bceef0&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2003%2041.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=819812&status=done&style=shadow&taskId=u1b37b3bb-98c5-4eff-b086-227f595f975&title=&width=1417.8461954511847)\n![2022-12-14 11 04 34.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022641508-735a9e89-b612-4337-8efd-ccfd5c134238.png#averageHue=%23f2f0ef&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9c88909f&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2004%2034.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=592589&status=done&style=shadow&taskId=uc3ae885a-ba9a-467b-a45f-03f6ed0662f&title=&width=1417.8461954511847)\n![2022-12-14 11 07 13.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022647103-eabe16b3-3406-44c8-849c-e74ff307c301.png#averageHue=%23ebe7e1&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u5c6830ec&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2007%2013.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1033429&status=done&style=shadow&taskId=u2aa6f2f6-3983-40cc-b70f-7e8002818e3&title=&width=1417.8461954511847)\n![2022-12-14 11 11 43.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022653928-483a6452-f731-4ea6-acc4-19c90f6ad3d8.png#averageHue=%23afaead&clientId=ud7de39bb-26e9-4&crop=0.1453&crop=0.0626&crop=0.6757&crop=0.5785&from=paste&height=423&id=u64946b63&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2011%2043.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=829624&status=done&style=shadow&taskId=u61a65403-1c5d-451a-9384-accb6c97d48&title=&width=752)\n![2022-12-14 11 14 19.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022671809-e7cd90f6-3d14-4359-9090-40c829529bf5.png#averageHue=%23868482&clientId=ud7de39bb-26e9-4&crop=0.1419&crop=0.066&crop=0.6806&crop=0.61&from=paste&height=363&id=u626c2495&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2014%2019.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1492413&status=done&style=shadow&taskId=u72354868-b245-488f-9606-68e6575fc96&title=&width=644.9923095703125)\n![2022-12-14 11 14 37.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022678838-f787410b-6909-4b0d-b148-df6bbffea9c1.png#averageHue=%23e8e3e2&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=431&id=u6da600f8&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2014%2037.png&originHeight=583&originWidth=1032&originalType=binary&ratio=1&rotation=0&showTitle=false&size=223798&status=done&style=shadow&taskId=u0f69980b-8a71-4da6-a7c7-c938d95edfe&title=&width=762.0923300550118)\n页表是慢表，存在着cache和主存一样的关系的快表。\n### 段式存储\n同分页一样，只不过他是按程序段划分。大小参差不齐\n### 段页式存储\n\n# 中央处理器\n## 概念\n中央处理器由控制器和运算器组成，是整个计算机的核心所在。\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/23135285/1671087529901-3b9a976a-2af5-4c9e-8644-5394008d324c.png#averageHue=%231b1b1b&clientId=uf565cf03-2fc5-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=665&id=uabb14610&margin=%5Bobject%20Object%5D&name=image.png&originHeight=900&originWidth=972&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23077&status=done&style=none&taskId=u67be6af6-03e6-4b7e-a534-6be18abbc40&title=&width=717.7846364471623)\n控制器的主要功能如下 ：\n1. 从主存中取出一条指令,并指出下一条指令在主存中的位置\n2. 对指令进行译码或测试,产生相应的操作控制信号，以便启动规定的动作.\n3. 指挥并控制 CPU主存和输人输出设备之间的数据流动方向。\n运算器的主要功能如下：\n1. 执行所有的算术运算。\n2. 执行所有的逻辑运算，并进行逻辑测试。\n\n![9bb3489df9e6f00bf1e1fa2764a0a00.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1671083834847-ae030b1f-c6a7-4c5d-8509-5a22d0612ac7.jpeg#averageHue=%2376716c&clientId=uf565cf03-2fc5-4&crop=0&crop=0.1855&crop=1&crop=0.7614&from=drop&height=1280&id=u74a41fab&margin=%5Bobject%20Object%5D&name=9bb3489df9e6f00bf1e1fa2764a0a00.jpg&originHeight=1280&originWidth=1706&originalType=binary&ratio=1&rotation=0&showTitle=false&size=556039&status=done&style=none&taskId=u6f890811-1bea-43da-be90-58a6051403f&title=&width=1706)\n![[cpu的内部结构.png]]\n## 运算器和控制器\n### 运算器的基本组成\n![[运算器的组成.png]]\n###  控制器的基本组成\n![[控制器的组成.png]]\n### 控制器的基本结构\n![[控制器的基本结构.png]]\n### 运算器和控制器的功能\n![[运算器和控制器的功能.png]]\n### cpu 单总线结构\n![[cpu单总线结构.png]]\n要在各个寄存器中传递数据，只需要用 cu 控制个寄存器或者其他单元的控制信号，\n如 pc->mar\nCu 给 pc 的读控制线一个信号，mar 的输入控制线一个信号这样数据就会通过总线传递。\nAlu 逻辑运算单元，只能同时输入才能有效。所以信号不可以分两次送进 alu，这时候就需要 acc 累加寄存器，提前将一个数加载到 acc 中这样就可以和输入数据同时进入 alu。\n## 指令执行的过程\n### 指令周期\n指令周期：CPU从主存中取出并执行一条指令所需的全部时间。\n![[指令周期.png]] \n指令周期常用若干个机器周期表示，机器周期又叫CPU周期。\n一个机器周期又分为若干个时钟周期。\n**时钟周期**又叫CPU时钟周期，是CPU操作的最基本单位。\n计算机的主频3.0GHz说的是一秒钟计算机可以有3.0G个时钟周期。\n![[指令周期-机器周期-时钟周期.png]]\n一些指令的周期\n![[一些指令的周期.png]]\n一般一个指令周期的最后会有中断周期，这段时间内会检测来自外部的中断信息，如果有中断信号，则将当前pc保存到堆栈寄存器当中（记得sp-1），保存当前状态。等待中断信号处理后恢复运行。\n### 指令周期的流程控制\n![[指令周期的流程控制.png]]\n对应四个周期存在四个触发器，指定触发器置1表示这个指令周期正处于这个状态\n![[指令周期的触发器.png]]\n### 取指周期\n![[取指周期.png]]\n### 间指周期\n\n### 中断周期\n![[中断周期.png]]\n### 执行周期\n\n### 指令执行的方案\n![[指令执行的方案.png]]\n### 小节回顾\n![[指令周期的小节回顾.png]]\n\n##  硬布线控制器\n### Cu 控制单元结构\n![[硬布线控制器.png]]\nCu 控制单元接收指令寄存器过来的经过译码器的指令。\n操作码译码器类似地址译码器，将输入的指令转为合适的输出，一个指令对应一条输出。操作码有 n 位译码器就有 2<sup>n</sup> 个输出\n节拍发生器接收时钟信号，有 n 个输出表示一个指令周期分为 N 个时钟周期，一般这个长度由操作时间最长的访问主存单元的时间确定。\nCu 内部集成四个触发器，用来表示指令执行的第几个周期\nCu 接收其他部分的单元的反馈信息\nCu 根据上面输入的不同的信号，输出 n 个控制信号表示有 N 个位操作\n![[微指令的线路的设计.png]]\n设计指令的时候，考虑把前后不依靠不冲突的指令设计在一个周期\n\n### 硬布线控制器的设计\n设计步骤：\n1. 分析每个阶段的微操作序列（取址，间址，执行，中断）在指令的不同阶段有哪些微操作\n2. 选择 cpu 的控制方式 （定长机器周期和不定长机器周期）这里一个机器周期安排 3 个节拍信号，即 3 个时钟信号\n3. 安排微操作时序，将机器周期的微操作序列用 3 个时钟信号完成\n4. 电路的设计，确定每个微操作的逻辑表达式并用电路实现\n取值周期：（大多数的微操作的取值周期都是这样）\n1. 将要执行的操作的地址从 pc 程序计数器读入 MAR\n2. 给主存一个读数据信号\n3. 将 MAR 指向的地址从内存单元中读到 MDR 数据寄存器\n4. Pc 程序计数器加一\n5. 数据寄存器将指令传给 ir 指令寄存器\n6. Ir 将指令操作码给指令译码器\n间址周期：（指令中的地址是一个间接地址，这时候就需要间接寻址）\n1. 指令寄存器中的地址传递给 MAR\n2.  给主存一个读数据信号\n3. 将 MAR 指向的地址从内存单元中读到 MDR 数据寄存器\n4. 将新的数据替换 ir 中的操作数\n可以看出上面两个周期都有用到同样的操作，在分析完全部周期后统计制表就可以写出指定操作的逻辑表达式。然后就可以设计电路。\n这种硬布线控制器每增加一种指令操作就需要重新设计电路，很是复杂，扩充指令很困难，不过由于由硬件设计执行速度很快。因此常常用在 risc精简指令集。\n## 微程序控制器\n\n\n\n# 总线\n# 外部设备\n# 输入输出\n\n","slug":"学习笔记/计算机组成原理","published":1,"updated":"2023-05-19T14:07:31.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oan000rwwvnddpw5s9t","content":"<h1 id=\"计算机的硬件组成\"><a href=\"#计算机的硬件组成\" class=\"headerlink\" title=\"计算机的硬件组成\"></a>计算机的硬件组成</h1><p>五大部件 输入设备，输出设备，存储器，运算器，控制器<br>主机&#x3D;（cpu&#x3D;控制器+运算器）+ 主存<br>计算机主要性能指标<br>机器字长 数据通路宽度 主存容量 运算速度 </p>\n<h1 id=\"数值的表示\"><a href=\"#数值的表示\" class=\"headerlink\" title=\"数值的表示\"></a>数值的表示</h1><p>整数<br>浮点数<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670639742503-e35fc398-6d2a-4822-a358-e978d4b26bf4.png#averageHue=%23f7f7f7&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5ec83e2a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=861&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65413&status=done&style=shadow&taskId=uef3daf7a-b47a-4342-bd9a-10088f50ad3&title=&width=635.8154032726407\" alt=\"image.png\"><br><strong>数据的表示范围 原码 补码</strong><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670639976554-7f79be83-3ff7-4a5a-9e8c-4a95dd81840c.png#averageHue=%23f7f7f7&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5282d5e4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=734&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52419&status=done&style=shadow&taskId=u1505ba14-fbf5-4d12-931f-690e75cc662&title=&width=542.0307851360258\" alt=\"image.png\"></p>\n<h1 id=\"指令系统\"><a href=\"#指令系统\" class=\"headerlink\" title=\"指令系统\"></a>指令系统</h1><h2 id=\"3-1指令格式\"><a href=\"#3-1指令格式\" class=\"headerlink\" title=\"3.1指令格式\"></a>3.1指令格式</h2><h3 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h3><p>![[指令系统.jpg]]<br>指令的基本格式是<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1665565710375-3f93fbcd-5236-4903-ab53-d061da7e6b9c.jpeg\"><br> <img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640240207-8c50abf7-43a0-4e34-b085-d6fb1ad850c8.png#averageHue=%23f2f2f2&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=263&id=ud63cabb4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=356&originWidth=971&originalType=binary&ratio=1&rotation=0&showTitle=false&size=86487&status=done&style=shadow&taskId=u845e7e19-8f2a-48fc-a33d-23d5465e216&title=&width=717.0461748870314\" alt=\"image.png\"><br>编制方式：字节，字<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640768024-7f13b669-edc7-48a6-9f34-179ccd7a0f2a.png#averageHue=%23fafefd&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=168&id=u2a170f39&margin=%5Bobject%20Object%5D&name=image.png&originHeight=228&originWidth=790&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45653&status=done&style=shadow&taskId=uaf41fd05-3698-44ab-ada8-0d8762debfb&title=&width=583.384632503352\" alt=\"image.png\"></p>\n<h2 id=\"IEEE754标准的浮点数\"><a href=\"#IEEE754标准的浮点数\" class=\"headerlink\" title=\"IEEE754标准的浮点数\"></a>IEEE754标准的浮点数</h2><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>数符</th>\n<th>阶码</th>\n<th>尾数</th>\n<th>总位数</th>\n<th>偏置值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单精度浮点型</td>\n<td>1</td>\n<td>8</td>\n<td>13</td>\n<td>31</td>\n<td>127</td>\n</tr>\n<tr>\n<td>双精度浮点型</td>\n<td>1</td>\n<td>11</td>\n<td>52</td>\n<td>64</td>\n<td>1023</td>\n</tr>\n<tr>\n<td>临时浮点数</td>\n<td>1</td>\n<td>15</td>\n<td>64</td>\n<td>80</td>\n<td>16383</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1666874378699-8f66276f-f4a2-491f-a95e-8d6812d26106.png#averageHue=%23f7f7f7&clientId=u0885d815-63db-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u38b16a3f&margin=%5Bobject%20Object%5D&name=Screenshot_20221027_203732.png&originHeight=269&originWidth=743&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15675&status=done&style=shadow&taskId=ud21cc878-db16-460b-ae27-240e2ca7a1a&title=\" alt=\"Screenshot_20221027_203732.png\"><br>将（100.25）转为短浮点数<br>基本流程：</p>\n<ol>\n<li>整数转换，除二取余</li>\n<li>小数转换，乘二取整</li>\n<li>结果组合</li>\n<li>科学记数法</li>\n<li>指数偏移</li>\n<li>拼接组合</li>\n</ol>\n<h5 id=\"整数转换\"><a href=\"#整数转换\" class=\"headerlink\" title=\"整数转换\"></a>整数转换</h5><p>100&#x2F;2&#x3D;50余0<br>50&#x2F;2&#x3D;25余0<br>25&#x2F;2&#x3D;12余1<br>12&#x2F;2&#x3D;6余0<br>6&#x2F;2&#x3D;3余0<br>3&#x2F;2&#x3D;1余1<br>1<br>100转换为（1100100）2</p>\n<h5 id=\"小数取整\"><a href=\"#小数取整\" class=\"headerlink\" title=\"小数取整\"></a>小数取整</h5><p>0.25<em>2&#x3D;0.5取0<br>0.5</em>2&#x3D;1 取 1<br>0.25转为 （0.01）2 </p>\n<h5 id=\"组合结果\"><a href=\"#组合结果\" class=\"headerlink\" title=\"组合结果\"></a>组合结果</h5><p>100.25&#x3D;（1100100.01）2</p>\n<h5 id=\"科学计数法\"><a href=\"#科学计数法\" class=\"headerlink\" title=\"科学计数法\"></a>科学计数法</h5><p>1100100.01&#x3D;1.10010001*26</p>\n<h5 id=\"指数偏移\"><a href=\"#指数偏移\" class=\"headerlink\" title=\"指数偏移\"></a>指数偏移</h5><p>偏移量127+6&#x3D;133<br>阶码&#x3D;133&#x3D;（10000101）2</p>\n<h5 id=\"拼接组合\"><a href=\"#拼接组合\" class=\"headerlink\" title=\"拼接组合\"></a>拼接组合</h5><p>数符+阶码+尾数<br>0  \t10000101  10010001<br>尾数最高位默认隐含一个1<br>尾数实际是（1.10010001）2</p>\n<h4 id=\"短浮点数到整数\"><a href=\"#短浮点数到整数\" class=\"headerlink\" title=\"短浮点数到整数\"></a>短浮点数到整数</h4><p>1 10000011 10010010000000000000000<br>符号位 1 为负数<br>阶码 10000011  &#x3D; 131 减去偏移值 127 &#x3D;4<br>尾数1.1001001<br>组合-1.1001001*24<br>二进制-11001.001&#x3D;25.125</p>\n<h5 id=\"阶码全零，全一的情况\"><a href=\"#阶码全零，全一的情况\" class=\"headerlink\" title=\"阶码全零，全一的情况\"></a>阶码全零，全一的情况</h5><p>作为保留作他用，正常取值范围1～254即-126～127<br>全零表示机器零<br>全一时候 尾数为0表示正负无穷</p>\n<h4 id=\"数据的机器运算\"><a href=\"#数据的机器运算\" class=\"headerlink\" title=\"数据的机器运算\"></a>数据的机器运算</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640926068-87d37634-ef59-4f39-9f70-9c6a7d3c29fd.png#averageHue=%23f6f6f6&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=298&id=uc99fea7b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=403&originWidth=830&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56491&status=done&style=shadow&taskId=ud596e95b-c1e0-448a-afe4-ec158ea3c17&title=&width=612.9230949085851\" alt=\"image.png\"><br>除法不需要</p>\n<h1 id=\"存储系统和结构\"><a href=\"#存储系统和结构\" class=\"headerlink\" title=\"存储系统和结构\"></a>存储系统和结构</h1><p><strong>重点</strong><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648055137-c662e2a1-8522-47bb-a28d-df60d7c516db.png#averageHue=%23eed7d4&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=380&id=uef16f568&margin=%5Bobject%20Object%5D&name=image.png&originHeight=515&originWidth=1080&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114418&status=done&style=shadow&taskId=uea4e5adc-8c0a-4517-be6a-b6bc524d872&title=&width=797.5384849412914\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648077488-bbeedf7f-34bc-4dfb-9b50-eabbbbe55ec9.png#averageHue=%23e6cfcd&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=466&id=u317ace61&margin=%5Bobject%20Object%5D&name=image.png&originHeight=631&originWidth=1149&originalType=binary&ratio=1&rotation=0&showTitle=false&size=168081&status=done&style=shadow&taskId=u4a382775-6ab1-486a-b39d-2a14a78bb72&title=&width=848.4923325903184\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648088433-00c41f17-b8fa-4769-b31b-31a740cc93f4.png#averageHue=%23e5cecb&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=478&id=u46b95248&margin=%5Bobject%20Object%5D&name=image.png&originHeight=647&originWidth=1134&originalType=binary&ratio=1&rotation=0&showTitle=false&size=190845&status=done&style=shadow&taskId=u0694b531-6f1d-4cfd-8302-b0710aa1f9c&title=&width=837.415409188356\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648104764-e442ee94-d911-4764-a090-496c787ed8ca.png#averageHue=%23eed8d6&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=419&id=uca23510f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=567&originWidth=1112&originalType=binary&ratio=1&rotation=0&showTitle=false&size=110000&status=done&style=shadow&taskId=ub27c6bad-c942-49f9-adb1-6d49a0a34ac&title=&width=821.1692548654778\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648139089-c102a299-5edd-4bbb-9d0a-ff89670bec83.png#averageHue=%23f5f4f3&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=602&id=ue9f54940&margin=%5Bobject%20Object%5D&name=image.png&originHeight=815&originWidth=1439&originalType=binary&ratio=1&rotation=0&showTitle=false&size=122502&status=done&style=shadow&taskId=u4e1c3982-5628-4382-ae0d-49b33496235&title=&width=1062.6461850282576\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648197344-c8c568d5-d600-4ec4-8322-0eee42f737bc.png#averageHue=%23efeded&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=607&id=uc2361fe6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=822&originWidth=663&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119386&status=done&style=shadow&taskId=u246eb774-1a5a-4799-94a3-f1ec5fa1a9b&title=&width=489.6000143667372\" alt=\"image.png\"><br>编址方式 1. 字节编址 2. 字编址<br><strong>字节编址</strong>以字节数表示存储容量<br><strong>字编址</strong>以字的单元数<em>机器字长表示存储容量<br>例子：64K</em>16 这个是字编址，64k个存储单元与机器字长16位<br>转为字节编址为128K*8 这个8是8位，8位为一个字节，这就是字节编址</p>\n<h5 id=\"1-某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：\"><a href=\"#1-某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：\" class=\"headerlink\" title=\"1.某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：\"></a>1.某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：</h5><p>（1）该机所允许的最大主存空间是多少？<br>（2）若每个模块板为32K×8位，共需几个模块板？<br>（3）每个模块板内共有几片RAM芯片？<br>（4）共有多少片RAM？<br>（5）CPU如何选择各模块板？<br>218 &#x3D;262144位&#x3D;262144&#x2F;8 b&#x3D;32768b&#x3D;<br>1kb&#x3D;1024b<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724588220-1d6b592a-646a-4cfb-b3e7-ec8aae91ed91.png#averageHue=%23eeeeee&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=270&id=ua1b2ad25&margin=%5Bobject%20Object%5D&name=image.png&originHeight=366&originWidth=668&originalType=binary&ratio=1&rotation=0&showTitle=true&size=61531&status=done&style=shadow&taskId=u28096fc4-39d8-4f64-bd51-22a7510162a&title=%E4%B8%BB%E5%AD%98%E7%9A%84%E6%9E%84%E6%88%90&width=493.2923221673913\" alt=\"image.png\" title=\"主存的构成\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724600435-6d586353-5f8c-4882-9669-b45d56c5e4ec.png#averageHue=%23f7f7f7&clientId=u38b7a52e-dc1f-4&crop=0&crop=0.0759&crop=1&crop=0.7957&from=paste&height=343&id=u92a222ad&margin=%5Bobject%20Object%5D&name=image.png&originHeight=464&originWidth=440&originalType=binary&ratio=1&rotation=0&showTitle=true&size=45793&status=done&style=shadow&taskId=u0c867578-9eac-4b44-a29d-c834d1b4ecc&title=%E5%AD%98%E5%82%A8%E5%85%83&width=325\" alt=\"image.png\" title=\"存储元\"><br>mos管上接受到高电平，mos管就导通这时如果给这条线输入高电平，电容两侧就会产生电压，电容就会充电，这就相当于写入了一个二进制位。如果电容有电导通这条线，在这条线上就会读出二进制1，否者为0。这就是最小的存储单位，存储元。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724595914-7a428815-1b7d-49c6-b6e3-1fbd233c885a.png#averageHue=%23f7f5f5&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=0.5409&from=paste&height=268&id=u874c96ca&margin=%5Bobject%20Object%5D&name=image.png&originHeight=363&originWidth=1183&originalType=binary&ratio=1&rotation=0&showTitle=true&size=104002&status=done&style=shadow&taskId=ua3128c8b-fd64-4a91-a4d4-fdd67f24993&title=%E5%AD%98%E5%82%A8%E5%8D%95%E5%85%83&width=874\" alt=\"image.png\" title=\"存储单元\"><br>这是一个存储单元，由多个存储元构成，期中红色的是自选线，绿色的是数据线，片选线导通就可以对数据进行读写，而具体的是读是写由数据线来控制。期中数据线有8条表示一次可以读取8个比特位，这就与机器字长有关系了。多个存储单元就构成存储体。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724592572-e28044b5-8f73-4b4d-a79b-a752879a856a.png#averageHue=%23eeeeee&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=275&id=u8c458cf2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=372&originWidth=718&originalType=binary&ratio=1&rotation=0&showTitle=true&size=46286&status=done&style=shadow&taskId=u74244fed-77d6-4cff-972d-6db6c00ae83&title=%E5%AD%98%E5%82%A8%E4%BD%93&width=530.2154001739326\" alt=\"image.png\" title=\"存储体\"><br>选择哪个存储单元由地址寄存器来确定，而数据读取写入最后由数据寄存器来负责。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670752287797-6581ffe8-7ea4-45da-8838-dd135bc2191f.png#averageHue=%23f0ecec&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=0.9574&from=drop&height=1080&id=u04fe5801&margin=%5Bobject%20Object%5D&name=9eb83e6ec9d7c4dd0879275eac0d746.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=818476&status=done&style=shadow&taskId=uef4440ad-dbd9-4540-a541-38171cb2de6&title=&width=1920\" alt=\"9eb83e6ec9d7c4dd0879275eac0d746.png\"><br>地址寄存器接收来自地址总线的地址，通过地址译码器选择指定的存储单元。<br>MAR地址寄存器有n位，则能映射2n个存储单元，图中的机器存储大小可以表示为：<br>23 * 8bit &#x3D; 23 * 1B &#x3D; 8 * 1B &#x3D; 8B<br>其中23为存储单元的大小，数量 8bit 为一个存储单元（存储字&#x2F;机器字长）大小<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670753529349-4d7edd60-7a45-44d8-9d1a-7988d56a3135.png#averageHue=%23f0ecec&clientId=u38b7a52e-dc1f-4&crop=0.0211&crop=0.015&crop=0.9817&crop=0.9349&from=drop&height=1037&id=u420f19ec&margin=%5Bobject%20Object%5D&name=13311c99-2ed4-410f-99f8-9d5eb53e1b44.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=949557&status=done&style=shadow&taskId=uaf979647-db83-4f23-8e0e-0620a48792f&title=&width=1844\" alt=\"13311c99-2ed4-410f-99f8-9d5eb53e1b44.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670753832191-bf142f93-6c11-456a-a1ed-2c6965d3adaa.png#averageHue=%23ede1d9&clientId=u38b7a52e-dc1f-4&crop=0.0229&crop=0&crop=1&crop=1&from=paste&height=229&id=uf1c01d68&margin=%5Bobject%20Object%5D&name=image.png&originHeight=317&originWidth=711&originalType=binary&ratio=1&rotation=0&showTitle=false&size=141155&status=done&style=shadow&taskId=u82e49bf0-0c91-45a1-a588-615909e0c1a&title=&width=513\" alt=\"image.png\"><br>在译码器，MAR,MDR上都连接着控制电路，控制电路当电信号稳定后才可以进行下一步。<br>控制电路的输入片选线低电平有效，只有片选线为低电平时候这个控制电路才有效，读写电路是控制是进行读操作还是写操作。读写控制线有两条线的有一条线的。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670754163624-59553be5-e961-4160-b1bb-77c5029891a8.png#averageHue=%23ede8e7&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u34cc0fab&margin=%5Bobject%20Object%5D&name=cc150a47e9d83db39e9c3029a8be807.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=true&size=1294833&status=done&style=shadow&taskId=u3ddd1ff5-42d4-4fa3-909c-b09301177db&title=%E5%86%85%E5%AD%98%E6%9D%A1%E5%8F%AF%E8%83%BD%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%86%E7%89%87%EF%BC%8C%E9%80%9A%E8%BF%87%E7%89%87%E9%80%89%E7%BA%BF%E6%9D%A5%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E7%9A%84%E9%82%A3%E4%B8%80%E6%9D%A1\" alt=\"cc150a47e9d83db39e9c3029a8be807.png\" title=\"内存条可能有多个分片，通过片选线来选择需要的那一条\"><br>如果分析一个芯片至少多少个引脚：有vcc，GND，地址总线，数据总线的条数，控制电路的片选线，读写控制线。</p>\n<hr>\n<p><strong>1. 已知某64位机主存采用半导体存储器，其地址码为26位，若使用256K×16位的DRAM芯片组成该机所允许的最大主存空间，并选用模块板结构形式。</strong>（1） 每个模块板为1024K×64位，共需几个模块板？<br>（2） 每个模块板内共有多少DRAM芯片?<br>（3）主存共需多少DRAM芯片? CPU如何选择各模块板？<br>地址码26位，64位的机器，机器字长64<br>机器内存容量：226<em>64bit &#x3D; 4GB<br>1024K&#x3D;1024</em>1024&#x3D;210<em>210<br>每个模块板主存容量：1024K×64bit&#x3D;220</em>64bit<br>芯片：256K×16&#x3D;218×16bit</p>\n<ol>\n<li>226<em>64bit&#x2F;220</em>64bit&#x3D;226-20 &#x3D;26&#x3D;**64 **</li>\n<li>220*64bit&#x2F;218×16bit&#x3D;24&#x3D;<strong>16</strong></li>\n<li>主存共需DRAM芯片为：16×64&#x3D;1024 (片)</li>\n</ol>\n<p>每个模块板有16片DRAM芯片，构成容量为1024K×64位，需20根地址线(A19<del>A0)完成模块板内存储单元寻址。一共有64块模块板，采用6根高位地址线(A25</del>A20)，通过6：64译码器译码产生片选信号对各模块板进行选择。<br>位扩展 4片256K×16—&gt;256K×64<br>字扩展：4组（256K×64）à1024K×64位</p>\n<h2 id=\"主存储器的性能指标\"><a href=\"#主存储器的性能指标\" class=\"headerlink\" title=\"主存储器的性能指标\"></a>主存储器的性能指标</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670913171682-5aaf666e-9379-4b7a-9b65-ae61ce736de3.png#averageHue=%230c0b08&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u04ae261e&margin=%5Bobject%20Object%5D&name=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png&originHeight=828&originWidth=1770&originalType=binary&ratio=1&rotation=0&showTitle=true&size=197607&status=done&style=shadow&taskId=ub7d1e487-ebf5-4326-8ab6-db7f8c1270d&title=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE\" alt=\"思维导图.png\" title=\"思维导图\"></p>\n<h2 id=\"半导体随机存储器（RAM）\"><a href=\"#半导体随机存储器（RAM）\" class=\"headerlink\" title=\"半导体随机存储器（RAM）\"></a>半导体随机存储器（RAM）</h2><h3 id=\"DRAM与SRAM的对比\"><a href=\"#DRAM与SRAM的对比\" class=\"headerlink\" title=\"DRAM与SRAM的对比\"></a>DRAM与SRAM的对比</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670839412544-cd9324c0-16f2-4d7e-bda2-337f9a642a7f.png#averageHue=%23ede1de&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ud1a7658b&margin=%5Bobject%20Object%5D&name=d4887fa7b61908e871f04ae0c858bc8.png&originHeight=625&originWidth=1148&originalType=binary&ratio=1&rotation=0&showTitle=true&size=366739&status=done&style=shadow&taskId=ua2728dec-bb48-4b96-991d-0acb7c57b3d&title=sram%E4%B8%8Edram%E7%9A%84%E5%AF%B9%E6%AF%94\" alt=\"d4887fa7b61908e871f04ae0c858bc8.png\" title=\"sram与dram的对比\"><br>sram采用双稳态可以非破坏性读写，而dram是破坏性读写，需要恢复状态，而且电容里的电会在2ms后消失，所以存储器需要定时刷新。对于上面说的译码器连接出来的片选线，如果一个单元一条线会浪费资源，对于220也就是1M大小的存储单元需要220条线去选择，而如果分成行列式，只需要行，列各自1024条就好，一个存储单元由一个行一个列来选择，大大降低了布线的要求。</p>\n<h4 id=\"动态RAM的刷新\"><a href=\"#动态RAM的刷新\" class=\"headerlink\" title=\"动态RAM的刷新\"></a>动态RAM的刷新</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840378913-744327ce-825b-4d5f-8943-1517ee8609e5.png#averageHue=%23ececeb&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ub48d0ea6&margin=%5Bobject%20Object%5D&name=a5b5be8a8338b5e74a6075b76a78bdb.png&originHeight=614&originWidth=1095&originalType=binary&ratio=1&rotation=0&showTitle=false&size=306704&status=done&style=shadow&taskId=ua9d0ec4c-0f6e-4f14-b75a-51698622313&title=\" alt=\"a5b5be8a8338b5e74a6075b76a78bdb.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840467938-be1ace3c-862c-413f-b992-0f4fbbd4849b.png#averageHue=%23edeceb&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=520&id=u30ab716c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=704&originWidth=1267&originalType=binary&ratio=1&rotation=0&showTitle=true&size=596658&status=done&style=shadow&taskId=u6f29b4a9-211a-4c37-a2f2-a4aea771548&title=%E5%88%B7%E6%96%B0&width=935.6307966857557\" alt=\"image.png\" title=\"刷新\"></p>\n<h3 id=\"RAM芯片分析\"><a href=\"#RAM芯片分析\" class=\"headerlink\" title=\"RAM芯片分析\"></a>RAM芯片分析</h3><h4 id=\"地址译码方式\"><a href=\"#地址译码方式\" class=\"headerlink\" title=\"地址译码方式\"></a>地址译码方式</h4><h5 id=\"单译码\"><a href=\"#单译码\" class=\"headerlink\" title=\"单译码\"></a>单译码</h5><p>即自选法，上面提到的单地址线的译码方式<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914114481-5eec7eb5-5762-4fc7-8b45-bf5e573e0405.jpeg#averageHue=%23efefef&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=311&id=u6fa9b211&margin=%5Bobject%20Object%5D&name=4ecf380ad1d951af9d26ba88c922891.jpg&originHeight=1544&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=364086&status=done&style=shadow&taskId=ude42b972-f046-4344-bb99-2d90a1c3be5&title=&width=257.73077392578125\" alt=\"4ecf380ad1d951af9d26ba88c922891.jpg\"></p>\n<h5 id=\"双译码\"><a href=\"#双译码\" class=\"headerlink\" title=\"双译码\"></a>双译码</h5><p><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914151696-39e2a5d3-161e-49c7-9d67-5919555ad2cd.jpeg#averageHue=%23f1f1f1&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=286&id=ua08620d5&margin=%5Bobject%20Object%5D&name=1e20befd85b6f6a5d2cd390a89502a2.jpg&originHeight=1280&originWidth=1850&originalType=binary&ratio=1&rotation=0&showTitle=false&size=361865&status=done&style=shadow&taskId=u4b23a76c-3395-40d2-9237-6a1a768120f&title=&width=412.73077392578125\" alt=\"1e20befd85b6f6a5d2cd390a89502a2.jpg\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840521436-38a8af09-2eb8-4dd0-a2e4-893d0c3b306d.png#averageHue=%23f2f0f0&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=480&id=u763c8755&margin=%5Bobject%20Object%5D&name=image.png&originHeight=650&originWidth=1247&originalType=binary&ratio=1&rotation=0&showTitle=true&size=286550&status=done&style=shadow&taskId=u819c7f1d-d073-40f5-983a-0caa407750f&title=%E5%9C%B0%E5%9D%80%E7%BA%BF%E5%A4%8D%E7%94%A8%E6%8A%80%E6%9C%AF&width=920.8615654831392\" alt=\"image.png\" title=\"地址线复用技术\"><br>地址线复用技术，分两次传输地址码，先传行地址码，后传列地址码。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914212480-0a7406dd-dcf5-4af4-a911-39bf0d2d445c.jpeg#averageHue=%23e1e1e1&clientId=u4b755130-ef81-4&crop=0.0136&crop=0.7361&crop=0.9747&crop=0.9307&from=drop&height=1230&id=u98a4c741&margin=%5Bobject%20Object%5D&name=356562e2de3964179013a6574b194f5.jpg&originHeight=1280&originWidth=1902&originalType=binary&ratio=1&rotation=0&showTitle=true&size=793405&status=done&style=shadow&taskId=uebd8701f-477e-4716-bc14-4a2c1404141&title=%E4%B8%A4%E7%A7%8D%E8%AF%91%E7%A0%81%E6%96%B9%E5%BC%8F%E7%9A%84%E6%AF%94%E8%BE%83&width=1828\" alt=\"356562e2de3964179013a6574b194f5.jpg\" title=\"两种译码方式的比较\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840641563-63b06a25-f098-4957-9c9a-d87ae85e62ea.png#averageHue=%23ebe1de&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=521&id=u741162ea&margin=%5Bobject%20Object%5D&name=image.png&originHeight=706&originWidth=1252&originalType=binary&ratio=1&rotation=0&showTitle=false&size=516936&status=done&style=shadow&taskId=ucd6a1602-afb8-4324-9aa1-04fe7e537d4&title=&width=924.5538732837933\" alt=\"image.png\"></p>\n<h2 id=\"主存储器的连接与控制\"><a href=\"#主存储器的连接与控制\" class=\"headerlink\" title=\"主存储器的连接与控制\"></a>主存储器的连接与控制</h2><p>存储芯片容量有限，主存储器由若干个芯片构成。而且连接起来的芯片需要与cpu连接，才能在CPU的控制下进行读写操作。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896866825-78298a8f-a859-48f0-ba3f-7c796148f900.png#averageHue=%23f6f7f4&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=467&id=uee402f01&margin=%5Bobject%20Object%5D&name=cc36b50df0939ea7602313128573519.png&originHeight=633&originWidth=1103&originalType=binary&ratio=1&rotation=0&showTitle=true&size=141368&status=done&style=shadow&taskId=u8bd6049f-060f-406e-b09d-d64814f5852&title=cpu%E4%B8%8E%E5%AD%98%E5%82%A8%E5%99%A8%E8%BF%9E%E6%8E%A5%E7%BB%93%E6%9E%84&width=814.5231008243004\" alt=\"cc36b50df0939ea7602313128573519.png\" title=\"cpu与存储器连接结构\"></p>\n<h3 id=\"主存容量的拓展\"><a href=\"#主存容量的拓展\" class=\"headerlink\" title=\"主存容量的拓展\"></a>主存容量的拓展</h3><p>总片数&#x3D;总容量&#x2F;容量(每片)<br>拓展方法有字拓展，位拓展，字位同时拓展</p>\n<h4 id=\"位拓展\"><a href=\"#位拓展\" class=\"headerlink\" title=\"位拓展\"></a>位拓展</h4><p>只在位的方向上拓展也就是，将各存储器的片选线，地址线，读写线连接起来，然后数据线单独列出来。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897024158-722dd24e-ed5b-4eee-be96-b7f5a115891b.png#averageHue=%23f2f1f1&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u81c50178&margin=%5Bobject%20Object%5D&name=8721bc7419f59135d89e0b964394213.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=510593&status=done&style=shadow&taskId=u22a55c6a-73ad-4da4-9777-9af86742dec&title=&width=1417.8461954511847\" alt=\"8721bc7419f59135d89e0b964394213.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897072848-5fa54c5c-1d86-4040-b431-3bec6c339581.png#averageHue=%23f0f0e4&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub2a5303f&margin=%5Bobject%20Object%5D&name=8557344cdab1216f84e34a268a7309e.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=568132&status=done&style=shadow&taskId=u6b5c71c5-344a-4b72-8c0c-79a1c3671b0&title=&width=1417.8461954511847\" alt=\"8557344cdab1216f84e34a268a7309e.png\"><br>如：64K<em>1的sram芯片组成64K</em>8的存储器需要8片<br>其中每一片是主存储器的一位，读取数据的时候，他们同时接收到cpu的地址，然后每个片里面选择相同的存储单元，取数；</p>\n<h4 id=\"字拓展\"><a href=\"#字拓展\" class=\"headerlink\" title=\"字拓展\"></a>字拓展</h4><p>每个芯片的字长和主存储器的字长相同，在字数上进行拓展。地址线和位拓展一样并联，数据线并联，读写线并联，然后需要通过片选线来选择操作的存储单元。<br>如：16K<em>8的sram组成64k</em>8的存储器的需要4片<br>(64K<em>8)&#x2F;(16K</em>8)&#x3D;4<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670893624071-a36dd5ea-e6a0-4b16-b3bc-2ced08809981.png#averageHue=%23f0e2d9&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ud9789832&margin=%5Bobject%20Object%5D&name=8ec266ee37316322921ae52b0d88b7a.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=848347&status=done&style=shadow&taskId=u66859226-55b1-449d-8552-c7770d093c5&title=&width=1417.8461954511847\" alt=\"8ec266ee37316322921ae52b0d88b7a.png\"><br>图中的存储单元8k<em>8bit，两个通过字拓展可以组成16k</em>8bit的主存，其中8k&#x3D;213需要至少13条地址线，A0~A12一共13条地址线，接下来就是如何选择对应的存储单元了。<br>可以直接通过一个地址线去选择，如A13为高电平时候选择左边的存储单元，A14为高电平选择右边的，这样虽然直接方便，但是N个存储单元就需要n个地址线，设计不合理。<br>增加一个译码器，如1-2译码器，只需要一个地址线就可以选择不同的存储单元。上图中的cpu还有A13A14A15三条多余的地址线，使用译码器的话可以有选择23个存储单元。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670894359506-f3bad6c0-3f7f-403f-aaf9-e435dd9ab5d1.png#averageHue=%23f9f8f8&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=283&id=u44b83c40&margin=%5Bobject%20Object%5D&name=image.png&originHeight=383&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=true&size=14924&status=done&style=shadow&taskId=u55562f3c-b46b-4221-b979-54eb9e81c96&title=1-2%E8%AF%91%E7%A0%81%E5%99%A8&width=369.23078006541266\" alt=\"image.png\" title=\"1-2译码器\"><br>然后是地址的分配<br>对于第一种线选法<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670895840156-d820bf6a-8032-4a08-9b8a-781e72c8f7c2.png#averageHue=%239bb735&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u760a6dbe&margin=%5Bobject%20Object%5D&name=a76b130684a535bf8c8fa653a381e4e.png&originHeight=183&originWidth=606&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7640&status=done&style=shadow&taskId=ub050e981-bdd7-4c38-b25d-a6de67dc1ca&title=\" alt=\"a76b130684a535bf8c8fa653a381e4e.png\"><br>可以看出内存地址分配上的不连续，对内存地址有浪费。<br>而采用译码器<img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896066457-830256be-27de-4461-87c7-d822d40af921.png#averageHue=%2396bb36&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u017d5760&margin=%5Bobject%20Object%5D&name=02f29b511df3a8ac08b9e06a1dbabf2.png&originHeight=183&originWidth=1537&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9191&status=done&style=shadow&taskId=u97eeac88-0fac-4e5d-8317-b267786bf98&title=\" alt=\"02f29b511df3a8ac08b9e06a1dbabf2.png\"><br>地址从全0到全1,内存地址分配上是连续的。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896141930-319bd01a-7039-40fa-85ee-4a2e029e1c0b.png#averageHue=%23eee4dc&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uce4deeda&margin=%5Bobject%20Object%5D&name=f73a91316547c79c0d76c3605cbd246.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=true&size=747671&status=done&style=shadow&taskId=u38dd6b4e-7a03-4b96-afd0-8895953af55&title=%E5%AD%97%E6%8B%93%E5%B1%95%E5%9B%9B%E7%89%87%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87%E7%9A%84%E7%BB%93%E6%9E%84&width=1417.8461954511847\" alt=\"f73a91316547c79c0d76c3605cbd246.png\" title=\"字拓展四片存储芯片的结构\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896193603-e3eb5ca2-8194-4fb4-b81e-10f50d4bf7a9.png#averageHue=%23f3f2f2&clientId=u24c759c1-b7b9-4&crop=0.1606&crop=0.204&crop=0.8317&crop=0.4398&from=paste&height=536&id=u684860cf&margin=%5Bobject%20Object%5D&name=310d25dd5583fae4c382232d977a8ca.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=441813&status=done&style=shadow&taskId=uc10a7511-0af0-4846-a1db-cd2b9d4f7b4&title=&width=952\" alt=\"310d25dd5583fae4c382232d977a8ca.png\"><br>译码器<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896370859-b4bb5c69-c239-44f6-b241-29d28749e93e.png#averageHue=%23edecec&clientId=u24c759c1-b7b9-4&crop=0.2998&crop=0.1061&crop=1&crop=0.8667&from=paste&height=559&id=u0a4fa4a6&margin=%5Bobject%20Object%5D&name=2022-12-12%2021%2049%2030.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=772028&status=done&style=shadow&taskId=u13667770-ca4e-4826-b66e-5642fd86bfc&title=&width=993\" alt=\"2022-12-12 21 49 30.png\"><br>cpu先发出地址信号，等待信号稳定后，向译码器发送使能信号，选择使用的芯片进行操作。</p>\n<h4 id=\"字拓展与位拓展同时拓展\"><a href=\"#字拓展与位拓展同时拓展\" class=\"headerlink\" title=\"字拓展与位拓展同时拓展\"></a>字拓展与位拓展同时拓展</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896657015-34f5ad14-b06b-450f-95bc-f18aef98d98b.png#averageHue=%23e0eeda&clientId=u24c759c1-b7b9-4&crop=0.1484&crop=0.1768&crop=0.7721&crop=0.7743&from=paste&height=497&id=u4144cee8&margin=%5Bobject%20Object%5D&name=881d127f170d9769a728e9168cbbb83.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1991330&status=done&style=shadow&taskId=uf0758c87-5b6d-4f60-bd7e-18ce2735871&title=&width=884\" alt=\"881d127f170d9769a728e9168cbbb83.png\"><br>如：16K<em>4的芯片组成64k</em>8的存储器<br>需要8片横向上两片，纵向上4片</p>\n<h3 id=\"主存储器和cpu的连接\"><a href=\"#主存储器和cpu的连接\" class=\"headerlink\" title=\"主存储器和cpu的连接\"></a>主存储器和cpu的连接</h3><h4 id=\"主存和cpu的硬连接\"><a href=\"#主存和cpu的硬连接\" class=\"headerlink\" title=\"主存和cpu的硬连接\"></a>主存和cpu的硬连接</h4><p>主存和cpu的三组连线：地址总线(AB)，数据总线(AB)，控制总线(CB)<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670915463484-7ba2cc8d-bfd7-47e3-85fc-ce1390fd6eb7.png#averageHue=%23a5a5a5&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ud3b07818&margin=%5Bobject%20Object%5D&name=%E4%B8%BB%E5%AD%98%E5%92%8Ccpu%E7%9A%84%E7%A1%AC%E8%BF%9E%E6%8E%A5.drawio.png&originHeight=262&originWidth=392&originalType=binary&ratio=1&rotation=0&showTitle=true&size=29285&status=done&style=shadow&taskId=u7612b03e-6beb-476c-b384-fc15e00e5cd&title=%E4%B8%BB%E5%AD%98%E4%B8%8ECPU%E7%9A%84%E7%A1%AC%E8%BF%9E%E6%8E%A5\" alt=\"主存和cpu的硬连接.drawio.png\" title=\"主存与CPU的硬连接\"><br>MAR接收来自pc的指令地址或者地址形成部件的操作数地址，已确定要访问的单元。<br>MDR是向主存写入数据或者读入数据的缓冲部件。<br>MFC为工作完成信号</p>\n<h4 id=\"主存和cpu的软连接\"><a href=\"#主存和cpu的软连接\" class=\"headerlink\" title=\"主存和cpu的软连接\"></a>主存和cpu的软连接</h4><p>硬连接是物理基础连接，还需要软连接即cpu向主存发送读或者写命令，这是两个部件有效工作的关键。<br>CPU对主存进行读写操作时，首先在地址总线给出地址信号，然后发送相应的读写命令并在数据总线上交换信息。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670916367378-d6dfa975-e6b0-4fa3-b1e9-a2533380f771.jpeg#averageHue=%23e7e7e7&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u21b2297b&margin=%5Bobject%20Object%5D&name=411f94e7dd5896be28e4018083a1f42.jpg&originHeight=1769&originWidth=3812&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3937946&status=done&style=shadow&taskId=u39e3dafd-7654-4232-a811-bca846370e1&title=\" alt=\"411f94e7dd5896be28e4018083a1f42.jpg\"><br>M(MAR)是地址寄存器给的地址中的数据</p>\n<h5 id=\"异步读取的方式\"><a href=\"#异步读取的方式\" class=\"headerlink\" title=\"异步读取的方式\"></a>异步读取的方式</h5><p>MFC是工作完成信号<br>CPU与主存之间速度不匹配没有统一的时钟信号，由MFC通知cpu工作完成</p>\n<h5 id=\"同步的读取方式\"><a href=\"#同步的读取方式\" class=\"headerlink\" title=\"同步的读取方式\"></a>同步的读取方式</h5><p>CPU与主存采用统一的时钟信号，cpu与主存配合，不需要主存工作完成信号</p>\n<h3 id=\"主存的校验\"><a href=\"#主存的校验\" class=\"headerlink\" title=\"主存的校验\"></a>主存的校验</h3><p>无奇偶校验<br>奇偶校验<br>错误校验与纠正(ECC)</p>\n<h3 id=\"本节回顾\"><a href=\"#本节回顾\" class=\"headerlink\" title=\"本节回顾\"></a>本节回顾</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897107404-eae00de8-104f-4451-b2a5-b8cce0066dd1.png#averageHue=%23f0f0ef&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=524&id=u54464178&margin=%5Bobject%20Object%5D&name=2022-12-12%2021%2042%2024.png&originHeight=709&originWidth=1256&originalType=binary&ratio=1&rotation=0&showTitle=false&size=224006&status=done&style=shadow&taskId=ub373c8ba-2ffe-4e54-adf9-e5f5e5f07eb&title=&width=927.5077195243166\" alt=\"2022-12-12 21 42 24.png\"></p>\n<h2 id=\"提高主存读写速度的技术\"><a href=\"#提高主存读写速度的技术\" class=\"headerlink\" title=\"提高主存读写速度的技术\"></a>提高主存读写速度的技术</h2><h3 id=\"双端口RAM\"><a href=\"#双端口RAM\" class=\"headerlink\" title=\"双端口RAM\"></a>双端口RAM</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670990062812-157dee84-d222-4814-b018-45b4afc92503.png#averageHue=%23ececec&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=160&id=u3ed4e2c4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=216&originWidth=432&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25028&status=done&style=shadow&taskId=u40bff7ba-f2ee-459f-b7ab-7c22b96445e&title=&width=319.0153939765165\" alt=\"image.png\"><br>即主存与cpu之间有多条数据线连接，优化了多核cpu访问同一根内存条的速度。<br>需要两组完全独立的数据线，地址线，控制线。cpu，ram中也要有更复杂的控制电路<br>两个端口对同一个主存操作的情况：</p>\n<ol>\n<li>两个端口同时对不同的地址单元存取数据。\t\t没问题</li>\n<li>两个端口同时对同一地址单元读取数据。\t\t\t没问题</li>\n<li>两个端口同时对同一地址单元写入数据。\t\t\t写入错误</li>\n<li>两个端口同时对同一地址单元，一个读入，一个写入。\t读出错误</li>\n</ol>\n<p>为了解决这个问题可以添加一个标志位，但这个标志位置0则暂时关闭一个端口，未被关闭的端口正常工作，被关闭的阻塞等待。</p>\n<h3 id=\"多模块存储器\"><a href=\"#多模块存储器\" class=\"headerlink\" title=\"多模块存储器\"></a>多模块存储器</h3><h4 id=\"单体多字存储器\"><a href=\"#单体多字存储器\" class=\"headerlink\" title=\"单体多字存储器\"></a>单体多字存储器</h4><p>每次并行的读取m个连续的字<br>总线宽度也要拓展为m个字</p>\n<h4 id=\"多体并行存储器\"><a href=\"#多体并行存储器\" class=\"headerlink\" title=\"多体并行存储器\"></a>多体并行存储器</h4><h5 id=\"高位交叉编址\"><a href=\"#高位交叉编址\" class=\"headerlink\" title=\"高位交叉编址\"></a>高位交叉编址</h5><p>数据顺序存储在物理地址上也是连续的，在访问一次后需要等待恢复时间，才能继续下次的访问。</p>\n<h5 id=\"低位交叉编址\"><a href=\"#低位交叉编址\" class=\"headerlink\" title=\"低位交叉编址\"></a>低位交叉编址</h5><p>数据在物理地址上是不连续的，分在不同的存储芯片上，每次访问后下次访问的数据在下一个存储芯片不需要等待就可以访问下个数据，等待数据恢复好，就能开始下次的访问。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991391393-8f1c5881-d703-44ff-9838-c0afb396acae.png#averageHue=%23e5e5e5&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u4986e13e&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2004%2054.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=564508&status=done&style=shadow&taskId=uc4724899-8eed-4ca0-875a-4e3ef19acdf&title=&width=1019.076952980539\" alt=\"2022-12-13 16 04 54.png\"><br>存取时间r 存取周期t 假设t&#x3D;4r，则需要t+4r就可以<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991500750-41f06252-c99b-4733-b0ef-12cd39e4c67e.png#averageHue=%23e6e5e4&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=ue6e327e4&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2025%2054.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644354&status=done&style=shadow&taskId=ub047f339-2732-4fdc-bde3-af6b83d056d&title=&width=1019.076952980539\" alt=\"2022-12-13 16 25 54.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991806199-4f3b81d7-8f53-41f8-8b7f-6a3633539b39.png#averageHue=%2379897d&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u525d4ac2&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2034%2029.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1047853&status=done&style=shadow&taskId=u23579969-0bfb-483a-b324-7ae1819b9a0&title=&width=1019.076952980539\" alt=\"2022-12-13 16 34 29.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991827986-cc96ac13-8351-4dc1-bd1c-c2d43326b9d4.png#averageHue=%23e9e9e9&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u115bba1a&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2030%2004.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=415251&status=done&style=shadow&taskId=ud6f6ba5b-786b-45d6-bc3d-22703572403&title=&width=1019.076952980539\" alt=\"2022-12-13 16 30 04.png\"></p>\n<h2 id=\"多体交叉存储技术\"><a href=\"#多体交叉存储技术\" class=\"headerlink\" title=\"多体交叉存储技术\"></a>多体交叉存储技术</h2><h2 id=\"固态硬盘SSD\"><a href=\"#固态硬盘SSD\" class=\"headerlink\" title=\"固态硬盘SSD\"></a>固态硬盘SSD</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991782446-fcf9f17c-ba57-4f24-b6aa-4b529b1bee9a.png#averageHue=%23e1e1e1&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u4e9ee9ae&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2019%2013.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=867323&status=done&style=shadow&taskId=u2e6ef93f-ed4d-4224-9f45-42a467d4650&title=&width=1417.8461954511847\" alt=\"2022-12-14 09 19 13.png\"></p>\n<h2 id=\"高速缓冲存储器\"><a href=\"#高速缓冲存储器\" class=\"headerlink\" title=\"高速缓冲存储器\"></a>高速缓冲存储器</h2><h3 id=\"cache基本原理\"><a href=\"#cache基本原理\" class=\"headerlink\" title=\"cache基本原理\"></a>cache基本原理</h3><h4 id=\"局部性原理\"><a href=\"#局部性原理\" class=\"headerlink\" title=\"局部性原理\"></a>局部性原理</h4><p>时间局部性<br>现在访问的数据在未来的一段时间内很可能也会被访问<br>空间局部性<br>在未来要用到的信息很可能与现在在用的信息在存储空间上是邻近的</p>\n<h3 id=\"性能分析\"><a href=\"#性能分析\" class=\"headerlink\" title=\"性能分析\"></a>性能分析</h3><p>假设cache的命中率95%，速度是主存的5倍，假设主存和cache同时访问，则使用cache后性能的提升多少。<br>h&#x3D;95%<br>cache的存取周期为t，主存5t<br>T&#x3D;0.95*t+(1-0.95)<em>5t&#x3D;1.2t<br>性能提升了5t&#x2F;1.2t倍<br>若先访问cache然后才主存<br>T&#x3D;0.95</em>t+(1-0.95)*6t<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671021741406-b1dd1779-9ea1-4977-adf3-190c3dc7296f.png#averageHue=%23ededed&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0024f375&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2044%2042.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=572776&status=done&style=shadow&taskId=u9c5ad303-0008-4e0b-902d-13ca99b58c1&title=&width=1417.8461954511847\" alt=\"2022-12-14 09 44 42.png\"></p>\n<h3 id=\"cache和主存的映射方式\"><a href=\"#cache和主存的映射方式\" class=\"headerlink\" title=\"cache和主存的映射方式\"></a>cache和主存的映射方式</h3><p>首先cache和主存是分块的cache中的块和主存中的块大小相等，不过cache中的容量大小要小的多。对每个cache块都有一个标志位，来标志这个块是否有效。如果不设置的话默认初始化为0，不能正确表达映射。还有多位的标志位用来标志这个cache所映射的地址。</p>\n<h4 id=\"全相连映射\"><a href=\"#全相连映射\" class=\"headerlink\" title=\"全相连映射\"></a>全相连映射</h4><p>全相连映射即随便映射，主存中的数据块可以在cache中随意的存放。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022121334-1dbfe533-9017-4e48-b593-17ac989a1d34.png#averageHue=%23ecebeb&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uac511611&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2000%2051.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=822207&status=done&style=shadow&taskId=u17403779-0b50-4584-a1a7-2e78fd16102&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 00 51.png\"><br>关于访存，计算机会访问cache的标志位，若与要访问的地址匹配则命中。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022143955-af4fcfe4-91b9-4da9-9ee8-45ee14e15763.png#averageHue=%23e9e9e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0c7ce0b7&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2003%2055.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=951066&status=done&style=shadow&taskId=u6736f811-1f47-4909-83ee-70a69a998f4&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 03 55.png\"></p>\n<h4 id=\"直接映射\"><a href=\"#直接映射\" class=\"headerlink\" title=\"直接映射\"></a>直接映射</h4><p>直接映射<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022156174-7a1779ec-7ad6-4c83-aa98-a2900d366318.png#averageHue=%23e8e4d9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u4e285f65&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2007%2005.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1024269&status=done&style=shadow&taskId=ud21e3c41-34db-472d-9811-4b99039794d&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 07 05.png\"><br>主存中的块会被存放到指定的cache块中，主存块对cache的块数量取mod即可得到。<br>因为是取模所以相当于取地址码的最后几位即可。所需要的地址标志位少。</p>\n<h4 id=\"组相连映射\"><a href=\"#组相连映射\" class=\"headerlink\" title=\"组相连映射\"></a>组相连映射</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022198595-87cbd4b7-47d4-4923-8a8a-689e2377301a.png#averageHue=%23e3e0d9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u68c4798f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2011%2021.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1118364&status=done&style=shadow&taskId=u3084b323-cfde-4c1c-b7b3-b0dea0535db&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 11 21.png\"><br>对cache进行分组主存对cache的组进行取模来得到分配的指定小组，这些主存块只能分配到这个小组内，不过在小组内采用全相联映射。因为对有指定的cache小组块所以需要记录的标志根据cache的小组数量i可以少log2i</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022058602-9b400035-9457-4a9e-967f-f04fdd3989ca.png#averageHue=%23e8e7e7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u5937f6b2&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2053%2028.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=738494&status=done&style=shadow&taskId=u3e008c5f-8348-42e0-a814-f56ff5db5ef&title=&width=1417.8461954511847\" alt=\"2022-12-14 09 53 28.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022181872-d3f62b43-ec61-4de0-a8f8-f97781cc400f.png#averageHue=%23e8e8e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ua4387e74&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2011%2008.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=783120&status=done&style=shadow&taskId=u03999ae5-80d5-449f-875f-ac316a831d2&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 11 08.png\"></p>\n<h3 id=\"cache的替换算法\"><a href=\"#cache的替换算法\" class=\"headerlink\" title=\"cache的替换算法\"></a>cache的替换算法</h3><p>在采用组相联和全相联，主存往cache块中送数据块的时候cache满了，这时候就需要替换算法。</p>\n<h4 id=\"随机算法\"><a href=\"#随机算法\" class=\"headerlink\" title=\"随机算法\"></a>随机算法</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022432481-9bcf4f75-38d2-4519-9063-3007d06fd923.png#averageHue=%23e7e5cb&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u22cb0c78&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2016%2055.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=614920&status=done&style=shadow&taskId=u439404ee-eb83-4255-99a6-03e14d55ce6&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 16 55.png\"><br>不管过去未来是否使用直接替换一个随机的块。</p>\n<h4 id=\"先进先出\"><a href=\"#先进先出\" class=\"headerlink\" title=\"先进先出\"></a>先进先出</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022395846-8ebe678f-a188-4d35-acb6-bbffd09d311b.png#averageHue=%23e6e4c9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ue2273df5&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2018%2029.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=690789&status=done&style=shadow&taskId=u27715317-b9df-4e9f-b512-f2ff28d5513&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 18 29.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022403335-2b195d7f-1202-40d3-b681-8ff1e87fcad6.png#averageHue=%23e1e0ab&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ue59c5595&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2019%2056.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=804510&status=done&style=shadow&taskId=u59b38ac7-aa9c-4de6-8c03-bfde094b241&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 19 56.png\"><br>根据先进先出的队列，将最早进入的cache块替换掉。</p>\n<h4 id=\"最近最少使用\"><a href=\"#最近最少使用\" class=\"headerlink\" title=\"最近最少使用\"></a>最近最少使用</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022411710-c2878811-f91f-4f67-966c-042af0286051.png#averageHue=%23d5d57d&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub3309d32&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2022%2059.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=754987&status=done&style=shadow&taskId=ua5181e8e-87ff-4816-b519-41117158901&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 22 59.png\"><br>使用计数器记录当cache被使用后计数器清0，否则+1，最大不超过cache中数据块的数量。<br>当有新的数据需要替换则替换计数器最大的那块。</p>\n<h4 id=\"最不经常使用\"><a href=\"#最不经常使用\" class=\"headerlink\" title=\"最不经常使用\"></a>最不经常使用</h4><p>对经常使用的块的计数器+1，没次替换掉较小的，如果这段时间在刷抖音，则抖音的块计数器的数值很高短时间下不来，为后续其他应用的使用很不方便。<img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022419298-7ee5fcbd-89cf-4c69-ae49-636dbd035080.png#averageHue=%23e2dfdf&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u41b839fa&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2032%2046.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=534600&status=done&style=shadow&taskId=ubfc462d7-298c-47ed-aaa3-c9f57591db9&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 32 46.png\"></p>\n<h3 id=\"cache的写策略\"><a href=\"#cache的写策略\" class=\"headerlink\" title=\"cache的写策略\"></a>cache的写策略</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022454042-dba38946-45b5-49c4-8af0-3bedbd2b99a3.png#averageHue=%23eaeaea&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=301&id=u63e3894b&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2040%2047.png&originHeight=407&originWidth=720&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112329&status=done&style=shadow&taskId=u474a5c58-b262-4b2c-a8a7-06a215e33cf&title=&width=531.6923232941942\" alt=\"2022-12-14 10 40 47.png\"></p>\n<h4 id=\"写命中\"><a href=\"#写命中\" class=\"headerlink\" title=\"写命中\"></a>写命中</h4><p>全写法：对cache命中时在cache和主存中全部更新数据，并且在写入主存时使用写缓冲，把数据块写入缓冲队列中，缓冲块速度相对主存要快。当缓冲块满了之后需要cpu阻塞等待缓冲区的写入。<br>写回法：cache命中之后只写入cache，只有当这块被替换的时候才写回去主存。对于写回法需要一个脏位的标志位来表明数据被修改过。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022587499-8fe69f83-8a26-4ef0-b473-5a9224e813f5.png#averageHue=%23ebe9e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0a8c5666&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2037%2024.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=664807&status=done&style=shadow&taskId=ua7cb51a9-e031-40c1-9bdb-5fb778ea546&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 37 24.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022576717-2ef8b9f3-359f-4386-ac59-508af7de712a.png#averageHue=%23eae7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub90ffc2f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2035%2040.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=708881&status=done&style=shadow&taskId=udf181796-4581-499d-b3de-272e52489e2&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 35 40.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022537125-17229ff3-2650-4b9a-a966-d0244f558790.png#averageHue=%23e9e7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u6b5b8d75&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2037%2052.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=757679&status=done&style=shadow&taskId=uad94c6ed-10a9-46b0-a3d1-a993438076d&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 37 52.png\"></p>\n<h4 id=\"写不命中\"><a href=\"#写不命中\" class=\"headerlink\" title=\"写不命中\"></a>写不命中</h4><p>非写分配法：当CPU对cache不命中时候只写入主存不调入cache<br>写分配法：写入主存还读入cache<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022530365-b18257e5-8d20-4b06-a03b-0220cb00b7e4.png#averageHue=%23ebeae9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=0.8776&from=paste&height=798&id=u2895c86d&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2038%2058.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=655953&status=done&style=shadow&taskId=u2ebe2d81-6fba-4a72-bed6-a5c5c3f4f97&title=&width=1418\" alt=\"2022-12-14 10 38 58.png\"></p>\n<h3 id=\"多级缓冲\"><a href=\"#多级缓冲\" class=\"headerlink\" title=\"多级缓冲\"></a>多级缓冲</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022595152-96eb98b5-c072-40c0-9bb0-4739e827137c.png#averageHue=%23d3d2d1&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0cb5affa&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2040%2004.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644382&status=done&style=shadow&taskId=uc2d19840-38c7-482d-b8ba-ee0ef778526&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 40 04.png\"></p>\n<h2 id=\"虚拟存储器\"><a href=\"#虚拟存储器\" class=\"headerlink\" title=\"虚拟存储器\"></a>虚拟存储器</h2><p>虚拟存储器由主存和磁盘存储器组成。这两个存储器在硬件和操作系统的联合下完成工作。<br>同cache和主存一样对磁盘存储器分页，在需要的时候将数据从磁盘加载到主存当中。</p>\n<p>虚拟存储器将主存或辅存的地址空间统一编址,形成一个庞大的存储空间。在这个大空间里,用户可以自由编程,完全不必考虑程序在主存是否装得下以及这些程序将来在主存中的实际存放位置。<br>用户编程的地址称为虚地址或逻辑地址,实际的主存单元地址称为实地址或物理地址,显然,虚地址要比实地址大得多。<br>在实际的物理存储层次上,所编程序和数据在操作系统管理下,先送入磁盘,然后操作系统将当前运行所需要的部分调人主存,供 CPU 使用,其余暂不运行部分留在磁盘中。<br>程序运行时,CPU 以虚地址来访问主存,由辅助硬件找出虚地址和实地址之间的对应关系,并判断这个虚地址指示的存储单元内容是否已装人主存。如果已在主存中,则通过地址变换，CPU 可直接访问主存的实际单元;如果不在主存中,则把包含这个字的一页或一个程序段调人主存后再由 CPU 访问。如果主存已满，则由替换算法从主存中将暂不运行的-页或一段调回辅存,再从辅存调人新的一页或一段到主存。从原理的角度看,虚拟存储器和 Cache-主存有不少相同之处。事实上,前面提到的各种方法是先应用于虚拟存储器中后来才发展到 Cache-主存层次中的。</p>\n<h3 id=\"页式存储\"><a href=\"#页式存储\" class=\"headerlink\" title=\"页式存储\"></a>页式存储</h3><p>页表<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1671082763884-efc8d387-8703-44e5-997a-7d7226b2fa49.jpeg#averageHue=%23e6e6e6&clientId=uf565cf03-2fc5-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=611&id=u3928a025&margin=%5Bobject%20Object%5D&name=75503b93ec8e29a22136244b2f5a6f9.jpg&originHeight=1564&originWidth=1280&originalType=binary&ratio=1&rotation=90&showTitle=false&size=560219&status=done&style=none&taskId=udd6f59a6-6f98-4216-b60f-3b8cbf8fd66&title=&width=499.67694091796875\" alt=\"75503b93ec8e29a22136244b2f5a6f9.jpg\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022608065-66e83f89-d83c-498b-b404-e3c5e0c16bf1.png#averageHue=%23ece7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9cc5a594&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2049%2028.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=583989&status=done&style=shadow&taskId=u49be1cd1-ab1c-49da-9bee-74621512583&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 49 28.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022614641-b87423e3-e2fd-47e2-b1fa-0f358e780bd0.png#averageHue=%23e9e5e4&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u7c116a6f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2054%2050.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=686735&status=done&style=shadow&taskId=uc28ebb3c-5558-429a-896c-9813453ac67&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 54 50.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022619926-7b862abd-6d44-47cf-8bf9-aed76c858087.png#averageHue=%23ebe9e7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uf00b7a73&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2057%2054.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=744614&status=done&style=shadow&taskId=u0dabc67b-ade5-4d01-92f5-d9af80f3349&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 57 54.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022625276-3c48590b-c7b6-48ea-bdba-d1e98911fde2.png#averageHue=%23eceae7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0ccc535b&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2001%2039.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=665284&status=done&style=shadow&taskId=u6f343dce-49d1-4ad0-a6bf-587c5f7ba51&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 01 39.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022630272-3a074d42-1f44-441e-8213-8a3186495a8f.png#averageHue=%23ebe7df&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9b3497c9&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2002%2004.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=777004&status=done&style=shadow&taskId=ue06c216e-8495-4366-8fcd-58e60341588&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 02 04.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022636206-432e458f-c1f6-4712-b015-06244388a2f8.png#averageHue=%23eae7de&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u50bceef0&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2003%2041.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=819812&status=done&style=shadow&taskId=u1b37b3bb-98c5-4eff-b086-227f595f975&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 03 41.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022641508-735a9e89-b612-4337-8efd-ccfd5c134238.png#averageHue=%23f2f0ef&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9c88909f&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2004%2034.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=592589&status=done&style=shadow&taskId=uc3ae885a-ba9a-467b-a45f-03f6ed0662f&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 04 34.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022647103-eabe16b3-3406-44c8-849c-e74ff307c301.png#averageHue=%23ebe7e1&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u5c6830ec&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2007%2013.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1033429&status=done&style=shadow&taskId=u2aa6f2f6-3983-40cc-b70f-7e8002818e3&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 07 13.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022653928-483a6452-f731-4ea6-acc4-19c90f6ad3d8.png#averageHue=%23afaead&clientId=ud7de39bb-26e9-4&crop=0.1453&crop=0.0626&crop=0.6757&crop=0.5785&from=paste&height=423&id=u64946b63&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2011%2043.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=829624&status=done&style=shadow&taskId=u61a65403-1c5d-451a-9384-accb6c97d48&title=&width=752\" alt=\"2022-12-14 11 11 43.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022671809-e7cd90f6-3d14-4359-9090-40c829529bf5.png#averageHue=%23868482&clientId=ud7de39bb-26e9-4&crop=0.1419&crop=0.066&crop=0.6806&crop=0.61&from=paste&height=363&id=u626c2495&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2014%2019.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1492413&status=done&style=shadow&taskId=u72354868-b245-488f-9606-68e6575fc96&title=&width=644.9923095703125\" alt=\"2022-12-14 11 14 19.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022678838-f787410b-6909-4b0d-b148-df6bbffea9c1.png#averageHue=%23e8e3e2&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=431&id=u6da600f8&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2014%2037.png&originHeight=583&originWidth=1032&originalType=binary&ratio=1&rotation=0&showTitle=false&size=223798&status=done&style=shadow&taskId=u0f69980b-8a71-4da6-a7c7-c938d95edfe&title=&width=762.0923300550118\" alt=\"2022-12-14 11 14 37.png\"><br>页表是慢表，存在着cache和主存一样的关系的快表。</p>\n<h3 id=\"段式存储\"><a href=\"#段式存储\" class=\"headerlink\" title=\"段式存储\"></a>段式存储</h3><p>同分页一样，只不过他是按程序段划分。大小参差不齐</p>\n<h3 id=\"段页式存储\"><a href=\"#段页式存储\" class=\"headerlink\" title=\"段页式存储\"></a>段页式存储</h3><h1 id=\"中央处理器\"><a href=\"#中央处理器\" class=\"headerlink\" title=\"中央处理器\"></a>中央处理器</h1><h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p>中央处理器由控制器和运算器组成，是整个计算机的核心所在。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671087529901-3b9a976a-2af5-4c9e-8644-5394008d324c.png#averageHue=%231b1b1b&clientId=uf565cf03-2fc5-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=665&id=uabb14610&margin=%5Bobject%20Object%5D&name=image.png&originHeight=900&originWidth=972&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23077&status=done&style=none&taskId=u67be6af6-03e6-4b7e-a534-6be18abbc40&title=&width=717.7846364471623\" alt=\"image.png\"><br>控制器的主要功能如下 ：</p>\n<ol>\n<li>从主存中取出一条指令,并指出下一条指令在主存中的位置</li>\n<li>对指令进行译码或测试,产生相应的操作控制信号，以便启动规定的动作.</li>\n<li>指挥并控制 CPU主存和输人输出设备之间的数据流动方向。<br>运算器的主要功能如下：</li>\n<li>执行所有的算术运算。</li>\n<li>执行所有的逻辑运算，并进行逻辑测试。</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1671083834847-ae030b1f-c6a7-4c5d-8509-5a22d0612ac7.jpeg#averageHue=%2376716c&clientId=uf565cf03-2fc5-4&crop=0&crop=0.1855&crop=1&crop=0.7614&from=drop&height=1280&id=u74a41fab&margin=%5Bobject%20Object%5D&name=9bb3489df9e6f00bf1e1fa2764a0a00.jpg&originHeight=1280&originWidth=1706&originalType=binary&ratio=1&rotation=0&showTitle=false&size=556039&status=done&style=none&taskId=u6f890811-1bea-43da-be90-58a6051403f&title=&width=1706\" alt=\"9bb3489df9e6f00bf1e1fa2764a0a00.jpg\"><br>![[cpu的内部结构.png]]</p>\n<h2 id=\"运算器和控制器\"><a href=\"#运算器和控制器\" class=\"headerlink\" title=\"运算器和控制器\"></a>运算器和控制器</h2><h3 id=\"运算器的基本组成\"><a href=\"#运算器的基本组成\" class=\"headerlink\" title=\"运算器的基本组成\"></a>运算器的基本组成</h3><p>![[运算器的组成.png]]</p>\n<h3 id=\"控制器的基本组成\"><a href=\"#控制器的基本组成\" class=\"headerlink\" title=\"控制器的基本组成\"></a>控制器的基本组成</h3><p>![[控制器的组成.png]]</p>\n<h3 id=\"控制器的基本结构\"><a href=\"#控制器的基本结构\" class=\"headerlink\" title=\"控制器的基本结构\"></a>控制器的基本结构</h3><p>![[控制器的基本结构.png]]</p>\n<h3 id=\"运算器和控制器的功能\"><a href=\"#运算器和控制器的功能\" class=\"headerlink\" title=\"运算器和控制器的功能\"></a>运算器和控制器的功能</h3><p>![[运算器和控制器的功能.png]]</p>\n<h3 id=\"cpu-单总线结构\"><a href=\"#cpu-单总线结构\" class=\"headerlink\" title=\"cpu 单总线结构\"></a>cpu 单总线结构</h3><p>![[cpu单总线结构.png]]<br>要在各个寄存器中传递数据，只需要用 cu 控制个寄存器或者其他单元的控制信号，<br>如 pc-&gt;mar<br>Cu 给 pc 的读控制线一个信号，mar 的输入控制线一个信号这样数据就会通过总线传递。<br>Alu 逻辑运算单元，只能同时输入才能有效。所以信号不可以分两次送进 alu，这时候就需要 acc 累加寄存器，提前将一个数加载到 acc 中这样就可以和输入数据同时进入 alu。</p>\n<h2 id=\"指令执行的过程\"><a href=\"#指令执行的过程\" class=\"headerlink\" title=\"指令执行的过程\"></a>指令执行的过程</h2><h3 id=\"指令周期\"><a href=\"#指令周期\" class=\"headerlink\" title=\"指令周期\"></a>指令周期</h3><p>指令周期：CPU从主存中取出并执行一条指令所需的全部时间。<br>![[指令周期.png]]<br>指令周期常用若干个机器周期表示，机器周期又叫CPU周期。<br>一个机器周期又分为若干个时钟周期。<br><strong>时钟周期</strong>又叫CPU时钟周期，是CPU操作的最基本单位。<br>计算机的主频3.0GHz说的是一秒钟计算机可以有3.0G个时钟周期。<br>![[指令周期-机器周期-时钟周期.png]]<br>一些指令的周期<br>![[一些指令的周期.png]]<br>一般一个指令周期的最后会有中断周期，这段时间内会检测来自外部的中断信息，如果有中断信号，则将当前pc保存到堆栈寄存器当中（记得sp-1），保存当前状态。等待中断信号处理后恢复运行。</p>\n<h3 id=\"指令周期的流程控制\"><a href=\"#指令周期的流程控制\" class=\"headerlink\" title=\"指令周期的流程控制\"></a>指令周期的流程控制</h3><p>![[指令周期的流程控制.png]]<br>对应四个周期存在四个触发器，指定触发器置1表示这个指令周期正处于这个状态<br>![[指令周期的触发器.png]]</p>\n<h3 id=\"取指周期\"><a href=\"#取指周期\" class=\"headerlink\" title=\"取指周期\"></a>取指周期</h3><p>![[取指周期.png]]</p>\n<h3 id=\"间指周期\"><a href=\"#间指周期\" class=\"headerlink\" title=\"间指周期\"></a>间指周期</h3><h3 id=\"中断周期\"><a href=\"#中断周期\" class=\"headerlink\" title=\"中断周期\"></a>中断周期</h3><p>![[中断周期.png]]</p>\n<h3 id=\"执行周期\"><a href=\"#执行周期\" class=\"headerlink\" title=\"执行周期\"></a>执行周期</h3><h3 id=\"指令执行的方案\"><a href=\"#指令执行的方案\" class=\"headerlink\" title=\"指令执行的方案\"></a>指令执行的方案</h3><p>![[指令执行的方案.png]]</p>\n<h3 id=\"小节回顾\"><a href=\"#小节回顾\" class=\"headerlink\" title=\"小节回顾\"></a>小节回顾</h3><p>![[指令周期的小节回顾.png]]</p>\n<h2 id=\"硬布线控制器\"><a href=\"#硬布线控制器\" class=\"headerlink\" title=\"硬布线控制器\"></a>硬布线控制器</h2><h3 id=\"Cu-控制单元结构\"><a href=\"#Cu-控制单元结构\" class=\"headerlink\" title=\"Cu 控制单元结构\"></a>Cu 控制单元结构</h3><p>![[硬布线控制器.png]]<br>Cu 控制单元接收指令寄存器过来的经过译码器的指令。<br>操作码译码器类似地址译码器，将输入的指令转为合适的输出，一个指令对应一条输出。操作码有 n 位译码器就有 2<sup>n</sup> 个输出<br>节拍发生器接收时钟信号，有 n 个输出表示一个指令周期分为 N 个时钟周期，一般这个长度由操作时间最长的访问主存单元的时间确定。<br>Cu 内部集成四个触发器，用来表示指令执行的第几个周期<br>Cu 接收其他部分的单元的反馈信息<br>Cu 根据上面输入的不同的信号，输出 n 个控制信号表示有 N 个位操作<br>![[微指令的线路的设计.png]]<br>设计指令的时候，考虑把前后不依靠不冲突的指令设计在一个周期</p>\n<h3 id=\"硬布线控制器的设计\"><a href=\"#硬布线控制器的设计\" class=\"headerlink\" title=\"硬布线控制器的设计\"></a>硬布线控制器的设计</h3><p>设计步骤：</p>\n<ol>\n<li>分析每个阶段的微操作序列（取址，间址，执行，中断）在指令的不同阶段有哪些微操作</li>\n<li>选择 cpu 的控制方式 （定长机器周期和不定长机器周期）这里一个机器周期安排 3 个节拍信号，即 3 个时钟信号</li>\n<li>安排微操作时序，将机器周期的微操作序列用 3 个时钟信号完成</li>\n<li>电路的设计，确定每个微操作的逻辑表达式并用电路实现<br>取值周期：（大多数的微操作的取值周期都是这样）</li>\n<li>将要执行的操作的地址从 pc 程序计数器读入 MAR</li>\n<li>给主存一个读数据信号</li>\n<li>将 MAR 指向的地址从内存单元中读到 MDR 数据寄存器</li>\n<li>Pc 程序计数器加一</li>\n<li>数据寄存器将指令传给 ir 指令寄存器</li>\n<li>Ir 将指令操作码给指令译码器<br>间址周期：（指令中的地址是一个间接地址，这时候就需要间接寻址）</li>\n<li>指令寄存器中的地址传递给 MAR</li>\n<li>给主存一个读数据信号</li>\n<li>将 MAR 指向的地址从内存单元中读到 MDR 数据寄存器</li>\n<li>将新的数据替换 ir 中的操作数<br>可以看出上面两个周期都有用到同样的操作，在分析完全部周期后统计制表就可以写出指定操作的逻辑表达式。然后就可以设计电路。<br>这种硬布线控制器每增加一种指令操作就需要重新设计电路，很是复杂，扩充指令很困难，不过由于由硬件设计执行速度很快。因此常常用在 risc精简指令集。</li>\n</ol>\n<h2 id=\"微程序控制器\"><a href=\"#微程序控制器\" class=\"headerlink\" title=\"微程序控制器\"></a>微程序控制器</h2><h1 id=\"总线\"><a href=\"#总线\" class=\"headerlink\" title=\"总线\"></a>总线</h1><h1 id=\"外部设备\"><a href=\"#外部设备\" class=\"headerlink\" title=\"外部设备\"></a>外部设备</h1><h1 id=\"输入输出\"><a href=\"#输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出</h1>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"计算机的硬件组成\"><a href=\"#计算机的硬件组成\" class=\"headerlink\" title=\"计算机的硬件组成\"></a>计算机的硬件组成</h1><p>五大部件 输入设备，输出设备，存储器，运算器，控制器<br>主机&#x3D;（cpu&#x3D;控制器+运算器）+ 主存<br>计算机主要性能指标<br>机器字长 数据通路宽度 主存容量 运算速度 </p>\n<h1 id=\"数值的表示\"><a href=\"#数值的表示\" class=\"headerlink\" title=\"数值的表示\"></a>数值的表示</h1><p>整数<br>浮点数<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670639742503-e35fc398-6d2a-4822-a358-e978d4b26bf4.png#averageHue=%23f7f7f7&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5ec83e2a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=861&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65413&status=done&style=shadow&taskId=uef3daf7a-b47a-4342-bd9a-10088f50ad3&title=&width=635.8154032726407\" alt=\"image.png\"><br><strong>数据的表示范围 原码 补码</strong><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670639976554-7f79be83-3ff7-4a5a-9e8c-4a95dd81840c.png#averageHue=%23f7f7f7&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=305&id=u5282d5e4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=734&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52419&status=done&style=shadow&taskId=u1505ba14-fbf5-4d12-931f-690e75cc662&title=&width=542.0307851360258\" alt=\"image.png\"></p>\n<h1 id=\"指令系统\"><a href=\"#指令系统\" class=\"headerlink\" title=\"指令系统\"></a>指令系统</h1><h2 id=\"3-1指令格式\"><a href=\"#3-1指令格式\" class=\"headerlink\" title=\"3.1指令格式\"></a>3.1指令格式</h2><h3 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h3><p>![[指令系统.jpg]]<br>指令的基本格式是<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1665565710375-3f93fbcd-5236-4903-ab53-d061da7e6b9c.jpeg\"><br> <img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640240207-8c50abf7-43a0-4e34-b085-d6fb1ad850c8.png#averageHue=%23f2f2f2&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=263&id=ud63cabb4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=356&originWidth=971&originalType=binary&ratio=1&rotation=0&showTitle=false&size=86487&status=done&style=shadow&taskId=u845e7e19-8f2a-48fc-a33d-23d5465e216&title=&width=717.0461748870314\" alt=\"image.png\"><br>编制方式：字节，字<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640768024-7f13b669-edc7-48a6-9f34-179ccd7a0f2a.png#averageHue=%23fafefd&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=168&id=u2a170f39&margin=%5Bobject%20Object%5D&name=image.png&originHeight=228&originWidth=790&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45653&status=done&style=shadow&taskId=uaf41fd05-3698-44ab-ada8-0d8762debfb&title=&width=583.384632503352\" alt=\"image.png\"></p>\n<h2 id=\"IEEE754标准的浮点数\"><a href=\"#IEEE754标准的浮点数\" class=\"headerlink\" title=\"IEEE754标准的浮点数\"></a>IEEE754标准的浮点数</h2><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>数符</th>\n<th>阶码</th>\n<th>尾数</th>\n<th>总位数</th>\n<th>偏置值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单精度浮点型</td>\n<td>1</td>\n<td>8</td>\n<td>13</td>\n<td>31</td>\n<td>127</td>\n</tr>\n<tr>\n<td>双精度浮点型</td>\n<td>1</td>\n<td>11</td>\n<td>52</td>\n<td>64</td>\n<td>1023</td>\n</tr>\n<tr>\n<td>临时浮点数</td>\n<td>1</td>\n<td>15</td>\n<td>64</td>\n<td>80</td>\n<td>16383</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1666874378699-8f66276f-f4a2-491f-a95e-8d6812d26106.png#averageHue=%23f7f7f7&clientId=u0885d815-63db-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u38b16a3f&margin=%5Bobject%20Object%5D&name=Screenshot_20221027_203732.png&originHeight=269&originWidth=743&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15675&status=done&style=shadow&taskId=ud21cc878-db16-460b-ae27-240e2ca7a1a&title=\" alt=\"Screenshot_20221027_203732.png\"><br>将（100.25）转为短浮点数<br>基本流程：</p>\n<ol>\n<li>整数转换，除二取余</li>\n<li>小数转换，乘二取整</li>\n<li>结果组合</li>\n<li>科学记数法</li>\n<li>指数偏移</li>\n<li>拼接组合</li>\n</ol>\n<h5 id=\"整数转换\"><a href=\"#整数转换\" class=\"headerlink\" title=\"整数转换\"></a>整数转换</h5><p>100&#x2F;2&#x3D;50余0<br>50&#x2F;2&#x3D;25余0<br>25&#x2F;2&#x3D;12余1<br>12&#x2F;2&#x3D;6余0<br>6&#x2F;2&#x3D;3余0<br>3&#x2F;2&#x3D;1余1<br>1<br>100转换为（1100100）2</p>\n<h5 id=\"小数取整\"><a href=\"#小数取整\" class=\"headerlink\" title=\"小数取整\"></a>小数取整</h5><p>0.25<em>2&#x3D;0.5取0<br>0.5</em>2&#x3D;1 取 1<br>0.25转为 （0.01）2 </p>\n<h5 id=\"组合结果\"><a href=\"#组合结果\" class=\"headerlink\" title=\"组合结果\"></a>组合结果</h5><p>100.25&#x3D;（1100100.01）2</p>\n<h5 id=\"科学计数法\"><a href=\"#科学计数法\" class=\"headerlink\" title=\"科学计数法\"></a>科学计数法</h5><p>1100100.01&#x3D;1.10010001*26</p>\n<h5 id=\"指数偏移\"><a href=\"#指数偏移\" class=\"headerlink\" title=\"指数偏移\"></a>指数偏移</h5><p>偏移量127+6&#x3D;133<br>阶码&#x3D;133&#x3D;（10000101）2</p>\n<h5 id=\"拼接组合\"><a href=\"#拼接组合\" class=\"headerlink\" title=\"拼接组合\"></a>拼接组合</h5><p>数符+阶码+尾数<br>0  \t10000101  10010001<br>尾数最高位默认隐含一个1<br>尾数实际是（1.10010001）2</p>\n<h4 id=\"短浮点数到整数\"><a href=\"#短浮点数到整数\" class=\"headerlink\" title=\"短浮点数到整数\"></a>短浮点数到整数</h4><p>1 10000011 10010010000000000000000<br>符号位 1 为负数<br>阶码 10000011  &#x3D; 131 减去偏移值 127 &#x3D;4<br>尾数1.1001001<br>组合-1.1001001*24<br>二进制-11001.001&#x3D;25.125</p>\n<h5 id=\"阶码全零，全一的情况\"><a href=\"#阶码全零，全一的情况\" class=\"headerlink\" title=\"阶码全零，全一的情况\"></a>阶码全零，全一的情况</h5><p>作为保留作他用，正常取值范围1～254即-126～127<br>全零表示机器零<br>全一时候 尾数为0表示正负无穷</p>\n<h4 id=\"数据的机器运算\"><a href=\"#数据的机器运算\" class=\"headerlink\" title=\"数据的机器运算\"></a>数据的机器运算</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670640926068-87d37634-ef59-4f39-9f70-9c6a7d3c29fd.png#averageHue=%23f6f6f6&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=298&id=uc99fea7b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=403&originWidth=830&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56491&status=done&style=shadow&taskId=ud596e95b-c1e0-448a-afe4-ec158ea3c17&title=&width=612.9230949085851\" alt=\"image.png\"><br>除法不需要</p>\n<h1 id=\"存储系统和结构\"><a href=\"#存储系统和结构\" class=\"headerlink\" title=\"存储系统和结构\"></a>存储系统和结构</h1><p><strong>重点</strong><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648055137-c662e2a1-8522-47bb-a28d-df60d7c516db.png#averageHue=%23eed7d4&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=380&id=uef16f568&margin=%5Bobject%20Object%5D&name=image.png&originHeight=515&originWidth=1080&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114418&status=done&style=shadow&taskId=uea4e5adc-8c0a-4517-be6a-b6bc524d872&title=&width=797.5384849412914\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648077488-bbeedf7f-34bc-4dfb-9b50-eabbbbe55ec9.png#averageHue=%23e6cfcd&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=466&id=u317ace61&margin=%5Bobject%20Object%5D&name=image.png&originHeight=631&originWidth=1149&originalType=binary&ratio=1&rotation=0&showTitle=false&size=168081&status=done&style=shadow&taskId=u4a382775-6ab1-486a-b39d-2a14a78bb72&title=&width=848.4923325903184\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648088433-00c41f17-b8fa-4769-b31b-31a740cc93f4.png#averageHue=%23e5cecb&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=478&id=u46b95248&margin=%5Bobject%20Object%5D&name=image.png&originHeight=647&originWidth=1134&originalType=binary&ratio=1&rotation=0&showTitle=false&size=190845&status=done&style=shadow&taskId=u0694b531-6f1d-4cfd-8302-b0710aa1f9c&title=&width=837.415409188356\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648104764-e442ee94-d911-4764-a090-496c787ed8ca.png#averageHue=%23eed8d6&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=419&id=uca23510f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=567&originWidth=1112&originalType=binary&ratio=1&rotation=0&showTitle=false&size=110000&status=done&style=shadow&taskId=ub27c6bad-c942-49f9-adb1-6d49a0a34ac&title=&width=821.1692548654778\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648139089-c102a299-5edd-4bbb-9d0a-ff89670bec83.png#averageHue=%23f5f4f3&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=602&id=ue9f54940&margin=%5Bobject%20Object%5D&name=image.png&originHeight=815&originWidth=1439&originalType=binary&ratio=1&rotation=0&showTitle=false&size=122502&status=done&style=shadow&taskId=u4e1c3982-5628-4382-ae0d-49b33496235&title=&width=1062.6461850282576\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670648197344-c8c568d5-d600-4ec4-8322-0eee42f737bc.png#averageHue=%23efeded&clientId=u52b62175-2924-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=607&id=uc2361fe6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=822&originWidth=663&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119386&status=done&style=shadow&taskId=u246eb774-1a5a-4799-94a3-f1ec5fa1a9b&title=&width=489.6000143667372\" alt=\"image.png\"><br>编址方式 1. 字节编址 2. 字编址<br><strong>字节编址</strong>以字节数表示存储容量<br><strong>字编址</strong>以字的单元数<em>机器字长表示存储容量<br>例子：64K</em>16 这个是字编址，64k个存储单元与机器字长16位<br>转为字节编址为128K*8 这个8是8位，8位为一个字节，这就是字节编址</p>\n<h5 id=\"1-某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：\"><a href=\"#1-某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：\" class=\"headerlink\" title=\"1.某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：\"></a>1.某8位微型机地址码为18位，若使用4K×4位的RAM芯片组成模块板结构的存储器，试问：</h5><p>（1）该机所允许的最大主存空间是多少？<br>（2）若每个模块板为32K×8位，共需几个模块板？<br>（3）每个模块板内共有几片RAM芯片？<br>（4）共有多少片RAM？<br>（5）CPU如何选择各模块板？<br>218 &#x3D;262144位&#x3D;262144&#x2F;8 b&#x3D;32768b&#x3D;<br>1kb&#x3D;1024b<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724588220-1d6b592a-646a-4cfb-b3e7-ec8aae91ed91.png#averageHue=%23eeeeee&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=270&id=ua1b2ad25&margin=%5Bobject%20Object%5D&name=image.png&originHeight=366&originWidth=668&originalType=binary&ratio=1&rotation=0&showTitle=true&size=61531&status=done&style=shadow&taskId=u28096fc4-39d8-4f64-bd51-22a7510162a&title=%E4%B8%BB%E5%AD%98%E7%9A%84%E6%9E%84%E6%88%90&width=493.2923221673913\" alt=\"image.png\" title=\"主存的构成\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724600435-6d586353-5f8c-4882-9669-b45d56c5e4ec.png#averageHue=%23f7f7f7&clientId=u38b7a52e-dc1f-4&crop=0&crop=0.0759&crop=1&crop=0.7957&from=paste&height=343&id=u92a222ad&margin=%5Bobject%20Object%5D&name=image.png&originHeight=464&originWidth=440&originalType=binary&ratio=1&rotation=0&showTitle=true&size=45793&status=done&style=shadow&taskId=u0c867578-9eac-4b44-a29d-c834d1b4ecc&title=%E5%AD%98%E5%82%A8%E5%85%83&width=325\" alt=\"image.png\" title=\"存储元\"><br>mos管上接受到高电平，mos管就导通这时如果给这条线输入高电平，电容两侧就会产生电压，电容就会充电，这就相当于写入了一个二进制位。如果电容有电导通这条线，在这条线上就会读出二进制1，否者为0。这就是最小的存储单位，存储元。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724595914-7a428815-1b7d-49c6-b6e3-1fbd233c885a.png#averageHue=%23f7f5f5&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=0.5409&from=paste&height=268&id=u874c96ca&margin=%5Bobject%20Object%5D&name=image.png&originHeight=363&originWidth=1183&originalType=binary&ratio=1&rotation=0&showTitle=true&size=104002&status=done&style=shadow&taskId=ua3128c8b-fd64-4a91-a4d4-fdd67f24993&title=%E5%AD%98%E5%82%A8%E5%8D%95%E5%85%83&width=874\" alt=\"image.png\" title=\"存储单元\"><br>这是一个存储单元，由多个存储元构成，期中红色的是自选线，绿色的是数据线，片选线导通就可以对数据进行读写，而具体的是读是写由数据线来控制。期中数据线有8条表示一次可以读取8个比特位，这就与机器字长有关系了。多个存储单元就构成存储体。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670724592572-e28044b5-8f73-4b4d-a79b-a752879a856a.png#averageHue=%23eeeeee&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=275&id=u8c458cf2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=372&originWidth=718&originalType=binary&ratio=1&rotation=0&showTitle=true&size=46286&status=done&style=shadow&taskId=u74244fed-77d6-4cff-972d-6db6c00ae83&title=%E5%AD%98%E5%82%A8%E4%BD%93&width=530.2154001739326\" alt=\"image.png\" title=\"存储体\"><br>选择哪个存储单元由地址寄存器来确定，而数据读取写入最后由数据寄存器来负责。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670752287797-6581ffe8-7ea4-45da-8838-dd135bc2191f.png#averageHue=%23f0ecec&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=0.9574&from=drop&height=1080&id=u04fe5801&margin=%5Bobject%20Object%5D&name=9eb83e6ec9d7c4dd0879275eac0d746.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=818476&status=done&style=shadow&taskId=uef4440ad-dbd9-4540-a541-38171cb2de6&title=&width=1920\" alt=\"9eb83e6ec9d7c4dd0879275eac0d746.png\"><br>地址寄存器接收来自地址总线的地址，通过地址译码器选择指定的存储单元。<br>MAR地址寄存器有n位，则能映射2n个存储单元，图中的机器存储大小可以表示为：<br>23 * 8bit &#x3D; 23 * 1B &#x3D; 8 * 1B &#x3D; 8B<br>其中23为存储单元的大小，数量 8bit 为一个存储单元（存储字&#x2F;机器字长）大小<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670753529349-4d7edd60-7a45-44d8-9d1a-7988d56a3135.png#averageHue=%23f0ecec&clientId=u38b7a52e-dc1f-4&crop=0.0211&crop=0.015&crop=0.9817&crop=0.9349&from=drop&height=1037&id=u420f19ec&margin=%5Bobject%20Object%5D&name=13311c99-2ed4-410f-99f8-9d5eb53e1b44.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=949557&status=done&style=shadow&taskId=uaf979647-db83-4f23-8e0e-0620a48792f&title=&width=1844\" alt=\"13311c99-2ed4-410f-99f8-9d5eb53e1b44.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670753832191-bf142f93-6c11-456a-a1ed-2c6965d3adaa.png#averageHue=%23ede1d9&clientId=u38b7a52e-dc1f-4&crop=0.0229&crop=0&crop=1&crop=1&from=paste&height=229&id=uf1c01d68&margin=%5Bobject%20Object%5D&name=image.png&originHeight=317&originWidth=711&originalType=binary&ratio=1&rotation=0&showTitle=false&size=141155&status=done&style=shadow&taskId=u82e49bf0-0c91-45a1-a588-615909e0c1a&title=&width=513\" alt=\"image.png\"><br>在译码器，MAR,MDR上都连接着控制电路，控制电路当电信号稳定后才可以进行下一步。<br>控制电路的输入片选线低电平有效，只有片选线为低电平时候这个控制电路才有效，读写电路是控制是进行读操作还是写操作。读写控制线有两条线的有一条线的。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670754163624-59553be5-e961-4160-b1bb-77c5029891a8.png#averageHue=%23ede8e7&clientId=u38b7a52e-dc1f-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u34cc0fab&margin=%5Bobject%20Object%5D&name=cc150a47e9d83db39e9c3029a8be807.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=true&size=1294833&status=done&style=shadow&taskId=u3ddd1ff5-42d4-4fa3-909c-b09301177db&title=%E5%86%85%E5%AD%98%E6%9D%A1%E5%8F%AF%E8%83%BD%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%86%E7%89%87%EF%BC%8C%E9%80%9A%E8%BF%87%E7%89%87%E9%80%89%E7%BA%BF%E6%9D%A5%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E7%9A%84%E9%82%A3%E4%B8%80%E6%9D%A1\" alt=\"cc150a47e9d83db39e9c3029a8be807.png\" title=\"内存条可能有多个分片，通过片选线来选择需要的那一条\"><br>如果分析一个芯片至少多少个引脚：有vcc，GND，地址总线，数据总线的条数，控制电路的片选线，读写控制线。</p>\n<hr>\n<p><strong>1. 已知某64位机主存采用半导体存储器，其地址码为26位，若使用256K×16位的DRAM芯片组成该机所允许的最大主存空间，并选用模块板结构形式。</strong>（1） 每个模块板为1024K×64位，共需几个模块板？<br>（2） 每个模块板内共有多少DRAM芯片?<br>（3）主存共需多少DRAM芯片? CPU如何选择各模块板？<br>地址码26位，64位的机器，机器字长64<br>机器内存容量：226<em>64bit &#x3D; 4GB<br>1024K&#x3D;1024</em>1024&#x3D;210<em>210<br>每个模块板主存容量：1024K×64bit&#x3D;220</em>64bit<br>芯片：256K×16&#x3D;218×16bit</p>\n<ol>\n<li>226<em>64bit&#x2F;220</em>64bit&#x3D;226-20 &#x3D;26&#x3D;**64 **</li>\n<li>220*64bit&#x2F;218×16bit&#x3D;24&#x3D;<strong>16</strong></li>\n<li>主存共需DRAM芯片为：16×64&#x3D;1024 (片)</li>\n</ol>\n<p>每个模块板有16片DRAM芯片，构成容量为1024K×64位，需20根地址线(A19<del>A0)完成模块板内存储单元寻址。一共有64块模块板，采用6根高位地址线(A25</del>A20)，通过6：64译码器译码产生片选信号对各模块板进行选择。<br>位扩展 4片256K×16—&gt;256K×64<br>字扩展：4组（256K×64）à1024K×64位</p>\n<h2 id=\"主存储器的性能指标\"><a href=\"#主存储器的性能指标\" class=\"headerlink\" title=\"主存储器的性能指标\"></a>主存储器的性能指标</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670913171682-5aaf666e-9379-4b7a-9b65-ae61ce736de3.png#averageHue=%230c0b08&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u04ae261e&margin=%5Bobject%20Object%5D&name=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png&originHeight=828&originWidth=1770&originalType=binary&ratio=1&rotation=0&showTitle=true&size=197607&status=done&style=shadow&taskId=ub7d1e487-ebf5-4326-8ab6-db7f8c1270d&title=%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE\" alt=\"思维导图.png\" title=\"思维导图\"></p>\n<h2 id=\"半导体随机存储器（RAM）\"><a href=\"#半导体随机存储器（RAM）\" class=\"headerlink\" title=\"半导体随机存储器（RAM）\"></a>半导体随机存储器（RAM）</h2><h3 id=\"DRAM与SRAM的对比\"><a href=\"#DRAM与SRAM的对比\" class=\"headerlink\" title=\"DRAM与SRAM的对比\"></a>DRAM与SRAM的对比</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670839412544-cd9324c0-16f2-4d7e-bda2-337f9a642a7f.png#averageHue=%23ede1de&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ud1a7658b&margin=%5Bobject%20Object%5D&name=d4887fa7b61908e871f04ae0c858bc8.png&originHeight=625&originWidth=1148&originalType=binary&ratio=1&rotation=0&showTitle=true&size=366739&status=done&style=shadow&taskId=ua2728dec-bb48-4b96-991d-0acb7c57b3d&title=sram%E4%B8%8Edram%E7%9A%84%E5%AF%B9%E6%AF%94\" alt=\"d4887fa7b61908e871f04ae0c858bc8.png\" title=\"sram与dram的对比\"><br>sram采用双稳态可以非破坏性读写，而dram是破坏性读写，需要恢复状态，而且电容里的电会在2ms后消失，所以存储器需要定时刷新。对于上面说的译码器连接出来的片选线，如果一个单元一条线会浪费资源，对于220也就是1M大小的存储单元需要220条线去选择，而如果分成行列式，只需要行，列各自1024条就好，一个存储单元由一个行一个列来选择，大大降低了布线的要求。</p>\n<h4 id=\"动态RAM的刷新\"><a href=\"#动态RAM的刷新\" class=\"headerlink\" title=\"动态RAM的刷新\"></a>动态RAM的刷新</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840378913-744327ce-825b-4d5f-8943-1517ee8609e5.png#averageHue=%23ececeb&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ub48d0ea6&margin=%5Bobject%20Object%5D&name=a5b5be8a8338b5e74a6075b76a78bdb.png&originHeight=614&originWidth=1095&originalType=binary&ratio=1&rotation=0&showTitle=false&size=306704&status=done&style=shadow&taskId=ua9d0ec4c-0f6e-4f14-b75a-51698622313&title=\" alt=\"a5b5be8a8338b5e74a6075b76a78bdb.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840467938-be1ace3c-862c-413f-b992-0f4fbbd4849b.png#averageHue=%23edeceb&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=520&id=u30ab716c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=704&originWidth=1267&originalType=binary&ratio=1&rotation=0&showTitle=true&size=596658&status=done&style=shadow&taskId=u6f29b4a9-211a-4c37-a2f2-a4aea771548&title=%E5%88%B7%E6%96%B0&width=935.6307966857557\" alt=\"image.png\" title=\"刷新\"></p>\n<h3 id=\"RAM芯片分析\"><a href=\"#RAM芯片分析\" class=\"headerlink\" title=\"RAM芯片分析\"></a>RAM芯片分析</h3><h4 id=\"地址译码方式\"><a href=\"#地址译码方式\" class=\"headerlink\" title=\"地址译码方式\"></a>地址译码方式</h4><h5 id=\"单译码\"><a href=\"#单译码\" class=\"headerlink\" title=\"单译码\"></a>单译码</h5><p>即自选法，上面提到的单地址线的译码方式<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914114481-5eec7eb5-5762-4fc7-8b45-bf5e573e0405.jpeg#averageHue=%23efefef&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=311&id=u6fa9b211&margin=%5Bobject%20Object%5D&name=4ecf380ad1d951af9d26ba88c922891.jpg&originHeight=1544&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=364086&status=done&style=shadow&taskId=ude42b972-f046-4344-bb99-2d90a1c3be5&title=&width=257.73077392578125\" alt=\"4ecf380ad1d951af9d26ba88c922891.jpg\"></p>\n<h5 id=\"双译码\"><a href=\"#双译码\" class=\"headerlink\" title=\"双译码\"></a>双译码</h5><p><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914151696-39e2a5d3-161e-49c7-9d67-5919555ad2cd.jpeg#averageHue=%23f1f1f1&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=286&id=ua08620d5&margin=%5Bobject%20Object%5D&name=1e20befd85b6f6a5d2cd390a89502a2.jpg&originHeight=1280&originWidth=1850&originalType=binary&ratio=1&rotation=0&showTitle=false&size=361865&status=done&style=shadow&taskId=u4b23a76c-3395-40d2-9237-6a1a768120f&title=&width=412.73077392578125\" alt=\"1e20befd85b6f6a5d2cd390a89502a2.jpg\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840521436-38a8af09-2eb8-4dd0-a2e4-893d0c3b306d.png#averageHue=%23f2f0f0&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=480&id=u763c8755&margin=%5Bobject%20Object%5D&name=image.png&originHeight=650&originWidth=1247&originalType=binary&ratio=1&rotation=0&showTitle=true&size=286550&status=done&style=shadow&taskId=u819c7f1d-d073-40f5-983a-0caa407750f&title=%E5%9C%B0%E5%9D%80%E7%BA%BF%E5%A4%8D%E7%94%A8%E6%8A%80%E6%9C%AF&width=920.8615654831392\" alt=\"image.png\" title=\"地址线复用技术\"><br>地址线复用技术，分两次传输地址码，先传行地址码，后传列地址码。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670914212480-0a7406dd-dcf5-4af4-a911-39bf0d2d445c.jpeg#averageHue=%23e1e1e1&clientId=u4b755130-ef81-4&crop=0.0136&crop=0.7361&crop=0.9747&crop=0.9307&from=drop&height=1230&id=u98a4c741&margin=%5Bobject%20Object%5D&name=356562e2de3964179013a6574b194f5.jpg&originHeight=1280&originWidth=1902&originalType=binary&ratio=1&rotation=0&showTitle=true&size=793405&status=done&style=shadow&taskId=uebd8701f-477e-4716-bc14-4a2c1404141&title=%E4%B8%A4%E7%A7%8D%E8%AF%91%E7%A0%81%E6%96%B9%E5%BC%8F%E7%9A%84%E6%AF%94%E8%BE%83&width=1828\" alt=\"356562e2de3964179013a6574b194f5.jpg\" title=\"两种译码方式的比较\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670840641563-63b06a25-f098-4957-9c9a-d87ae85e62ea.png#averageHue=%23ebe1de&clientId=u3f6f33ec-d2e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=521&id=u741162ea&margin=%5Bobject%20Object%5D&name=image.png&originHeight=706&originWidth=1252&originalType=binary&ratio=1&rotation=0&showTitle=false&size=516936&status=done&style=shadow&taskId=ucd6a1602-afb8-4324-9aa1-04fe7e537d4&title=&width=924.5538732837933\" alt=\"image.png\"></p>\n<h2 id=\"主存储器的连接与控制\"><a href=\"#主存储器的连接与控制\" class=\"headerlink\" title=\"主存储器的连接与控制\"></a>主存储器的连接与控制</h2><p>存储芯片容量有限，主存储器由若干个芯片构成。而且连接起来的芯片需要与cpu连接，才能在CPU的控制下进行读写操作。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896866825-78298a8f-a859-48f0-ba3f-7c796148f900.png#averageHue=%23f6f7f4&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=467&id=uee402f01&margin=%5Bobject%20Object%5D&name=cc36b50df0939ea7602313128573519.png&originHeight=633&originWidth=1103&originalType=binary&ratio=1&rotation=0&showTitle=true&size=141368&status=done&style=shadow&taskId=u8bd6049f-060f-406e-b09d-d64814f5852&title=cpu%E4%B8%8E%E5%AD%98%E5%82%A8%E5%99%A8%E8%BF%9E%E6%8E%A5%E7%BB%93%E6%9E%84&width=814.5231008243004\" alt=\"cc36b50df0939ea7602313128573519.png\" title=\"cpu与存储器连接结构\"></p>\n<h3 id=\"主存容量的拓展\"><a href=\"#主存容量的拓展\" class=\"headerlink\" title=\"主存容量的拓展\"></a>主存容量的拓展</h3><p>总片数&#x3D;总容量&#x2F;容量(每片)<br>拓展方法有字拓展，位拓展，字位同时拓展</p>\n<h4 id=\"位拓展\"><a href=\"#位拓展\" class=\"headerlink\" title=\"位拓展\"></a>位拓展</h4><p>只在位的方向上拓展也就是，将各存储器的片选线，地址线，读写线连接起来，然后数据线单独列出来。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897024158-722dd24e-ed5b-4eee-be96-b7f5a115891b.png#averageHue=%23f2f1f1&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u81c50178&margin=%5Bobject%20Object%5D&name=8721bc7419f59135d89e0b964394213.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=510593&status=done&style=shadow&taskId=u22a55c6a-73ad-4da4-9777-9af86742dec&title=&width=1417.8461954511847\" alt=\"8721bc7419f59135d89e0b964394213.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897072848-5fa54c5c-1d86-4040-b431-3bec6c339581.png#averageHue=%23f0f0e4&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub2a5303f&margin=%5Bobject%20Object%5D&name=8557344cdab1216f84e34a268a7309e.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=568132&status=done&style=shadow&taskId=u6b5c71c5-344a-4b72-8c0c-79a1c3671b0&title=&width=1417.8461954511847\" alt=\"8557344cdab1216f84e34a268a7309e.png\"><br>如：64K<em>1的sram芯片组成64K</em>8的存储器需要8片<br>其中每一片是主存储器的一位，读取数据的时候，他们同时接收到cpu的地址，然后每个片里面选择相同的存储单元，取数；</p>\n<h4 id=\"字拓展\"><a href=\"#字拓展\" class=\"headerlink\" title=\"字拓展\"></a>字拓展</h4><p>每个芯片的字长和主存储器的字长相同，在字数上进行拓展。地址线和位拓展一样并联，数据线并联，读写线并联，然后需要通过片选线来选择操作的存储单元。<br>如：16K<em>8的sram组成64k</em>8的存储器的需要4片<br>(64K<em>8)&#x2F;(16K</em>8)&#x3D;4<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670893624071-a36dd5ea-e6a0-4b16-b3bc-2ced08809981.png#averageHue=%23f0e2d9&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ud9789832&margin=%5Bobject%20Object%5D&name=8ec266ee37316322921ae52b0d88b7a.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=848347&status=done&style=shadow&taskId=u66859226-55b1-449d-8552-c7770d093c5&title=&width=1417.8461954511847\" alt=\"8ec266ee37316322921ae52b0d88b7a.png\"><br>图中的存储单元8k<em>8bit，两个通过字拓展可以组成16k</em>8bit的主存，其中8k&#x3D;213需要至少13条地址线，A0~A12一共13条地址线，接下来就是如何选择对应的存储单元了。<br>可以直接通过一个地址线去选择，如A13为高电平时候选择左边的存储单元，A14为高电平选择右边的，这样虽然直接方便，但是N个存储单元就需要n个地址线，设计不合理。<br>增加一个译码器，如1-2译码器，只需要一个地址线就可以选择不同的存储单元。上图中的cpu还有A13A14A15三条多余的地址线，使用译码器的话可以有选择23个存储单元。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670894359506-f3bad6c0-3f7f-403f-aaf9-e435dd9ab5d1.png#averageHue=%23f9f8f8&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=283&id=u44b83c40&margin=%5Bobject%20Object%5D&name=image.png&originHeight=383&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=true&size=14924&status=done&style=shadow&taskId=u55562f3c-b46b-4221-b979-54eb9e81c96&title=1-2%E8%AF%91%E7%A0%81%E5%99%A8&width=369.23078006541266\" alt=\"image.png\" title=\"1-2译码器\"><br>然后是地址的分配<br>对于第一种线选法<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670895840156-d820bf6a-8032-4a08-9b8a-781e72c8f7c2.png#averageHue=%239bb735&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u760a6dbe&margin=%5Bobject%20Object%5D&name=a76b130684a535bf8c8fa653a381e4e.png&originHeight=183&originWidth=606&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7640&status=done&style=shadow&taskId=ub050e981-bdd7-4c38-b25d-a6de67dc1ca&title=\" alt=\"a76b130684a535bf8c8fa653a381e4e.png\"><br>可以看出内存地址分配上的不连续，对内存地址有浪费。<br>而采用译码器<img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896066457-830256be-27de-4461-87c7-d822d40af921.png#averageHue=%2396bb36&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u017d5760&margin=%5Bobject%20Object%5D&name=02f29b511df3a8ac08b9e06a1dbabf2.png&originHeight=183&originWidth=1537&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9191&status=done&style=shadow&taskId=u97eeac88-0fac-4e5d-8317-b267786bf98&title=\" alt=\"02f29b511df3a8ac08b9e06a1dbabf2.png\"><br>地址从全0到全1,内存地址分配上是连续的。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896141930-319bd01a-7039-40fa-85ee-4a2e029e1c0b.png#averageHue=%23eee4dc&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uce4deeda&margin=%5Bobject%20Object%5D&name=f73a91316547c79c0d76c3605cbd246.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=true&size=747671&status=done&style=shadow&taskId=u38dd6b4e-7a03-4b96-afd0-8895953af55&title=%E5%AD%97%E6%8B%93%E5%B1%95%E5%9B%9B%E7%89%87%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87%E7%9A%84%E7%BB%93%E6%9E%84&width=1417.8461954511847\" alt=\"f73a91316547c79c0d76c3605cbd246.png\" title=\"字拓展四片存储芯片的结构\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896193603-e3eb5ca2-8194-4fb4-b81e-10f50d4bf7a9.png#averageHue=%23f3f2f2&clientId=u24c759c1-b7b9-4&crop=0.1606&crop=0.204&crop=0.8317&crop=0.4398&from=paste&height=536&id=u684860cf&margin=%5Bobject%20Object%5D&name=310d25dd5583fae4c382232d977a8ca.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=441813&status=done&style=shadow&taskId=uc10a7511-0af0-4846-a1db-cd2b9d4f7b4&title=&width=952\" alt=\"310d25dd5583fae4c382232d977a8ca.png\"><br>译码器<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896370859-b4bb5c69-c239-44f6-b241-29d28749e93e.png#averageHue=%23edecec&clientId=u24c759c1-b7b9-4&crop=0.2998&crop=0.1061&crop=1&crop=0.8667&from=paste&height=559&id=u0a4fa4a6&margin=%5Bobject%20Object%5D&name=2022-12-12%2021%2049%2030.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=772028&status=done&style=shadow&taskId=u13667770-ca4e-4826-b66e-5642fd86bfc&title=&width=993\" alt=\"2022-12-12 21 49 30.png\"><br>cpu先发出地址信号，等待信号稳定后，向译码器发送使能信号，选择使用的芯片进行操作。</p>\n<h4 id=\"字拓展与位拓展同时拓展\"><a href=\"#字拓展与位拓展同时拓展\" class=\"headerlink\" title=\"字拓展与位拓展同时拓展\"></a>字拓展与位拓展同时拓展</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670896657015-34f5ad14-b06b-450f-95bc-f18aef98d98b.png#averageHue=%23e0eeda&clientId=u24c759c1-b7b9-4&crop=0.1484&crop=0.1768&crop=0.7721&crop=0.7743&from=paste&height=497&id=u4144cee8&margin=%5Bobject%20Object%5D&name=881d127f170d9769a728e9168cbbb83.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1991330&status=done&style=shadow&taskId=uf0758c87-5b6d-4f60-bd7e-18ce2735871&title=&width=884\" alt=\"881d127f170d9769a728e9168cbbb83.png\"><br>如：16K<em>4的芯片组成64k</em>8的存储器<br>需要8片横向上两片，纵向上4片</p>\n<h3 id=\"主存储器和cpu的连接\"><a href=\"#主存储器和cpu的连接\" class=\"headerlink\" title=\"主存储器和cpu的连接\"></a>主存储器和cpu的连接</h3><h4 id=\"主存和cpu的硬连接\"><a href=\"#主存和cpu的硬连接\" class=\"headerlink\" title=\"主存和cpu的硬连接\"></a>主存和cpu的硬连接</h4><p>主存和cpu的三组连线：地址总线(AB)，数据总线(AB)，控制总线(CB)<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670915463484-7ba2cc8d-bfd7-47e3-85fc-ce1390fd6eb7.png#averageHue=%23a5a5a5&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=ud3b07818&margin=%5Bobject%20Object%5D&name=%E4%B8%BB%E5%AD%98%E5%92%8Ccpu%E7%9A%84%E7%A1%AC%E8%BF%9E%E6%8E%A5.drawio.png&originHeight=262&originWidth=392&originalType=binary&ratio=1&rotation=0&showTitle=true&size=29285&status=done&style=shadow&taskId=u7612b03e-6beb-476c-b384-fc15e00e5cd&title=%E4%B8%BB%E5%AD%98%E4%B8%8ECPU%E7%9A%84%E7%A1%AC%E8%BF%9E%E6%8E%A5\" alt=\"主存和cpu的硬连接.drawio.png\" title=\"主存与CPU的硬连接\"><br>MAR接收来自pc的指令地址或者地址形成部件的操作数地址，已确定要访问的单元。<br>MDR是向主存写入数据或者读入数据的缓冲部件。<br>MFC为工作完成信号</p>\n<h4 id=\"主存和cpu的软连接\"><a href=\"#主存和cpu的软连接\" class=\"headerlink\" title=\"主存和cpu的软连接\"></a>主存和cpu的软连接</h4><p>硬连接是物理基础连接，还需要软连接即cpu向主存发送读或者写命令，这是两个部件有效工作的关键。<br>CPU对主存进行读写操作时，首先在地址总线给出地址信号，然后发送相应的读写命令并在数据总线上交换信息。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1670916367378-d6dfa975-e6b0-4fa3-b1e9-a2533380f771.jpeg#averageHue=%23e7e7e7&clientId=u4b755130-ef81-4&crop=0&crop=0&crop=1&crop=1&from=drop&id=u21b2297b&margin=%5Bobject%20Object%5D&name=411f94e7dd5896be28e4018083a1f42.jpg&originHeight=1769&originWidth=3812&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3937946&status=done&style=shadow&taskId=u39e3dafd-7654-4232-a811-bca846370e1&title=\" alt=\"411f94e7dd5896be28e4018083a1f42.jpg\"><br>M(MAR)是地址寄存器给的地址中的数据</p>\n<h5 id=\"异步读取的方式\"><a href=\"#异步读取的方式\" class=\"headerlink\" title=\"异步读取的方式\"></a>异步读取的方式</h5><p>MFC是工作完成信号<br>CPU与主存之间速度不匹配没有统一的时钟信号，由MFC通知cpu工作完成</p>\n<h5 id=\"同步的读取方式\"><a href=\"#同步的读取方式\" class=\"headerlink\" title=\"同步的读取方式\"></a>同步的读取方式</h5><p>CPU与主存采用统一的时钟信号，cpu与主存配合，不需要主存工作完成信号</p>\n<h3 id=\"主存的校验\"><a href=\"#主存的校验\" class=\"headerlink\" title=\"主存的校验\"></a>主存的校验</h3><p>无奇偶校验<br>奇偶校验<br>错误校验与纠正(ECC)</p>\n<h3 id=\"本节回顾\"><a href=\"#本节回顾\" class=\"headerlink\" title=\"本节回顾\"></a>本节回顾</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670897107404-eae00de8-104f-4451-b2a5-b8cce0066dd1.png#averageHue=%23f0f0ef&clientId=u24c759c1-b7b9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=524&id=u54464178&margin=%5Bobject%20Object%5D&name=2022-12-12%2021%2042%2024.png&originHeight=709&originWidth=1256&originalType=binary&ratio=1&rotation=0&showTitle=false&size=224006&status=done&style=shadow&taskId=ub373c8ba-2ffe-4e54-adf9-e5f5e5f07eb&title=&width=927.5077195243166\" alt=\"2022-12-12 21 42 24.png\"></p>\n<h2 id=\"提高主存读写速度的技术\"><a href=\"#提高主存读写速度的技术\" class=\"headerlink\" title=\"提高主存读写速度的技术\"></a>提高主存读写速度的技术</h2><h3 id=\"双端口RAM\"><a href=\"#双端口RAM\" class=\"headerlink\" title=\"双端口RAM\"></a>双端口RAM</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670990062812-157dee84-d222-4814-b018-45b4afc92503.png#averageHue=%23ececec&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=160&id=u3ed4e2c4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=216&originWidth=432&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25028&status=done&style=shadow&taskId=u40bff7ba-f2ee-459f-b7ab-7c22b96445e&title=&width=319.0153939765165\" alt=\"image.png\"><br>即主存与cpu之间有多条数据线连接，优化了多核cpu访问同一根内存条的速度。<br>需要两组完全独立的数据线，地址线，控制线。cpu，ram中也要有更复杂的控制电路<br>两个端口对同一个主存操作的情况：</p>\n<ol>\n<li>两个端口同时对不同的地址单元存取数据。\t\t没问题</li>\n<li>两个端口同时对同一地址单元读取数据。\t\t\t没问题</li>\n<li>两个端口同时对同一地址单元写入数据。\t\t\t写入错误</li>\n<li>两个端口同时对同一地址单元，一个读入，一个写入。\t读出错误</li>\n</ol>\n<p>为了解决这个问题可以添加一个标志位，但这个标志位置0则暂时关闭一个端口，未被关闭的端口正常工作，被关闭的阻塞等待。</p>\n<h3 id=\"多模块存储器\"><a href=\"#多模块存储器\" class=\"headerlink\" title=\"多模块存储器\"></a>多模块存储器</h3><h4 id=\"单体多字存储器\"><a href=\"#单体多字存储器\" class=\"headerlink\" title=\"单体多字存储器\"></a>单体多字存储器</h4><p>每次并行的读取m个连续的字<br>总线宽度也要拓展为m个字</p>\n<h4 id=\"多体并行存储器\"><a href=\"#多体并行存储器\" class=\"headerlink\" title=\"多体并行存储器\"></a>多体并行存储器</h4><h5 id=\"高位交叉编址\"><a href=\"#高位交叉编址\" class=\"headerlink\" title=\"高位交叉编址\"></a>高位交叉编址</h5><p>数据顺序存储在物理地址上也是连续的，在访问一次后需要等待恢复时间，才能继续下次的访问。</p>\n<h5 id=\"低位交叉编址\"><a href=\"#低位交叉编址\" class=\"headerlink\" title=\"低位交叉编址\"></a>低位交叉编址</h5><p>数据在物理地址上是不连续的，分在不同的存储芯片上，每次访问后下次访问的数据在下一个存储芯片不需要等待就可以访问下个数据，等待数据恢复好，就能开始下次的访问。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991391393-8f1c5881-d703-44ff-9838-c0afb396acae.png#averageHue=%23e5e5e5&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u4986e13e&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2004%2054.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=564508&status=done&style=shadow&taskId=uc4724899-8eed-4ca0-875a-4e3ef19acdf&title=&width=1019.076952980539\" alt=\"2022-12-13 16 04 54.png\"><br>存取时间r 存取周期t 假设t&#x3D;4r，则需要t+4r就可以<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991500750-41f06252-c99b-4733-b0ef-12cd39e4c67e.png#averageHue=%23e6e5e4&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=ue6e327e4&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2025%2054.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644354&status=done&style=shadow&taskId=ub047f339-2732-4fdc-bde3-af6b83d056d&title=&width=1019.076952980539\" alt=\"2022-12-13 16 25 54.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991806199-4f3b81d7-8f53-41f8-8b7f-6a3633539b39.png#averageHue=%2379897d&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u525d4ac2&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2034%2029.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1047853&status=done&style=shadow&taskId=u23579969-0bfb-483a-b324-7ae1819b9a0&title=&width=1019.076952980539\" alt=\"2022-12-13 16 34 29.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991827986-cc96ac13-8351-4dc1-bd1c-c2d43326b9d4.png#averageHue=%23e9e9e9&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=576&id=u115bba1a&margin=%5Bobject%20Object%5D&name=2022-12-13%2016%2030%2004.png&originHeight=780&originWidth=1380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=415251&status=done&style=shadow&taskId=ud6f6ba5b-786b-45d6-bc3d-22703572403&title=&width=1019.076952980539\" alt=\"2022-12-13 16 30 04.png\"></p>\n<h2 id=\"多体交叉存储技术\"><a href=\"#多体交叉存储技术\" class=\"headerlink\" title=\"多体交叉存储技术\"></a>多体交叉存储技术</h2><h2 id=\"固态硬盘SSD\"><a href=\"#固态硬盘SSD\" class=\"headerlink\" title=\"固态硬盘SSD\"></a>固态硬盘SSD</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1670991782446-fcf9f17c-ba57-4f24-b6aa-4b529b1bee9a.png#averageHue=%23e1e1e1&clientId=u1023b0f1-fda1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u4e9ee9ae&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2019%2013.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=867323&status=done&style=shadow&taskId=u2e6ef93f-ed4d-4224-9f45-42a467d4650&title=&width=1417.8461954511847\" alt=\"2022-12-14 09 19 13.png\"></p>\n<h2 id=\"高速缓冲存储器\"><a href=\"#高速缓冲存储器\" class=\"headerlink\" title=\"高速缓冲存储器\"></a>高速缓冲存储器</h2><h3 id=\"cache基本原理\"><a href=\"#cache基本原理\" class=\"headerlink\" title=\"cache基本原理\"></a>cache基本原理</h3><h4 id=\"局部性原理\"><a href=\"#局部性原理\" class=\"headerlink\" title=\"局部性原理\"></a>局部性原理</h4><p>时间局部性<br>现在访问的数据在未来的一段时间内很可能也会被访问<br>空间局部性<br>在未来要用到的信息很可能与现在在用的信息在存储空间上是邻近的</p>\n<h3 id=\"性能分析\"><a href=\"#性能分析\" class=\"headerlink\" title=\"性能分析\"></a>性能分析</h3><p>假设cache的命中率95%，速度是主存的5倍，假设主存和cache同时访问，则使用cache后性能的提升多少。<br>h&#x3D;95%<br>cache的存取周期为t，主存5t<br>T&#x3D;0.95*t+(1-0.95)<em>5t&#x3D;1.2t<br>性能提升了5t&#x2F;1.2t倍<br>若先访问cache然后才主存<br>T&#x3D;0.95</em>t+(1-0.95)*6t<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671021741406-b1dd1779-9ea1-4977-adf3-190c3dc7296f.png#averageHue=%23ededed&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0024f375&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2044%2042.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=572776&status=done&style=shadow&taskId=u9c5ad303-0008-4e0b-902d-13ca99b58c1&title=&width=1417.8461954511847\" alt=\"2022-12-14 09 44 42.png\"></p>\n<h3 id=\"cache和主存的映射方式\"><a href=\"#cache和主存的映射方式\" class=\"headerlink\" title=\"cache和主存的映射方式\"></a>cache和主存的映射方式</h3><p>首先cache和主存是分块的cache中的块和主存中的块大小相等，不过cache中的容量大小要小的多。对每个cache块都有一个标志位，来标志这个块是否有效。如果不设置的话默认初始化为0，不能正确表达映射。还有多位的标志位用来标志这个cache所映射的地址。</p>\n<h4 id=\"全相连映射\"><a href=\"#全相连映射\" class=\"headerlink\" title=\"全相连映射\"></a>全相连映射</h4><p>全相连映射即随便映射，主存中的数据块可以在cache中随意的存放。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022121334-1dbfe533-9017-4e48-b593-17ac989a1d34.png#averageHue=%23ecebeb&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uac511611&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2000%2051.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=822207&status=done&style=shadow&taskId=u17403779-0b50-4584-a1a7-2e78fd16102&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 00 51.png\"><br>关于访存，计算机会访问cache的标志位，若与要访问的地址匹配则命中。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022143955-af4fcfe4-91b9-4da9-9ee8-45ee14e15763.png#averageHue=%23e9e9e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0c7ce0b7&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2003%2055.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=951066&status=done&style=shadow&taskId=u6736f811-1f47-4909-83ee-70a69a998f4&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 03 55.png\"></p>\n<h4 id=\"直接映射\"><a href=\"#直接映射\" class=\"headerlink\" title=\"直接映射\"></a>直接映射</h4><p>直接映射<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022156174-7a1779ec-7ad6-4c83-aa98-a2900d366318.png#averageHue=%23e8e4d9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u4e285f65&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2007%2005.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1024269&status=done&style=shadow&taskId=ud21e3c41-34db-472d-9811-4b99039794d&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 07 05.png\"><br>主存中的块会被存放到指定的cache块中，主存块对cache的块数量取mod即可得到。<br>因为是取模所以相当于取地址码的最后几位即可。所需要的地址标志位少。</p>\n<h4 id=\"组相连映射\"><a href=\"#组相连映射\" class=\"headerlink\" title=\"组相连映射\"></a>组相连映射</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022198595-87cbd4b7-47d4-4923-8a8a-689e2377301a.png#averageHue=%23e3e0d9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u68c4798f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2011%2021.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1118364&status=done&style=shadow&taskId=u3084b323-cfde-4c1c-b7b3-b0dea0535db&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 11 21.png\"><br>对cache进行分组主存对cache的组进行取模来得到分配的指定小组，这些主存块只能分配到这个小组内，不过在小组内采用全相联映射。因为对有指定的cache小组块所以需要记录的标志根据cache的小组数量i可以少log2i</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022058602-9b400035-9457-4a9e-967f-f04fdd3989ca.png#averageHue=%23e8e7e7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u5937f6b2&margin=%5Bobject%20Object%5D&name=2022-12-14%2009%2053%2028.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=738494&status=done&style=shadow&taskId=u3e008c5f-8348-42e0-a814-f56ff5db5ef&title=&width=1417.8461954511847\" alt=\"2022-12-14 09 53 28.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022181872-d3f62b43-ec61-4de0-a8f8-f97781cc400f.png#averageHue=%23e8e8e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ua4387e74&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2011%2008.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=783120&status=done&style=shadow&taskId=u03999ae5-80d5-449f-875f-ac316a831d2&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 11 08.png\"></p>\n<h3 id=\"cache的替换算法\"><a href=\"#cache的替换算法\" class=\"headerlink\" title=\"cache的替换算法\"></a>cache的替换算法</h3><p>在采用组相联和全相联，主存往cache块中送数据块的时候cache满了，这时候就需要替换算法。</p>\n<h4 id=\"随机算法\"><a href=\"#随机算法\" class=\"headerlink\" title=\"随机算法\"></a>随机算法</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022432481-9bcf4f75-38d2-4519-9063-3007d06fd923.png#averageHue=%23e7e5cb&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u22cb0c78&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2016%2055.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=614920&status=done&style=shadow&taskId=u439404ee-eb83-4255-99a6-03e14d55ce6&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 16 55.png\"><br>不管过去未来是否使用直接替换一个随机的块。</p>\n<h4 id=\"先进先出\"><a href=\"#先进先出\" class=\"headerlink\" title=\"先进先出\"></a>先进先出</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022395846-8ebe678f-a188-4d35-acb6-bbffd09d311b.png#averageHue=%23e6e4c9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ue2273df5&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2018%2029.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=690789&status=done&style=shadow&taskId=u27715317-b9df-4e9f-b512-f2ff28d5513&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 18 29.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022403335-2b195d7f-1202-40d3-b681-8ff1e87fcad6.png#averageHue=%23e1e0ab&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ue59c5595&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2019%2056.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=804510&status=done&style=shadow&taskId=u59b38ac7-aa9c-4de6-8c03-bfde094b241&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 19 56.png\"><br>根据先进先出的队列，将最早进入的cache块替换掉。</p>\n<h4 id=\"最近最少使用\"><a href=\"#最近最少使用\" class=\"headerlink\" title=\"最近最少使用\"></a>最近最少使用</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022411710-c2878811-f91f-4f67-966c-042af0286051.png#averageHue=%23d5d57d&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub3309d32&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2022%2059.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=754987&status=done&style=shadow&taskId=ua5181e8e-87ff-4816-b519-41117158901&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 22 59.png\"><br>使用计数器记录当cache被使用后计数器清0，否则+1，最大不超过cache中数据块的数量。<br>当有新的数据需要替换则替换计数器最大的那块。</p>\n<h4 id=\"最不经常使用\"><a href=\"#最不经常使用\" class=\"headerlink\" title=\"最不经常使用\"></a>最不经常使用</h4><p>对经常使用的块的计数器+1，没次替换掉较小的，如果这段时间在刷抖音，则抖音的块计数器的数值很高短时间下不来，为后续其他应用的使用很不方便。<img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022419298-7ee5fcbd-89cf-4c69-ae49-636dbd035080.png#averageHue=%23e2dfdf&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u41b839fa&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2032%2046.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=534600&status=done&style=shadow&taskId=ubfc462d7-298c-47ed-aaa3-c9f57591db9&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 32 46.png\"></p>\n<h3 id=\"cache的写策略\"><a href=\"#cache的写策略\" class=\"headerlink\" title=\"cache的写策略\"></a>cache的写策略</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022454042-dba38946-45b5-49c4-8af0-3bedbd2b99a3.png#averageHue=%23eaeaea&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=301&id=u63e3894b&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2040%2047.png&originHeight=407&originWidth=720&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112329&status=done&style=shadow&taskId=u474a5c58-b262-4b2c-a8a7-06a215e33cf&title=&width=531.6923232941942\" alt=\"2022-12-14 10 40 47.png\"></p>\n<h4 id=\"写命中\"><a href=\"#写命中\" class=\"headerlink\" title=\"写命中\"></a>写命中</h4><p>全写法：对cache命中时在cache和主存中全部更新数据，并且在写入主存时使用写缓冲，把数据块写入缓冲队列中，缓冲块速度相对主存要快。当缓冲块满了之后需要cpu阻塞等待缓冲区的写入。<br>写回法：cache命中之后只写入cache，只有当这块被替换的时候才写回去主存。对于写回法需要一个脏位的标志位来表明数据被修改过。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022587499-8fe69f83-8a26-4ef0-b473-5a9224e813f5.png#averageHue=%23ebe9e8&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0a8c5666&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2037%2024.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=664807&status=done&style=shadow&taskId=ua7cb51a9-e031-40c1-9bdb-5fb778ea546&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 37 24.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022576717-2ef8b9f3-359f-4386-ac59-508af7de712a.png#averageHue=%23eae7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=ub90ffc2f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2035%2040.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=708881&status=done&style=shadow&taskId=udf181796-4581-499d-b3de-272e52489e2&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 35 40.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022537125-17229ff3-2650-4b9a-a966-d0244f558790.png#averageHue=%23e9e7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u6b5b8d75&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2037%2052.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=757679&status=done&style=shadow&taskId=uad94c6ed-10a9-46b0-a3d1-a993438076d&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 37 52.png\"></p>\n<h4 id=\"写不命中\"><a href=\"#写不命中\" class=\"headerlink\" title=\"写不命中\"></a>写不命中</h4><p>非写分配法：当CPU对cache不命中时候只写入主存不调入cache<br>写分配法：写入主存还读入cache<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022530365-b18257e5-8d20-4b06-a03b-0220cb00b7e4.png#averageHue=%23ebeae9&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=0.8776&from=paste&height=798&id=u2895c86d&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2038%2058.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=655953&status=done&style=shadow&taskId=u2ebe2d81-6fba-4a72-bed6-a5c5c3f4f97&title=&width=1418\" alt=\"2022-12-14 10 38 58.png\"></p>\n<h3 id=\"多级缓冲\"><a href=\"#多级缓冲\" class=\"headerlink\" title=\"多级缓冲\"></a>多级缓冲</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022595152-96eb98b5-c072-40c0-9bb0-4739e827137c.png#averageHue=%23d3d2d1&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0cb5affa&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2040%2004.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644382&status=done&style=shadow&taskId=uc2d19840-38c7-482d-b8ba-ee0ef778526&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 40 04.png\"></p>\n<h2 id=\"虚拟存储器\"><a href=\"#虚拟存储器\" class=\"headerlink\" title=\"虚拟存储器\"></a>虚拟存储器</h2><p>虚拟存储器由主存和磁盘存储器组成。这两个存储器在硬件和操作系统的联合下完成工作。<br>同cache和主存一样对磁盘存储器分页，在需要的时候将数据从磁盘加载到主存当中。</p>\n<p>虚拟存储器将主存或辅存的地址空间统一编址,形成一个庞大的存储空间。在这个大空间里,用户可以自由编程,完全不必考虑程序在主存是否装得下以及这些程序将来在主存中的实际存放位置。<br>用户编程的地址称为虚地址或逻辑地址,实际的主存单元地址称为实地址或物理地址,显然,虚地址要比实地址大得多。<br>在实际的物理存储层次上,所编程序和数据在操作系统管理下,先送入磁盘,然后操作系统将当前运行所需要的部分调人主存,供 CPU 使用,其余暂不运行部分留在磁盘中。<br>程序运行时,CPU 以虚地址来访问主存,由辅助硬件找出虚地址和实地址之间的对应关系,并判断这个虚地址指示的存储单元内容是否已装人主存。如果已在主存中,则通过地址变换，CPU 可直接访问主存的实际单元;如果不在主存中,则把包含这个字的一页或一个程序段调人主存后再由 CPU 访问。如果主存已满，则由替换算法从主存中将暂不运行的-页或一段调回辅存,再从辅存调人新的一页或一段到主存。从原理的角度看,虚拟存储器和 Cache-主存有不少相同之处。事实上,前面提到的各种方法是先应用于虚拟存储器中后来才发展到 Cache-主存层次中的。</p>\n<h3 id=\"页式存储\"><a href=\"#页式存储\" class=\"headerlink\" title=\"页式存储\"></a>页式存储</h3><p>页表<br><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1671082763884-efc8d387-8703-44e5-997a-7d7226b2fa49.jpeg#averageHue=%23e6e6e6&clientId=uf565cf03-2fc5-4&crop=0&crop=0&crop=1&crop=1&from=drop&height=611&id=u3928a025&margin=%5Bobject%20Object%5D&name=75503b93ec8e29a22136244b2f5a6f9.jpg&originHeight=1564&originWidth=1280&originalType=binary&ratio=1&rotation=90&showTitle=false&size=560219&status=done&style=none&taskId=udd6f59a6-6f98-4216-b60f-3b8cbf8fd66&title=&width=499.67694091796875\" alt=\"75503b93ec8e29a22136244b2f5a6f9.jpg\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022608065-66e83f89-d83c-498b-b404-e3c5e0c16bf1.png#averageHue=%23ece7e6&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9cc5a594&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2049%2028.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=583989&status=done&style=shadow&taskId=u49be1cd1-ab1c-49da-9bee-74621512583&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 49 28.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022614641-b87423e3-e2fd-47e2-b1fa-0f358e780bd0.png#averageHue=%23e9e5e4&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u7c116a6f&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2054%2050.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=686735&status=done&style=shadow&taskId=uc28ebb3c-5558-429a-896c-9813453ac67&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 54 50.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022619926-7b862abd-6d44-47cf-8bf9-aed76c858087.png#averageHue=%23ebe9e7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=uf00b7a73&margin=%5Bobject%20Object%5D&name=2022-12-14%2010%2057%2054.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=744614&status=done&style=shadow&taskId=u0dabc67b-ade5-4d01-92f5-d9af80f3349&title=&width=1417.8461954511847\" alt=\"2022-12-14 10 57 54.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022625276-3c48590b-c7b6-48ea-bdba-d1e98911fde2.png#averageHue=%23eceae7&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u0ccc535b&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2001%2039.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=665284&status=done&style=shadow&taskId=u6f343dce-49d1-4ad0-a6bf-587c5f7ba51&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 01 39.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022630272-3a074d42-1f44-441e-8213-8a3186495a8f.png#averageHue=%23ebe7df&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9b3497c9&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2002%2004.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=777004&status=done&style=shadow&taskId=ue06c216e-8495-4366-8fcd-58e60341588&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 02 04.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022636206-432e458f-c1f6-4712-b015-06244388a2f8.png#averageHue=%23eae7de&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u50bceef0&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2003%2041.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=819812&status=done&style=shadow&taskId=u1b37b3bb-98c5-4eff-b086-227f595f975&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 03 41.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022641508-735a9e89-b612-4337-8efd-ccfd5c134238.png#averageHue=%23f2f0ef&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u9c88909f&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2004%2034.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=592589&status=done&style=shadow&taskId=uc3ae885a-ba9a-467b-a45f-03f6ed0662f&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 04 34.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022647103-eabe16b3-3406-44c8-849c-e74ff307c301.png#averageHue=%23ebe7e1&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=798&id=u5c6830ec&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2007%2013.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1033429&status=done&style=shadow&taskId=u2aa6f2f6-3983-40cc-b70f-7e8002818e3&title=&width=1417.8461954511847\" alt=\"2022-12-14 11 07 13.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022653928-483a6452-f731-4ea6-acc4-19c90f6ad3d8.png#averageHue=%23afaead&clientId=ud7de39bb-26e9-4&crop=0.1453&crop=0.0626&crop=0.6757&crop=0.5785&from=paste&height=423&id=u64946b63&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2011%2043.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=829624&status=done&style=shadow&taskId=u61a65403-1c5d-451a-9384-accb6c97d48&title=&width=752\" alt=\"2022-12-14 11 11 43.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022671809-e7cd90f6-3d14-4359-9090-40c829529bf5.png#averageHue=%23868482&clientId=ud7de39bb-26e9-4&crop=0.1419&crop=0.066&crop=0.6806&crop=0.61&from=paste&height=363&id=u626c2495&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2014%2019.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1492413&status=done&style=shadow&taskId=u72354868-b245-488f-9606-68e6575fc96&title=&width=644.9923095703125\" alt=\"2022-12-14 11 14 19.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671022678838-f787410b-6909-4b0d-b148-df6bbffea9c1.png#averageHue=%23e8e3e2&clientId=ud7de39bb-26e9-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=431&id=u6da600f8&margin=%5Bobject%20Object%5D&name=2022-12-14%2011%2014%2037.png&originHeight=583&originWidth=1032&originalType=binary&ratio=1&rotation=0&showTitle=false&size=223798&status=done&style=shadow&taskId=u0f69980b-8a71-4da6-a7c7-c938d95edfe&title=&width=762.0923300550118\" alt=\"2022-12-14 11 14 37.png\"><br>页表是慢表，存在着cache和主存一样的关系的快表。</p>\n<h3 id=\"段式存储\"><a href=\"#段式存储\" class=\"headerlink\" title=\"段式存储\"></a>段式存储</h3><p>同分页一样，只不过他是按程序段划分。大小参差不齐</p>\n<h3 id=\"段页式存储\"><a href=\"#段页式存储\" class=\"headerlink\" title=\"段页式存储\"></a>段页式存储</h3><h1 id=\"中央处理器\"><a href=\"#中央处理器\" class=\"headerlink\" title=\"中央处理器\"></a>中央处理器</h1><h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p>中央处理器由控制器和运算器组成，是整个计算机的核心所在。<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/23135285/1671087529901-3b9a976a-2af5-4c9e-8644-5394008d324c.png#averageHue=%231b1b1b&clientId=uf565cf03-2fc5-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=665&id=uabb14610&margin=%5Bobject%20Object%5D&name=image.png&originHeight=900&originWidth=972&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23077&status=done&style=none&taskId=u67be6af6-03e6-4b7e-a534-6be18abbc40&title=&width=717.7846364471623\" alt=\"image.png\"><br>控制器的主要功能如下 ：</p>\n<ol>\n<li>从主存中取出一条指令,并指出下一条指令在主存中的位置</li>\n<li>对指令进行译码或测试,产生相应的操作控制信号，以便启动规定的动作.</li>\n<li>指挥并控制 CPU主存和输人输出设备之间的数据流动方向。<br>运算器的主要功能如下：</li>\n<li>执行所有的算术运算。</li>\n<li>执行所有的逻辑运算，并进行逻辑测试。</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/23135285/1671083834847-ae030b1f-c6a7-4c5d-8509-5a22d0612ac7.jpeg#averageHue=%2376716c&clientId=uf565cf03-2fc5-4&crop=0&crop=0.1855&crop=1&crop=0.7614&from=drop&height=1280&id=u74a41fab&margin=%5Bobject%20Object%5D&name=9bb3489df9e6f00bf1e1fa2764a0a00.jpg&originHeight=1280&originWidth=1706&originalType=binary&ratio=1&rotation=0&showTitle=false&size=556039&status=done&style=none&taskId=u6f890811-1bea-43da-be90-58a6051403f&title=&width=1706\" alt=\"9bb3489df9e6f00bf1e1fa2764a0a00.jpg\"><br>![[cpu的内部结构.png]]</p>\n<h2 id=\"运算器和控制器\"><a href=\"#运算器和控制器\" class=\"headerlink\" title=\"运算器和控制器\"></a>运算器和控制器</h2><h3 id=\"运算器的基本组成\"><a href=\"#运算器的基本组成\" class=\"headerlink\" title=\"运算器的基本组成\"></a>运算器的基本组成</h3><p>![[运算器的组成.png]]</p>\n<h3 id=\"控制器的基本组成\"><a href=\"#控制器的基本组成\" class=\"headerlink\" title=\"控制器的基本组成\"></a>控制器的基本组成</h3><p>![[控制器的组成.png]]</p>\n<h3 id=\"控制器的基本结构\"><a href=\"#控制器的基本结构\" class=\"headerlink\" title=\"控制器的基本结构\"></a>控制器的基本结构</h3><p>![[控制器的基本结构.png]]</p>\n<h3 id=\"运算器和控制器的功能\"><a href=\"#运算器和控制器的功能\" class=\"headerlink\" title=\"运算器和控制器的功能\"></a>运算器和控制器的功能</h3><p>![[运算器和控制器的功能.png]]</p>\n<h3 id=\"cpu-单总线结构\"><a href=\"#cpu-单总线结构\" class=\"headerlink\" title=\"cpu 单总线结构\"></a>cpu 单总线结构</h3><p>![[cpu单总线结构.png]]<br>要在各个寄存器中传递数据，只需要用 cu 控制个寄存器或者其他单元的控制信号，<br>如 pc-&gt;mar<br>Cu 给 pc 的读控制线一个信号，mar 的输入控制线一个信号这样数据就会通过总线传递。<br>Alu 逻辑运算单元，只能同时输入才能有效。所以信号不可以分两次送进 alu，这时候就需要 acc 累加寄存器，提前将一个数加载到 acc 中这样就可以和输入数据同时进入 alu。</p>\n<h2 id=\"指令执行的过程\"><a href=\"#指令执行的过程\" class=\"headerlink\" title=\"指令执行的过程\"></a>指令执行的过程</h2><h3 id=\"指令周期\"><a href=\"#指令周期\" class=\"headerlink\" title=\"指令周期\"></a>指令周期</h3><p>指令周期：CPU从主存中取出并执行一条指令所需的全部时间。<br>![[指令周期.png]]<br>指令周期常用若干个机器周期表示，机器周期又叫CPU周期。<br>一个机器周期又分为若干个时钟周期。<br><strong>时钟周期</strong>又叫CPU时钟周期，是CPU操作的最基本单位。<br>计算机的主频3.0GHz说的是一秒钟计算机可以有3.0G个时钟周期。<br>![[指令周期-机器周期-时钟周期.png]]<br>一些指令的周期<br>![[一些指令的周期.png]]<br>一般一个指令周期的最后会有中断周期，这段时间内会检测来自外部的中断信息，如果有中断信号，则将当前pc保存到堆栈寄存器当中（记得sp-1），保存当前状态。等待中断信号处理后恢复运行。</p>\n<h3 id=\"指令周期的流程控制\"><a href=\"#指令周期的流程控制\" class=\"headerlink\" title=\"指令周期的流程控制\"></a>指令周期的流程控制</h3><p>![[指令周期的流程控制.png]]<br>对应四个周期存在四个触发器，指定触发器置1表示这个指令周期正处于这个状态<br>![[指令周期的触发器.png]]</p>\n<h3 id=\"取指周期\"><a href=\"#取指周期\" class=\"headerlink\" title=\"取指周期\"></a>取指周期</h3><p>![[取指周期.png]]</p>\n<h3 id=\"间指周期\"><a href=\"#间指周期\" class=\"headerlink\" title=\"间指周期\"></a>间指周期</h3><h3 id=\"中断周期\"><a href=\"#中断周期\" class=\"headerlink\" title=\"中断周期\"></a>中断周期</h3><p>![[中断周期.png]]</p>\n<h3 id=\"执行周期\"><a href=\"#执行周期\" class=\"headerlink\" title=\"执行周期\"></a>执行周期</h3><h3 id=\"指令执行的方案\"><a href=\"#指令执行的方案\" class=\"headerlink\" title=\"指令执行的方案\"></a>指令执行的方案</h3><p>![[指令执行的方案.png]]</p>\n<h3 id=\"小节回顾\"><a href=\"#小节回顾\" class=\"headerlink\" title=\"小节回顾\"></a>小节回顾</h3><p>![[指令周期的小节回顾.png]]</p>\n<h2 id=\"硬布线控制器\"><a href=\"#硬布线控制器\" class=\"headerlink\" title=\"硬布线控制器\"></a>硬布线控制器</h2><h3 id=\"Cu-控制单元结构\"><a href=\"#Cu-控制单元结构\" class=\"headerlink\" title=\"Cu 控制单元结构\"></a>Cu 控制单元结构</h3><p>![[硬布线控制器.png]]<br>Cu 控制单元接收指令寄存器过来的经过译码器的指令。<br>操作码译码器类似地址译码器，将输入的指令转为合适的输出，一个指令对应一条输出。操作码有 n 位译码器就有 2<sup>n</sup> 个输出<br>节拍发生器接收时钟信号，有 n 个输出表示一个指令周期分为 N 个时钟周期，一般这个长度由操作时间最长的访问主存单元的时间确定。<br>Cu 内部集成四个触发器，用来表示指令执行的第几个周期<br>Cu 接收其他部分的单元的反馈信息<br>Cu 根据上面输入的不同的信号，输出 n 个控制信号表示有 N 个位操作<br>![[微指令的线路的设计.png]]<br>设计指令的时候，考虑把前后不依靠不冲突的指令设计在一个周期</p>\n<h3 id=\"硬布线控制器的设计\"><a href=\"#硬布线控制器的设计\" class=\"headerlink\" title=\"硬布线控制器的设计\"></a>硬布线控制器的设计</h3><p>设计步骤：</p>\n<ol>\n<li>分析每个阶段的微操作序列（取址，间址，执行，中断）在指令的不同阶段有哪些微操作</li>\n<li>选择 cpu 的控制方式 （定长机器周期和不定长机器周期）这里一个机器周期安排 3 个节拍信号，即 3 个时钟信号</li>\n<li>安排微操作时序，将机器周期的微操作序列用 3 个时钟信号完成</li>\n<li>电路的设计，确定每个微操作的逻辑表达式并用电路实现<br>取值周期：（大多数的微操作的取值周期都是这样）</li>\n<li>将要执行的操作的地址从 pc 程序计数器读入 MAR</li>\n<li>给主存一个读数据信号</li>\n<li>将 MAR 指向的地址从内存单元中读到 MDR 数据寄存器</li>\n<li>Pc 程序计数器加一</li>\n<li>数据寄存器将指令传给 ir 指令寄存器</li>\n<li>Ir 将指令操作码给指令译码器<br>间址周期：（指令中的地址是一个间接地址，这时候就需要间接寻址）</li>\n<li>指令寄存器中的地址传递给 MAR</li>\n<li>给主存一个读数据信号</li>\n<li>将 MAR 指向的地址从内存单元中读到 MDR 数据寄存器</li>\n<li>将新的数据替换 ir 中的操作数<br>可以看出上面两个周期都有用到同样的操作，在分析完全部周期后统计制表就可以写出指定操作的逻辑表达式。然后就可以设计电路。<br>这种硬布线控制器每增加一种指令操作就需要重新设计电路，很是复杂，扩充指令很困难，不过由于由硬件设计执行速度很快。因此常常用在 risc精简指令集。</li>\n</ol>\n<h2 id=\"微程序控制器\"><a href=\"#微程序控制器\" class=\"headerlink\" title=\"微程序控制器\"></a>微程序控制器</h2><h1 id=\"总线\"><a href=\"#总线\" class=\"headerlink\" title=\"总线\"></a>总线</h1><h1 id=\"外部设备\"><a href=\"#外部设备\" class=\"headerlink\" title=\"外部设备\"></a>外部设备</h1><h1 id=\"输入输出\"><a href=\"#输入输出\" class=\"headerlink\" title=\"输入输出\"></a>输入输出</h1>"},{"title":"mysql基础","date":"2023-05-05T13:30:42.000Z","_content":"# 1. mysql命令\n\n```mysql\nnet start mysql --开启sql服务\nnet stop mysql--关闭sql服务\nmysql -uroot -p + password;//命令行mysql\nshow databases/(tables);//展示所有数据库或者表\nuse dataname;打开指定数据库\ncreate database/(table) name;//创建数据库或者表\ndrop database(table) name;//删除数据库或者表\ndescribe/(desc) tablename ;//显示表这一列的东西\ncreate table tablename(参数 类型(长度),参数 类型(长度);//创建表\nalter database dbname character set utf8;//修改数据库的字符集\nflush privileges;//刷新数据库\nshow create database/(table) name;//展示创建数据库或者表的结构\n                       \nalter table old_name rename new_name;//重命名表(数据库不重命名)\nalter table tablename modify id int(10);//修改字段类型\nalter table tablename change gener sex verchar[1];//修改字段\nalter table tablename add name int()[first\\last,after age];//添加属性        \nalter table tablename drop score;//删除字段\nalter table tablename modify old after ;\n//多字段主键要用表级约束而不是列级约束\nalter table tablename add primary key (age id)//已有的表添加主键约束\n-- 添加外键约束                       \ncreate table 表名(\n    id interesting(10),\n    foreign key() references 外表(字段名);\n);       \n```\n\n#### 数据库数据的增删查改\n\n```mysql\ninsert tablename value (1,2,3),();\nselect *from tablename;\nselect DISTINCT <字段名称>as '新名称' from 表名 where 条件 order by <字段>[顺序],<字段2>[顺序];\n--查询语句 排序的时候第二个字段在第一个字段排序后字段一相同的字段按字段2的顺序排序,其中 DISTINCT关键字可以删除重复元素\nSELECT product_name, product_type, regist_date\nFROM Product\nWHERE regist_date < '2009-09-27';\n-- 日期的比较\n-- 字段为字段内容里所以的数据\nselect * from 表名 where 字段 in(字段内容);                       \n-- 字段为空的                       \nselect * from 表名 where 字段 is null;   \n-- 模糊查询 通配符 % 与 _\nselect * from 表名 where 字段 [no]like '%s%';-- 字段中含有s的               \nselect * from 表名 where 字段 [no]like '20130930%'--   查俺们班的人\n-- 一个字符为_ 多个为%\n -- 测试整型的模糊查询\n-- 插入\ninsert into 表名(字段) values();                       \n-- 删除\ndelete from 表名 where 表达式;                       \ntruncate table 表名;                       \n-- 更新             \nupdate 表名 set 字段=内容,字段2=内容 where 表达式;                       \n-- 限制查询 从下标为三开始的5行内容\nselect * from 表名 where 条件 limit [3,5]   \n```\n\n\n\nmysql中一些常用的函数\n\n```mysql\ndate(表中date字段)提取日期\nyear(表中date字段)提取年\ncurrent_time--当前时间\nCOUNT： 计算表中的记录数（行数）\nSUM： 计算表中数值列中数据的合计值\nAVG： 计算表中数值列中数据的平均值\nMAX： 求出表中任意列中数据的最大值\nMIN： 求出表中任意列中数据的最小值\nSELECT COUNT(*)\nFROM Product;\ncount()\ngroup_concat()\n```\n\n```\nlimit 开始位置,j\n```\n\n### mysql事务\n\nacid原则\n\na原子性:事务中的操作要么都发生，要么都不发生。\n\nc 一致性:事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。\n\ni 隔离性:事务之间是隔离的，一个事务不应该影响其它事务运行效果。\n\n1. 脏读\n2. 不可重复读\n3. 幻读\n\nd 持久性:\t事务一旦提交，则持久化保存在数据库中。\n\n事务自动提交 set autocommit=0/1\n\n开启事务\n\nstart transaction \n\ninsert 数据\n\n提交 commit \n\n回滚 rollback\n\n savepoint 点名 事务保存点\n\nrollback to savepoint 点名\n\n删除保存点 release savepoint 点名\n\ncreate database  shop  character set utf8 collate utf8_general_ci\n\nuse shop\n\ncreate table `account`(\n\n```\n开启一组事务\nset autocommit =0 \nstart transaction \nupdate account set money=money+100 where name =`a\ncommit\nrollback\nset autocommit =1;\n\n```\n\n \n\n)engin = innodb default charset =utf8\n\n##### 索引\n\n帮助高效获取数据的数据结构\n\n分类\n\n1. 主键索引\n\n    主键不可以重复\n\n2. 唯一索引\n\n3. 常规索引\n\n4. 全文索引\n\n   显示所有索引\n\n   show INDEX FROM STUDENT\n\n   alter table student add fulltext index student; \n\n   explain 分析sql\n\n   索引原则\n\n   不对经常修改的字段添加索引\n\n   小数据量不需要\n\n   一般加在用来查询的字段上\n\n   \n\n\n\n\n\n```mysql\ncreate database study;\nuse study;\n-- 学生表Fd\ncreate table student(\nstd_id int(10)  auto_increment,\nstd_name VARCHAR(5) NOT NULL,\nemail VARCHAR(20) NOT NULL UNIQUE,\nsex VARCHAR(1) DEFAULT '男',\nage int(3) NOT NULL,\nprimary key(std_id));\n-- 查看表的结构\nDESC student;\n-- 插入数据\nINSERT INTO student(std_id,std_name,email,age)VALUES(1,'小王','123456@qq.com',21);\n-- 查看数据\nSELECT *FROM student;\n-- 追加数据\nINSERT into student(std_name,email,age)VALUES('小笼包','1232123@qq.com',22);\n-- 查看数据\nSELECT *FROM student;\n-- 增加时间戳\n\n-- 更新表\n\n-- 查看表内容\n\n-- 作业二\n\n-- 表一 学生表\nCREATE TABLE student2(\nstd_id int(10) auto_increment,\nstd_name VARCHAR(5)NOT NULL,\nmajor_id int(10)NOT NULL,\nPRIMARY KEY(std_id));\n-- 查看表的结构\nDESC student2;\n-- 添加数据\nINSERT INTO student2(std_id,std_name,major_id)VALUES(1,'小王','2013');\n-- 查看数据\nSELECT * FROM student2;\n-- 添加性别字段\n\n-- 表二 课程表\nCREATE TABLE curriculum(\ncur_id int(10),\ncur_name VARCHAR(10) NOT NULL,\nscore int(1) NOT NULL,\nPRIMARY KEY(cur_id));\n-- 查看表的结构\nDESC curriculum;\n-- 添加数据\nINSERT INTO curriculum(cur_id,cur_name,score)VALUES(1,'大学美育',1);\n-- 添加字段自增\nALTER TABLE curriculum MODIFY cur_id INT ( 10 ) auto_increment;\nINSERT INTO curriculum(cur_name,score)VALUES('大学体育',1);\nINSERT INTO curriculum(cur_name,score)VALUES('javaweb开发',1);\n-- 查看数据\nSELECT * FROM curriculum;\n```\n\n```mysql\nselect  course.cno,cname,score.sno from course,score where score.cno=course.cno and cname=\"数据结构\";\nselect sno from score where score.cno=( select cno from course where cname=\"数据结构\");\n# 求学生人数不足3人的系及其相应的学生数求学生人数不足3人的系及其相应的学生数\nselect sdept,count(*) from student group by sdept having count(*)<3;\n-- sname 不能详细显示出来\nSELECT SNAME, SDEPT,COUNT(*)  FROM STUDENT  GROUP BY SDEPT having SDEPT=\"CS\";\n# 学生的编号是唯一的所以没有出错\nSELECT SAGE FROM STUDENT GROUP BY SAGE;\n# (建立视图)  建立计算机系的学生的视图STUDENT_CS。\ncreate view STUDENT_GB  as SELECT * FROM STUDENT WHERE SDEPT=\"CS\";\nselect * from STUDENT_GB;\n# (建立视图)  建立由学号和平均成绩两个字段的视图STUDENT_GR\\\nselect  score from score;\ncreate view STUDENT_GR as select s.sno,avg(s.score) from (select student.sno as sno,ifnull(score,0) score  from student left join score on score.sno=student.sno) as s group by s.sno;\n# (视图查询)利用视图STUDENT_GR求平均成绩为88分以上的学生学号和平均成绩。\nselect * from STUDENT_GR where `avg(s.score)`>88;\n# (视图更新)利视图STUDENT_CS，增加学生( ‘96006’, ‘张然’, ‘CS’, ‘02’, ‘男’, 19 )\ninsert into STUDENT_GB(sno, sname, sdept, sclass, sage, ssex) values (\"96006\",\"张然\", \"CS\", \"02\", 19, \"男\");\n# （视图更新)利用视图STUDENT_CS，将学生年龄增加1岁。观察其结果\nselect * from student_gb;\nupdate student_gb set sage=sage+1;\n# 求年龄在19岁与22岁(含20岁和22岁)之间的学生的学号和年龄。\nselect sno ,sage from student where sage>=19 and sage<=22;\n# 求选修了课程的学生学号。\nselect distinct sno from score;\n# 求各门课程的平均成绩与总成绩\nselect course.cname,ifnull(avg(score),0),ifnull(sum(score),0) sum from course left join score on course.cno=score.cno group by course.cno;\n\n```\n\nif()函数,case when then end 表达式\n\n```mysql\nselect employee_id, case when employee_id % 2 = 1 and name not regexp('^M') then salary else 0 end as bonus\nfrom Employees\n;\nselect employee_id ,(if(employee_id%2=1 and name not like \"M%\"),salary,0) as  bonus  from employees order by employee_id;\n-- 正则限定开头符号 ^\n-- 不以M开头的名字\nname not regexp/rlike('^M')\n-- 模糊查询\n name not like \"M%\"\n\n sex = 如果case when sex='m' 符合then 'f' 否则else 'm' end\n if(条件,返回,否则)\n```\n\ncount(),group_concat() 的使用 distinct\n\n```mysql\nselect distinct sell_date,count(distinct product) num_sold,GROUP_CONCAT( distinct product) products  from activities group by sell_date order by sell_date;\n```\n\n两个正则\n\n```\nCONDITIONS REGEXP '^DIAB1' 以DIAB1开头的字符\nCONDITIONS REGEXP '\\\\sDIAB1' 以空格加DIAB1的字符\n```\n\ndb表用户对数据库的权限\n\ndos命令\n\n```shell\nmysql -h 127.0.0.1 -p8080 -uroot -p123 homework\n```\n\n```mysql\n CREATE DATABASE `homework` /*!40100 DEFAULT CHARACTER SET utf8 */ |\n```\n\nmysql在命令行\n\n```shell\nmysql -uroot -p [要使用的数据库];\n```\n\n```mysql\nshow databases;\nshow tables;\nshow create database/table [数据库名/表名];\nuse mysql ;\n-- 查看存在的用户\nselect user from user;\n-- 添加用户注意符号\ncreate user\n text @\"127.0.0.1\"\n IDENTIFIED by \"123\";\n -- 改密码\n SET PASSWORD FOR 'usernamexxx'@'hostxxx' = PASSWORD('newpasswordxxx');\n -- 当前用户\n SET PASSWORD = PASSWORD(\"newpasswordxxx\");\n -- 删除用户\n DROP USER 'usernamexxx'@'hostxxx';\n-- 或者\ndelete from user where user.user=\"用户名\";\n```\n\nunion all 关键字和 union \n\n```mysql\nselect employee_id from (\n    -- 将两个表的字段合成一个\n    select employee_id\n    from employees\n    union all\n    select employee_id\n    from salaries\n    \n) as ans\ngroup by employee_id\nhaving count(employee_id) = 1\norder by employee_id\n;\nunion all 关键字和 union \n-- 加了all会显示重复的,不加就会过滤掉\n```\n\nlimit取第二高薪资\n\n```mysql\nselect (select DISTINCT salary end  from employee order by  salary desc limit 1,1) as SecondHighestSalary ;\n```\n\n```mysql\nmysql中isnull,ifnull,nullif的用法如下：\n\nisnull(expr) 的用法： 如expr 为null，那么isnull() 的返回值为 1，否则返回值为 0。 mysql> select isnull(1+1); -> 0 mysql> select isnull(1/0); -> 1 使用= 的null 值对比通常是错误的。\na\nisnull() 函数同 is null比较操作符具有一些相同的特性。请参见有关is null 的说明。\n\nIFNULL(expr1,expr2)的用法：\n\n假如expr1 不为 NULL，则 IFNULL() 的返回值为 expr1; 否则其返回值为 expr2。IFNULL()的返回值是数字或是字符串，具体情况取决于其所使用的语境。\n\nmysql> SELECT IFNULL(1,0);\n-> 1\nmysql> SELECT IFNULL(NULL,10);\n-> 10\nmysql> SELECT IFNULL(1/0,10);\n-> 10\nmysql> SELECT\nIFNULL(1/0,'yes');\n\n        ->   'yes\n```\n\n```mysql\nlimit n子句表示查询结果返回前n条数据\n\noffset n表示跳过x条语句\n\nlimit y offset x 分句表示查询结果跳过 x 条数据，读取前 y 条数据\n\n使用limit和offset，降序排列再返回第二条记录可以得到第二大的值。\n```\n\n### 各种连接\n\n```\ninner join：2表值都存在\n\nouter join：附表中值可能存在null的情况。\n\n总结：\n\n①A inner join B：取交集\n\n②A left join B：取A全部，B没有对应的值，则为null\n\n③A right join B：取B全部，A没有对应的值，则为null\n\n④A full outer join B：取并集，彼此没有对应的值为null\n\n上述4种的对应条件，在on后填写。\n```\n\ndatediff函数\n\n```mysql\nMySQL 使用 DATEDIFF \n两个日期间的差值\n```\n\n","source":"_posts/学习笔记/其他/mysql基础.md","raw":"---\ntitle: mysql基础\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# 1. mysql命令\n\n```mysql\nnet start mysql --开启sql服务\nnet stop mysql--关闭sql服务\nmysql -uroot -p + password;//命令行mysql\nshow databases/(tables);//展示所有数据库或者表\nuse dataname;打开指定数据库\ncreate database/(table) name;//创建数据库或者表\ndrop database(table) name;//删除数据库或者表\ndescribe/(desc) tablename ;//显示表这一列的东西\ncreate table tablename(参数 类型(长度),参数 类型(长度);//创建表\nalter database dbname character set utf8;//修改数据库的字符集\nflush privileges;//刷新数据库\nshow create database/(table) name;//展示创建数据库或者表的结构\n                       \nalter table old_name rename new_name;//重命名表(数据库不重命名)\nalter table tablename modify id int(10);//修改字段类型\nalter table tablename change gener sex verchar[1];//修改字段\nalter table tablename add name int()[first\\last,after age];//添加属性        \nalter table tablename drop score;//删除字段\nalter table tablename modify old after ;\n//多字段主键要用表级约束而不是列级约束\nalter table tablename add primary key (age id)//已有的表添加主键约束\n-- 添加外键约束                       \ncreate table 表名(\n    id interesting(10),\n    foreign key() references 外表(字段名);\n);       \n```\n\n#### 数据库数据的增删查改\n\n```mysql\ninsert tablename value (1,2,3),();\nselect *from tablename;\nselect DISTINCT <字段名称>as '新名称' from 表名 where 条件 order by <字段>[顺序],<字段2>[顺序];\n--查询语句 排序的时候第二个字段在第一个字段排序后字段一相同的字段按字段2的顺序排序,其中 DISTINCT关键字可以删除重复元素\nSELECT product_name, product_type, regist_date\nFROM Product\nWHERE regist_date < '2009-09-27';\n-- 日期的比较\n-- 字段为字段内容里所以的数据\nselect * from 表名 where 字段 in(字段内容);                       \n-- 字段为空的                       \nselect * from 表名 where 字段 is null;   \n-- 模糊查询 通配符 % 与 _\nselect * from 表名 where 字段 [no]like '%s%';-- 字段中含有s的               \nselect * from 表名 where 字段 [no]like '20130930%'--   查俺们班的人\n-- 一个字符为_ 多个为%\n -- 测试整型的模糊查询\n-- 插入\ninsert into 表名(字段) values();                       \n-- 删除\ndelete from 表名 where 表达式;                       \ntruncate table 表名;                       \n-- 更新             \nupdate 表名 set 字段=内容,字段2=内容 where 表达式;                       \n-- 限制查询 从下标为三开始的5行内容\nselect * from 表名 where 条件 limit [3,5]   \n```\n\n\n\nmysql中一些常用的函数\n\n```mysql\ndate(表中date字段)提取日期\nyear(表中date字段)提取年\ncurrent_time--当前时间\nCOUNT： 计算表中的记录数（行数）\nSUM： 计算表中数值列中数据的合计值\nAVG： 计算表中数值列中数据的平均值\nMAX： 求出表中任意列中数据的最大值\nMIN： 求出表中任意列中数据的最小值\nSELECT COUNT(*)\nFROM Product;\ncount()\ngroup_concat()\n```\n\n```\nlimit 开始位置,j\n```\n\n### mysql事务\n\nacid原则\n\na原子性:事务中的操作要么都发生，要么都不发生。\n\nc 一致性:事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。\n\ni 隔离性:事务之间是隔离的，一个事务不应该影响其它事务运行效果。\n\n1. 脏读\n2. 不可重复读\n3. 幻读\n\nd 持久性:\t事务一旦提交，则持久化保存在数据库中。\n\n事务自动提交 set autocommit=0/1\n\n开启事务\n\nstart transaction \n\ninsert 数据\n\n提交 commit \n\n回滚 rollback\n\n savepoint 点名 事务保存点\n\nrollback to savepoint 点名\n\n删除保存点 release savepoint 点名\n\ncreate database  shop  character set utf8 collate utf8_general_ci\n\nuse shop\n\ncreate table `account`(\n\n```\n开启一组事务\nset autocommit =0 \nstart transaction \nupdate account set money=money+100 where name =`a\ncommit\nrollback\nset autocommit =1;\n\n```\n\n \n\n)engin = innodb default charset =utf8\n\n##### 索引\n\n帮助高效获取数据的数据结构\n\n分类\n\n1. 主键索引\n\n    主键不可以重复\n\n2. 唯一索引\n\n3. 常规索引\n\n4. 全文索引\n\n   显示所有索引\n\n   show INDEX FROM STUDENT\n\n   alter table student add fulltext index student; \n\n   explain 分析sql\n\n   索引原则\n\n   不对经常修改的字段添加索引\n\n   小数据量不需要\n\n   一般加在用来查询的字段上\n\n   \n\n\n\n\n\n```mysql\ncreate database study;\nuse study;\n-- 学生表Fd\ncreate table student(\nstd_id int(10)  auto_increment,\nstd_name VARCHAR(5) NOT NULL,\nemail VARCHAR(20) NOT NULL UNIQUE,\nsex VARCHAR(1) DEFAULT '男',\nage int(3) NOT NULL,\nprimary key(std_id));\n-- 查看表的结构\nDESC student;\n-- 插入数据\nINSERT INTO student(std_id,std_name,email,age)VALUES(1,'小王','123456@qq.com',21);\n-- 查看数据\nSELECT *FROM student;\n-- 追加数据\nINSERT into student(std_name,email,age)VALUES('小笼包','1232123@qq.com',22);\n-- 查看数据\nSELECT *FROM student;\n-- 增加时间戳\n\n-- 更新表\n\n-- 查看表内容\n\n-- 作业二\n\n-- 表一 学生表\nCREATE TABLE student2(\nstd_id int(10) auto_increment,\nstd_name VARCHAR(5)NOT NULL,\nmajor_id int(10)NOT NULL,\nPRIMARY KEY(std_id));\n-- 查看表的结构\nDESC student2;\n-- 添加数据\nINSERT INTO student2(std_id,std_name,major_id)VALUES(1,'小王','2013');\n-- 查看数据\nSELECT * FROM student2;\n-- 添加性别字段\n\n-- 表二 课程表\nCREATE TABLE curriculum(\ncur_id int(10),\ncur_name VARCHAR(10) NOT NULL,\nscore int(1) NOT NULL,\nPRIMARY KEY(cur_id));\n-- 查看表的结构\nDESC curriculum;\n-- 添加数据\nINSERT INTO curriculum(cur_id,cur_name,score)VALUES(1,'大学美育',1);\n-- 添加字段自增\nALTER TABLE curriculum MODIFY cur_id INT ( 10 ) auto_increment;\nINSERT INTO curriculum(cur_name,score)VALUES('大学体育',1);\nINSERT INTO curriculum(cur_name,score)VALUES('javaweb开发',1);\n-- 查看数据\nSELECT * FROM curriculum;\n```\n\n```mysql\nselect  course.cno,cname,score.sno from course,score where score.cno=course.cno and cname=\"数据结构\";\nselect sno from score where score.cno=( select cno from course where cname=\"数据结构\");\n# 求学生人数不足3人的系及其相应的学生数求学生人数不足3人的系及其相应的学生数\nselect sdept,count(*) from student group by sdept having count(*)<3;\n-- sname 不能详细显示出来\nSELECT SNAME, SDEPT,COUNT(*)  FROM STUDENT  GROUP BY SDEPT having SDEPT=\"CS\";\n# 学生的编号是唯一的所以没有出错\nSELECT SAGE FROM STUDENT GROUP BY SAGE;\n# (建立视图)  建立计算机系的学生的视图STUDENT_CS。\ncreate view STUDENT_GB  as SELECT * FROM STUDENT WHERE SDEPT=\"CS\";\nselect * from STUDENT_GB;\n# (建立视图)  建立由学号和平均成绩两个字段的视图STUDENT_GR\\\nselect  score from score;\ncreate view STUDENT_GR as select s.sno,avg(s.score) from (select student.sno as sno,ifnull(score,0) score  from student left join score on score.sno=student.sno) as s group by s.sno;\n# (视图查询)利用视图STUDENT_GR求平均成绩为88分以上的学生学号和平均成绩。\nselect * from STUDENT_GR where `avg(s.score)`>88;\n# (视图更新)利视图STUDENT_CS，增加学生( ‘96006’, ‘张然’, ‘CS’, ‘02’, ‘男’, 19 )\ninsert into STUDENT_GB(sno, sname, sdept, sclass, sage, ssex) values (\"96006\",\"张然\", \"CS\", \"02\", 19, \"男\");\n# （视图更新)利用视图STUDENT_CS，将学生年龄增加1岁。观察其结果\nselect * from student_gb;\nupdate student_gb set sage=sage+1;\n# 求年龄在19岁与22岁(含20岁和22岁)之间的学生的学号和年龄。\nselect sno ,sage from student where sage>=19 and sage<=22;\n# 求选修了课程的学生学号。\nselect distinct sno from score;\n# 求各门课程的平均成绩与总成绩\nselect course.cname,ifnull(avg(score),0),ifnull(sum(score),0) sum from course left join score on course.cno=score.cno group by course.cno;\n\n```\n\nif()函数,case when then end 表达式\n\n```mysql\nselect employee_id, case when employee_id % 2 = 1 and name not regexp('^M') then salary else 0 end as bonus\nfrom Employees\n;\nselect employee_id ,(if(employee_id%2=1 and name not like \"M%\"),salary,0) as  bonus  from employees order by employee_id;\n-- 正则限定开头符号 ^\n-- 不以M开头的名字\nname not regexp/rlike('^M')\n-- 模糊查询\n name not like \"M%\"\n\n sex = 如果case when sex='m' 符合then 'f' 否则else 'm' end\n if(条件,返回,否则)\n```\n\ncount(),group_concat() 的使用 distinct\n\n```mysql\nselect distinct sell_date,count(distinct product) num_sold,GROUP_CONCAT( distinct product) products  from activities group by sell_date order by sell_date;\n```\n\n两个正则\n\n```\nCONDITIONS REGEXP '^DIAB1' 以DIAB1开头的字符\nCONDITIONS REGEXP '\\\\sDIAB1' 以空格加DIAB1的字符\n```\n\ndb表用户对数据库的权限\n\ndos命令\n\n```shell\nmysql -h 127.0.0.1 -p8080 -uroot -p123 homework\n```\n\n```mysql\n CREATE DATABASE `homework` /*!40100 DEFAULT CHARACTER SET utf8 */ |\n```\n\nmysql在命令行\n\n```shell\nmysql -uroot -p [要使用的数据库];\n```\n\n```mysql\nshow databases;\nshow tables;\nshow create database/table [数据库名/表名];\nuse mysql ;\n-- 查看存在的用户\nselect user from user;\n-- 添加用户注意符号\ncreate user\n text @\"127.0.0.1\"\n IDENTIFIED by \"123\";\n -- 改密码\n SET PASSWORD FOR 'usernamexxx'@'hostxxx' = PASSWORD('newpasswordxxx');\n -- 当前用户\n SET PASSWORD = PASSWORD(\"newpasswordxxx\");\n -- 删除用户\n DROP USER 'usernamexxx'@'hostxxx';\n-- 或者\ndelete from user where user.user=\"用户名\";\n```\n\nunion all 关键字和 union \n\n```mysql\nselect employee_id from (\n    -- 将两个表的字段合成一个\n    select employee_id\n    from employees\n    union all\n    select employee_id\n    from salaries\n    \n) as ans\ngroup by employee_id\nhaving count(employee_id) = 1\norder by employee_id\n;\nunion all 关键字和 union \n-- 加了all会显示重复的,不加就会过滤掉\n```\n\nlimit取第二高薪资\n\n```mysql\nselect (select DISTINCT salary end  from employee order by  salary desc limit 1,1) as SecondHighestSalary ;\n```\n\n```mysql\nmysql中isnull,ifnull,nullif的用法如下：\n\nisnull(expr) 的用法： 如expr 为null，那么isnull() 的返回值为 1，否则返回值为 0。 mysql> select isnull(1+1); -> 0 mysql> select isnull(1/0); -> 1 使用= 的null 值对比通常是错误的。\na\nisnull() 函数同 is null比较操作符具有一些相同的特性。请参见有关is null 的说明。\n\nIFNULL(expr1,expr2)的用法：\n\n假如expr1 不为 NULL，则 IFNULL() 的返回值为 expr1; 否则其返回值为 expr2。IFNULL()的返回值是数字或是字符串，具体情况取决于其所使用的语境。\n\nmysql> SELECT IFNULL(1,0);\n-> 1\nmysql> SELECT IFNULL(NULL,10);\n-> 10\nmysql> SELECT IFNULL(1/0,10);\n-> 10\nmysql> SELECT\nIFNULL(1/0,'yes');\n\n        ->   'yes\n```\n\n```mysql\nlimit n子句表示查询结果返回前n条数据\n\noffset n表示跳过x条语句\n\nlimit y offset x 分句表示查询结果跳过 x 条数据，读取前 y 条数据\n\n使用limit和offset，降序排列再返回第二条记录可以得到第二大的值。\n```\n\n### 各种连接\n\n```\ninner join：2表值都存在\n\nouter join：附表中值可能存在null的情况。\n\n总结：\n\n①A inner join B：取交集\n\n②A left join B：取A全部，B没有对应的值，则为null\n\n③A right join B：取B全部，A没有对应的值，则为null\n\n④A full outer join B：取并集，彼此没有对应的值为null\n\n上述4种的对应条件，在on后填写。\n```\n\ndatediff函数\n\n```mysql\nMySQL 使用 DATEDIFF \n两个日期间的差值\n```\n\n","slug":"学习笔记/其他/mysql基础","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oan000swwvnghzu25s8","content":"<h1 id=\"1-mysql命令\"><a href=\"#1-mysql命令\" class=\"headerlink\" title=\"1. mysql命令\"></a>1. mysql命令</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net start mysql --开启sql服务</span><br><span class=\"line\">net stop mysql--关闭sql服务</span><br><span class=\"line\">mysql -uroot -p + password;//命令行mysql</span><br><span class=\"line\">show databases/(tables);//展示所有数据库或者表</span><br><span class=\"line\">use dataname;打开指定数据库</span><br><span class=\"line\">create database/(table) name;//创建数据库或者表</span><br><span class=\"line\">drop database(table) name;//删除数据库或者表</span><br><span class=\"line\">describe/(desc) tablename ;//显示表这一列的东西</span><br><span class=\"line\">create table tablename(参数 类型(长度),参数 类型(长度);//创建表</span><br><span class=\"line\">alter database dbname character set utf8;//修改数据库的字符集</span><br><span class=\"line\">flush privileges;//刷新数据库</span><br><span class=\"line\">show create database/(table) name;//展示创建数据库或者表的结构</span><br><span class=\"line\">                       </span><br><span class=\"line\">alter table old_name rename new_name;//重命名表(数据库不重命名)</span><br><span class=\"line\">alter table tablename modify id int(10);//修改字段类型</span><br><span class=\"line\">alter table tablename change gener sex verchar[1];//修改字段</span><br><span class=\"line\">alter table tablename add name int()[first\\last,after age];//添加属性        </span><br><span class=\"line\">alter table tablename drop score;//删除字段</span><br><span class=\"line\">alter table tablename modify old after ;</span><br><span class=\"line\">//多字段主键要用表级约束而不是列级约束</span><br><span class=\"line\">alter table tablename add primary key (age id)//已有的表添加主键约束</span><br><span class=\"line\">-- 添加外键约束                       </span><br><span class=\"line\">create table 表名(</span><br><span class=\"line\">    id interesting(10),</span><br><span class=\"line\">    foreign key() references 外表(字段名);</span><br><span class=\"line\">);       </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数据库数据的增删查改\"><a href=\"#数据库数据的增删查改\" class=\"headerlink\" title=\"数据库数据的增删查改\"></a>数据库数据的增删查改</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert tablename value (1,2,3),();</span><br><span class=\"line\">select *from tablename;</span><br><span class=\"line\">select DISTINCT &lt;字段名称&gt;as &#x27;新名称&#x27; from 表名 where 条件 order by &lt;字段&gt;[顺序],&lt;字段2&gt;[顺序];</span><br><span class=\"line\">--查询语句 排序的时候第二个字段在第一个字段排序后字段一相同的字段按字段2的顺序排序,其中 DISTINCT关键字可以删除重复元素</span><br><span class=\"line\">SELECT product_name, product_type, regist_date</span><br><span class=\"line\">FROM Product</span><br><span class=\"line\">WHERE regist_date &lt; &#x27;2009-09-27&#x27;;</span><br><span class=\"line\">-- 日期的比较</span><br><span class=\"line\">-- 字段为字段内容里所以的数据</span><br><span class=\"line\">select * from 表名 where 字段 in(字段内容);                       </span><br><span class=\"line\">-- 字段为空的                       </span><br><span class=\"line\">select * from 表名 where 字段 is null;   </span><br><span class=\"line\">-- 模糊查询 通配符 % 与 _</span><br><span class=\"line\">select * from 表名 where 字段 [no]like &#x27;%s%&#x27;;-- 字段中含有s的               </span><br><span class=\"line\">select * from 表名 where 字段 [no]like &#x27;20130930%&#x27;--   查俺们班的人</span><br><span class=\"line\">-- 一个字符为_ 多个为%</span><br><span class=\"line\"> -- 测试整型的模糊查询</span><br><span class=\"line\">-- 插入</span><br><span class=\"line\">insert into 表名(字段) values();                       </span><br><span class=\"line\">-- 删除</span><br><span class=\"line\">delete from 表名 where 表达式;                       </span><br><span class=\"line\">truncate table 表名;                       </span><br><span class=\"line\">-- 更新             </span><br><span class=\"line\">update 表名 set 字段=内容,字段2=内容 where 表达式;                       </span><br><span class=\"line\">-- 限制查询 从下标为三开始的5行内容</span><br><span class=\"line\">select * from 表名 where 条件 limit [3,5]   </span><br></pre></td></tr></table></figure>\n\n\n\n<p>mysql中一些常用的函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">date(表中date字段)提取日期</span><br><span class=\"line\">year(表中date字段)提取年</span><br><span class=\"line\">current_time--当前时间</span><br><span class=\"line\">COUNT： 计算表中的记录数（行数）</span><br><span class=\"line\">SUM： 计算表中数值列中数据的合计值</span><br><span class=\"line\">AVG： 计算表中数值列中数据的平均值</span><br><span class=\"line\">MAX： 求出表中任意列中数据的最大值</span><br><span class=\"line\">MIN： 求出表中任意列中数据的最小值</span><br><span class=\"line\">SELECT COUNT(*)</span><br><span class=\"line\">FROM Product;</span><br><span class=\"line\">count()</span><br><span class=\"line\">group_concat()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limit 开始位置,j</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"mysql事务\"><a href=\"#mysql事务\" class=\"headerlink\" title=\"mysql事务\"></a>mysql事务</h3><p>acid原则</p>\n<p>a原子性:事务中的操作要么都发生，要么都不发生。</p>\n<p>c 一致性:事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。</p>\n<p>i 隔离性:事务之间是隔离的，一个事务不应该影响其它事务运行效果。</p>\n<ol>\n<li>脏读</li>\n<li>不可重复读</li>\n<li>幻读</li>\n</ol>\n<p>d 持久性:\t事务一旦提交，则持久化保存在数据库中。</p>\n<p>事务自动提交 set autocommit&#x3D;0&#x2F;1</p>\n<p>开启事务</p>\n<p>start transaction </p>\n<p>insert 数据</p>\n<p>提交 commit </p>\n<p>回滚 rollback</p>\n<p> savepoint 点名 事务保存点</p>\n<p>rollback to savepoint 点名</p>\n<p>删除保存点 release savepoint 点名</p>\n<p>create database  shop  character set utf8 collate utf8_general_ci</p>\n<p>use shop</p>\n<p>create table <code>account</code>(</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">开启一组事务</span><br><span class=\"line\">set autocommit =0 </span><br><span class=\"line\">start transaction </span><br><span class=\"line\">update account set money=money+100 where name =`a</span><br><span class=\"line\">commit</span><br><span class=\"line\">rollback</span><br><span class=\"line\">set autocommit =1;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>)engin &#x3D; innodb default charset &#x3D;utf8</p>\n<h5 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h5><p>帮助高效获取数据的数据结构</p>\n<p>分类</p>\n<ol>\n<li><p>主键索引</p>\n<p> 主键不可以重复</p>\n</li>\n<li><p>唯一索引</p>\n</li>\n<li><p>常规索引</p>\n</li>\n<li><p>全文索引</p>\n<p>显示所有索引</p>\n<p>show INDEX FROM STUDENT</p>\n<p>alter table student add fulltext index student; </p>\n<p>explain 分析sql</p>\n<p>索引原则</p>\n<p>不对经常修改的字段添加索引</p>\n<p>小数据量不需要</p>\n<p>一般加在用来查询的字段上</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database study;</span><br><span class=\"line\">use study;</span><br><span class=\"line\">-- 学生表Fd</span><br><span class=\"line\">create table student(</span><br><span class=\"line\">std_id int(10)  auto_increment,</span><br><span class=\"line\">std_name VARCHAR(5) NOT NULL,</span><br><span class=\"line\">email VARCHAR(20) NOT NULL UNIQUE,</span><br><span class=\"line\">sex VARCHAR(1) DEFAULT &#x27;男&#x27;,</span><br><span class=\"line\">age int(3) NOT NULL,</span><br><span class=\"line\">primary key(std_id));</span><br><span class=\"line\">-- 查看表的结构</span><br><span class=\"line\">DESC student;</span><br><span class=\"line\">-- 插入数据</span><br><span class=\"line\">INSERT INTO student(std_id,std_name,email,age)VALUES(1,&#x27;小王&#x27;,&#x27;123456@qq.com&#x27;,21);</span><br><span class=\"line\">-- 查看数据</span><br><span class=\"line\">SELECT *FROM student;</span><br><span class=\"line\">-- 追加数据</span><br><span class=\"line\">INSERT into student(std_name,email,age)VALUES(&#x27;小笼包&#x27;,&#x27;1232123@qq.com&#x27;,22);</span><br><span class=\"line\">-- 查看数据</span><br><span class=\"line\">SELECT *FROM student;</span><br><span class=\"line\">-- 增加时间戳</span><br><span class=\"line\"></span><br><span class=\"line\">-- 更新表</span><br><span class=\"line\"></span><br><span class=\"line\">-- 查看表内容</span><br><span class=\"line\"></span><br><span class=\"line\">-- 作业二</span><br><span class=\"line\"></span><br><span class=\"line\">-- 表一 学生表</span><br><span class=\"line\">CREATE TABLE student2(</span><br><span class=\"line\">std_id int(10) auto_increment,</span><br><span class=\"line\">std_name VARCHAR(5)NOT NULL,</span><br><span class=\"line\">major_id int(10)NOT NULL,</span><br><span class=\"line\">PRIMARY KEY(std_id));</span><br><span class=\"line\">-- 查看表的结构</span><br><span class=\"line\">DESC student2;</span><br><span class=\"line\">-- 添加数据</span><br><span class=\"line\">INSERT INTO student2(std_id,std_name,major_id)VALUES(1,&#x27;小王&#x27;,&#x27;2013&#x27;);</span><br><span class=\"line\">-- 查看数据</span><br><span class=\"line\">SELECT * FROM student2;</span><br><span class=\"line\">-- 添加性别字段</span><br><span class=\"line\"></span><br><span class=\"line\">-- 表二 课程表</span><br><span class=\"line\">CREATE TABLE curriculum(</span><br><span class=\"line\">cur_id int(10),</span><br><span class=\"line\">cur_name VARCHAR(10) NOT NULL,</span><br><span class=\"line\">score int(1) NOT NULL,</span><br><span class=\"line\">PRIMARY KEY(cur_id));</span><br><span class=\"line\">-- 查看表的结构</span><br><span class=\"line\">DESC curriculum;</span><br><span class=\"line\">-- 添加数据</span><br><span class=\"line\">INSERT INTO curriculum(cur_id,cur_name,score)VALUES(1,&#x27;大学美育&#x27;,1);</span><br><span class=\"line\">-- 添加字段自增</span><br><span class=\"line\">ALTER TABLE curriculum MODIFY cur_id INT ( 10 ) auto_increment;</span><br><span class=\"line\">INSERT INTO curriculum(cur_name,score)VALUES(&#x27;大学体育&#x27;,1);</span><br><span class=\"line\">INSERT INTO curriculum(cur_name,score)VALUES(&#x27;javaweb开发&#x27;,1);</span><br><span class=\"line\">-- 查看数据</span><br><span class=\"line\">SELECT * FROM curriculum;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select  course.cno,cname,score.sno from course,score where score.cno=course.cno and cname=&quot;数据结构&quot;;</span><br><span class=\"line\">select sno from score where score.cno=( select cno from course where cname=&quot;数据结构&quot;);</span><br><span class=\"line\"># 求学生人数不足3人的系及其相应的学生数求学生人数不足3人的系及其相应的学生数</span><br><span class=\"line\">select sdept,count(*) from student group by sdept having count(*)&lt;3;</span><br><span class=\"line\">-- sname 不能详细显示出来</span><br><span class=\"line\">SELECT SNAME, SDEPT,COUNT(*)  FROM STUDENT  GROUP BY SDEPT having SDEPT=&quot;CS&quot;;</span><br><span class=\"line\"># 学生的编号是唯一的所以没有出错</span><br><span class=\"line\">SELECT SAGE FROM STUDENT GROUP BY SAGE;</span><br><span class=\"line\"># (建立视图)  建立计算机系的学生的视图STUDENT_CS。</span><br><span class=\"line\">create view STUDENT_GB  as SELECT * FROM STUDENT WHERE SDEPT=&quot;CS&quot;;</span><br><span class=\"line\">select * from STUDENT_GB;</span><br><span class=\"line\"># (建立视图)  建立由学号和平均成绩两个字段的视图STUDENT_GR\\</span><br><span class=\"line\">select  score from score;</span><br><span class=\"line\">create view STUDENT_GR as select s.sno,avg(s.score) from (select student.sno as sno,ifnull(score,0) score  from student left join score on score.sno=student.sno) as s group by s.sno;</span><br><span class=\"line\"># (视图查询)利用视图STUDENT_GR求平均成绩为88分以上的学生学号和平均成绩。</span><br><span class=\"line\">select * from STUDENT_GR where `avg(s.score)`&gt;88;</span><br><span class=\"line\"># (视图更新)利视图STUDENT_CS，增加学生( ‘96006’, ‘张然’, ‘CS’, ‘02’, ‘男’, 19 )</span><br><span class=\"line\">insert into STUDENT_GB(sno, sname, sdept, sclass, sage, ssex) values (&quot;96006&quot;,&quot;张然&quot;, &quot;CS&quot;, &quot;02&quot;, 19, &quot;男&quot;);</span><br><span class=\"line\"># （视图更新)利用视图STUDENT_CS，将学生年龄增加1岁。观察其结果</span><br><span class=\"line\">select * from student_gb;</span><br><span class=\"line\">update student_gb set sage=sage+1;</span><br><span class=\"line\"># 求年龄在19岁与22岁(含20岁和22岁)之间的学生的学号和年龄。</span><br><span class=\"line\">select sno ,sage from student where sage&gt;=19 and sage&lt;=22;</span><br><span class=\"line\"># 求选修了课程的学生学号。</span><br><span class=\"line\">select distinct sno from score;</span><br><span class=\"line\"># 求各门课程的平均成绩与总成绩</span><br><span class=\"line\">select course.cname,ifnull(avg(score),0),ifnull(sum(score),0) sum from course left join score on course.cno=score.cno group by course.cno;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>if()函数,case when then end 表达式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select employee_id, case when employee_id % 2 = 1 and name not regexp(&#x27;^M&#x27;) then salary else 0 end as bonus</span><br><span class=\"line\">from Employees</span><br><span class=\"line\">;</span><br><span class=\"line\">select employee_id ,(if(employee_id%2=1 and name not like &quot;M%&quot;),salary,0) as  bonus  from employees order by employee_id;</span><br><span class=\"line\">-- 正则限定开头符号 ^</span><br><span class=\"line\">-- 不以M开头的名字</span><br><span class=\"line\">name not regexp/rlike(&#x27;^M&#x27;)</span><br><span class=\"line\">-- 模糊查询</span><br><span class=\"line\"> name not like &quot;M%&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"> sex = 如果case when sex=&#x27;m&#x27; 符合then &#x27;f&#x27; 否则else &#x27;m&#x27; end</span><br><span class=\"line\"> if(条件,返回,否则)</span><br></pre></td></tr></table></figure>\n\n<p>count(),group_concat() 的使用 distinct</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select distinct sell_date,count(distinct product) num_sold,GROUP_CONCAT( distinct product) products  from activities group by sell_date order by sell_date;</span><br></pre></td></tr></table></figure>\n\n<p>两个正则</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONDITIONS REGEXP &#x27;^DIAB1&#x27; 以DIAB1开头的字符</span><br><span class=\"line\">CONDITIONS REGEXP &#x27;\\\\sDIAB1&#x27; 以空格加DIAB1的字符</span><br></pre></td></tr></table></figure>\n\n<p>db表用户对数据库的权限</p>\n<p>dos命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -h 127.0.0.1 -p8080 -uroot -p123 homework</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE `homework` /*!40100 DEFAULT CHARACTER SET utf8 */ |</span><br></pre></td></tr></table></figure>\n\n<p>mysql在命令行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p [要使用的数据库];</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show databases;</span><br><span class=\"line\">show tables;</span><br><span class=\"line\">show create database/table [数据库名/表名];</span><br><span class=\"line\">use mysql ;</span><br><span class=\"line\">-- 查看存在的用户</span><br><span class=\"line\">select user from user;</span><br><span class=\"line\">-- 添加用户注意符号</span><br><span class=\"line\">create user</span><br><span class=\"line\"> text @&quot;127.0.0.1&quot;</span><br><span class=\"line\"> IDENTIFIED by &quot;123&quot;;</span><br><span class=\"line\"> -- 改密码</span><br><span class=\"line\"> SET PASSWORD FOR &#x27;usernamexxx&#x27;@&#x27;hostxxx&#x27; = PASSWORD(&#x27;newpasswordxxx&#x27;);</span><br><span class=\"line\"> -- 当前用户</span><br><span class=\"line\"> SET PASSWORD = PASSWORD(&quot;newpasswordxxx&quot;);</span><br><span class=\"line\"> -- 删除用户</span><br><span class=\"line\"> DROP USER &#x27;usernamexxx&#x27;@&#x27;hostxxx&#x27;;</span><br><span class=\"line\">-- 或者</span><br><span class=\"line\">delete from user where user.user=&quot;用户名&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>union all 关键字和 union </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select employee_id from (</span><br><span class=\"line\">    -- 将两个表的字段合成一个</span><br><span class=\"line\">    select employee_id</span><br><span class=\"line\">    from employees</span><br><span class=\"line\">    union all</span><br><span class=\"line\">    select employee_id</span><br><span class=\"line\">    from salaries</span><br><span class=\"line\">    </span><br><span class=\"line\">) as ans</span><br><span class=\"line\">group by employee_id</span><br><span class=\"line\">having count(employee_id) = 1</span><br><span class=\"line\">order by employee_id</span><br><span class=\"line\">;</span><br><span class=\"line\">union all 关键字和 union </span><br><span class=\"line\">-- 加了all会显示重复的,不加就会过滤掉</span><br></pre></td></tr></table></figure>\n\n<p>limit取第二高薪资</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select (select DISTINCT salary end  from employee order by  salary desc limit 1,1) as SecondHighestSalary ;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql中isnull,ifnull,nullif的用法如下：</span><br><span class=\"line\"></span><br><span class=\"line\">isnull(expr) 的用法： 如expr 为null，那么isnull() 的返回值为 1，否则返回值为 0。 mysql&gt; select isnull(1+1); -&gt; 0 mysql&gt; select isnull(1/0); -&gt; 1 使用= 的null 值对比通常是错误的。</span><br><span class=\"line\">a</span><br><span class=\"line\">isnull() 函数同 is null比较操作符具有一些相同的特性。请参见有关is null 的说明。</span><br><span class=\"line\"></span><br><span class=\"line\">IFNULL(expr1,expr2)的用法：</span><br><span class=\"line\"></span><br><span class=\"line\">假如expr1 不为 NULL，则 IFNULL() 的返回值为 expr1; 否则其返回值为 expr2。IFNULL()的返回值是数字或是字符串，具体情况取决于其所使用的语境。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT IFNULL(1,0);</span><br><span class=\"line\">-&gt; 1</span><br><span class=\"line\">mysql&gt; SELECT IFNULL(NULL,10);</span><br><span class=\"line\">-&gt; 10</span><br><span class=\"line\">mysql&gt; SELECT IFNULL(1/0,10);</span><br><span class=\"line\">-&gt; 10</span><br><span class=\"line\">mysql&gt; SELECT</span><br><span class=\"line\">IFNULL(1/0,&#x27;yes&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">        -&gt;   &#x27;yes</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limit n子句表示查询结果返回前n条数据</span><br><span class=\"line\"></span><br><span class=\"line\">offset n表示跳过x条语句</span><br><span class=\"line\"></span><br><span class=\"line\">limit y offset x 分句表示查询结果跳过 x 条数据，读取前 y 条数据</span><br><span class=\"line\"></span><br><span class=\"line\">使用limit和offset，降序排列再返回第二条记录可以得到第二大的值。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"各种连接\"><a href=\"#各种连接\" class=\"headerlink\" title=\"各种连接\"></a>各种连接</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inner join：2表值都存在</span><br><span class=\"line\"></span><br><span class=\"line\">outer join：附表中值可能存在null的情况。</span><br><span class=\"line\"></span><br><span class=\"line\">总结：</span><br><span class=\"line\"></span><br><span class=\"line\">①A inner join B：取交集</span><br><span class=\"line\"></span><br><span class=\"line\">②A left join B：取A全部，B没有对应的值，则为null</span><br><span class=\"line\"></span><br><span class=\"line\">③A right join B：取B全部，A没有对应的值，则为null</span><br><span class=\"line\"></span><br><span class=\"line\">④A full outer join B：取并集，彼此没有对应的值为null</span><br><span class=\"line\"></span><br><span class=\"line\">上述4种的对应条件，在on后填写。</span><br></pre></td></tr></table></figure>\n\n<p>datediff函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL 使用 DATEDIFF </span><br><span class=\"line\">两个日期间的差值</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"1-mysql命令\"><a href=\"#1-mysql命令\" class=\"headerlink\" title=\"1. mysql命令\"></a>1. mysql命令</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net start mysql --开启sql服务</span><br><span class=\"line\">net stop mysql--关闭sql服务</span><br><span class=\"line\">mysql -uroot -p + password;//命令行mysql</span><br><span class=\"line\">show databases/(tables);//展示所有数据库或者表</span><br><span class=\"line\">use dataname;打开指定数据库</span><br><span class=\"line\">create database/(table) name;//创建数据库或者表</span><br><span class=\"line\">drop database(table) name;//删除数据库或者表</span><br><span class=\"line\">describe/(desc) tablename ;//显示表这一列的东西</span><br><span class=\"line\">create table tablename(参数 类型(长度),参数 类型(长度);//创建表</span><br><span class=\"line\">alter database dbname character set utf8;//修改数据库的字符集</span><br><span class=\"line\">flush privileges;//刷新数据库</span><br><span class=\"line\">show create database/(table) name;//展示创建数据库或者表的结构</span><br><span class=\"line\">                       </span><br><span class=\"line\">alter table old_name rename new_name;//重命名表(数据库不重命名)</span><br><span class=\"line\">alter table tablename modify id int(10);//修改字段类型</span><br><span class=\"line\">alter table tablename change gener sex verchar[1];//修改字段</span><br><span class=\"line\">alter table tablename add name int()[first\\last,after age];//添加属性        </span><br><span class=\"line\">alter table tablename drop score;//删除字段</span><br><span class=\"line\">alter table tablename modify old after ;</span><br><span class=\"line\">//多字段主键要用表级约束而不是列级约束</span><br><span class=\"line\">alter table tablename add primary key (age id)//已有的表添加主键约束</span><br><span class=\"line\">-- 添加外键约束                       </span><br><span class=\"line\">create table 表名(</span><br><span class=\"line\">    id interesting(10),</span><br><span class=\"line\">    foreign key() references 外表(字段名);</span><br><span class=\"line\">);       </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数据库数据的增删查改\"><a href=\"#数据库数据的增删查改\" class=\"headerlink\" title=\"数据库数据的增删查改\"></a>数据库数据的增删查改</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">insert tablename value (1,2,3),();</span><br><span class=\"line\">select *from tablename;</span><br><span class=\"line\">select DISTINCT &lt;字段名称&gt;as &#x27;新名称&#x27; from 表名 where 条件 order by &lt;字段&gt;[顺序],&lt;字段2&gt;[顺序];</span><br><span class=\"line\">--查询语句 排序的时候第二个字段在第一个字段排序后字段一相同的字段按字段2的顺序排序,其中 DISTINCT关键字可以删除重复元素</span><br><span class=\"line\">SELECT product_name, product_type, regist_date</span><br><span class=\"line\">FROM Product</span><br><span class=\"line\">WHERE regist_date &lt; &#x27;2009-09-27&#x27;;</span><br><span class=\"line\">-- 日期的比较</span><br><span class=\"line\">-- 字段为字段内容里所以的数据</span><br><span class=\"line\">select * from 表名 where 字段 in(字段内容);                       </span><br><span class=\"line\">-- 字段为空的                       </span><br><span class=\"line\">select * from 表名 where 字段 is null;   </span><br><span class=\"line\">-- 模糊查询 通配符 % 与 _</span><br><span class=\"line\">select * from 表名 where 字段 [no]like &#x27;%s%&#x27;;-- 字段中含有s的               </span><br><span class=\"line\">select * from 表名 where 字段 [no]like &#x27;20130930%&#x27;--   查俺们班的人</span><br><span class=\"line\">-- 一个字符为_ 多个为%</span><br><span class=\"line\"> -- 测试整型的模糊查询</span><br><span class=\"line\">-- 插入</span><br><span class=\"line\">insert into 表名(字段) values();                       </span><br><span class=\"line\">-- 删除</span><br><span class=\"line\">delete from 表名 where 表达式;                       </span><br><span class=\"line\">truncate table 表名;                       </span><br><span class=\"line\">-- 更新             </span><br><span class=\"line\">update 表名 set 字段=内容,字段2=内容 where 表达式;                       </span><br><span class=\"line\">-- 限制查询 从下标为三开始的5行内容</span><br><span class=\"line\">select * from 表名 where 条件 limit [3,5]   </span><br></pre></td></tr></table></figure>\n\n\n\n<p>mysql中一些常用的函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">date(表中date字段)提取日期</span><br><span class=\"line\">year(表中date字段)提取年</span><br><span class=\"line\">current_time--当前时间</span><br><span class=\"line\">COUNT： 计算表中的记录数（行数）</span><br><span class=\"line\">SUM： 计算表中数值列中数据的合计值</span><br><span class=\"line\">AVG： 计算表中数值列中数据的平均值</span><br><span class=\"line\">MAX： 求出表中任意列中数据的最大值</span><br><span class=\"line\">MIN： 求出表中任意列中数据的最小值</span><br><span class=\"line\">SELECT COUNT(*)</span><br><span class=\"line\">FROM Product;</span><br><span class=\"line\">count()</span><br><span class=\"line\">group_concat()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limit 开始位置,j</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"mysql事务\"><a href=\"#mysql事务\" class=\"headerlink\" title=\"mysql事务\"></a>mysql事务</h3><p>acid原则</p>\n<p>a原子性:事务中的操作要么都发生，要么都不发生。</p>\n<p>c 一致性:事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。</p>\n<p>i 隔离性:事务之间是隔离的，一个事务不应该影响其它事务运行效果。</p>\n<ol>\n<li>脏读</li>\n<li>不可重复读</li>\n<li>幻读</li>\n</ol>\n<p>d 持久性:\t事务一旦提交，则持久化保存在数据库中。</p>\n<p>事务自动提交 set autocommit&#x3D;0&#x2F;1</p>\n<p>开启事务</p>\n<p>start transaction </p>\n<p>insert 数据</p>\n<p>提交 commit </p>\n<p>回滚 rollback</p>\n<p> savepoint 点名 事务保存点</p>\n<p>rollback to savepoint 点名</p>\n<p>删除保存点 release savepoint 点名</p>\n<p>create database  shop  character set utf8 collate utf8_general_ci</p>\n<p>use shop</p>\n<p>create table <code>account</code>(</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">开启一组事务</span><br><span class=\"line\">set autocommit =0 </span><br><span class=\"line\">start transaction </span><br><span class=\"line\">update account set money=money+100 where name =`a</span><br><span class=\"line\">commit</span><br><span class=\"line\">rollback</span><br><span class=\"line\">set autocommit =1;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>)engin &#x3D; innodb default charset &#x3D;utf8</p>\n<h5 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h5><p>帮助高效获取数据的数据结构</p>\n<p>分类</p>\n<ol>\n<li><p>主键索引</p>\n<p> 主键不可以重复</p>\n</li>\n<li><p>唯一索引</p>\n</li>\n<li><p>常规索引</p>\n</li>\n<li><p>全文索引</p>\n<p>显示所有索引</p>\n<p>show INDEX FROM STUDENT</p>\n<p>alter table student add fulltext index student; </p>\n<p>explain 分析sql</p>\n<p>索引原则</p>\n<p>不对经常修改的字段添加索引</p>\n<p>小数据量不需要</p>\n<p>一般加在用来查询的字段上</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database study;</span><br><span class=\"line\">use study;</span><br><span class=\"line\">-- 学生表Fd</span><br><span class=\"line\">create table student(</span><br><span class=\"line\">std_id int(10)  auto_increment,</span><br><span class=\"line\">std_name VARCHAR(5) NOT NULL,</span><br><span class=\"line\">email VARCHAR(20) NOT NULL UNIQUE,</span><br><span class=\"line\">sex VARCHAR(1) DEFAULT &#x27;男&#x27;,</span><br><span class=\"line\">age int(3) NOT NULL,</span><br><span class=\"line\">primary key(std_id));</span><br><span class=\"line\">-- 查看表的结构</span><br><span class=\"line\">DESC student;</span><br><span class=\"line\">-- 插入数据</span><br><span class=\"line\">INSERT INTO student(std_id,std_name,email,age)VALUES(1,&#x27;小王&#x27;,&#x27;123456@qq.com&#x27;,21);</span><br><span class=\"line\">-- 查看数据</span><br><span class=\"line\">SELECT *FROM student;</span><br><span class=\"line\">-- 追加数据</span><br><span class=\"line\">INSERT into student(std_name,email,age)VALUES(&#x27;小笼包&#x27;,&#x27;1232123@qq.com&#x27;,22);</span><br><span class=\"line\">-- 查看数据</span><br><span class=\"line\">SELECT *FROM student;</span><br><span class=\"line\">-- 增加时间戳</span><br><span class=\"line\"></span><br><span class=\"line\">-- 更新表</span><br><span class=\"line\"></span><br><span class=\"line\">-- 查看表内容</span><br><span class=\"line\"></span><br><span class=\"line\">-- 作业二</span><br><span class=\"line\"></span><br><span class=\"line\">-- 表一 学生表</span><br><span class=\"line\">CREATE TABLE student2(</span><br><span class=\"line\">std_id int(10) auto_increment,</span><br><span class=\"line\">std_name VARCHAR(5)NOT NULL,</span><br><span class=\"line\">major_id int(10)NOT NULL,</span><br><span class=\"line\">PRIMARY KEY(std_id));</span><br><span class=\"line\">-- 查看表的结构</span><br><span class=\"line\">DESC student2;</span><br><span class=\"line\">-- 添加数据</span><br><span class=\"line\">INSERT INTO student2(std_id,std_name,major_id)VALUES(1,&#x27;小王&#x27;,&#x27;2013&#x27;);</span><br><span class=\"line\">-- 查看数据</span><br><span class=\"line\">SELECT * FROM student2;</span><br><span class=\"line\">-- 添加性别字段</span><br><span class=\"line\"></span><br><span class=\"line\">-- 表二 课程表</span><br><span class=\"line\">CREATE TABLE curriculum(</span><br><span class=\"line\">cur_id int(10),</span><br><span class=\"line\">cur_name VARCHAR(10) NOT NULL,</span><br><span class=\"line\">score int(1) NOT NULL,</span><br><span class=\"line\">PRIMARY KEY(cur_id));</span><br><span class=\"line\">-- 查看表的结构</span><br><span class=\"line\">DESC curriculum;</span><br><span class=\"line\">-- 添加数据</span><br><span class=\"line\">INSERT INTO curriculum(cur_id,cur_name,score)VALUES(1,&#x27;大学美育&#x27;,1);</span><br><span class=\"line\">-- 添加字段自增</span><br><span class=\"line\">ALTER TABLE curriculum MODIFY cur_id INT ( 10 ) auto_increment;</span><br><span class=\"line\">INSERT INTO curriculum(cur_name,score)VALUES(&#x27;大学体育&#x27;,1);</span><br><span class=\"line\">INSERT INTO curriculum(cur_name,score)VALUES(&#x27;javaweb开发&#x27;,1);</span><br><span class=\"line\">-- 查看数据</span><br><span class=\"line\">SELECT * FROM curriculum;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select  course.cno,cname,score.sno from course,score where score.cno=course.cno and cname=&quot;数据结构&quot;;</span><br><span class=\"line\">select sno from score where score.cno=( select cno from course where cname=&quot;数据结构&quot;);</span><br><span class=\"line\"># 求学生人数不足3人的系及其相应的学生数求学生人数不足3人的系及其相应的学生数</span><br><span class=\"line\">select sdept,count(*) from student group by sdept having count(*)&lt;3;</span><br><span class=\"line\">-- sname 不能详细显示出来</span><br><span class=\"line\">SELECT SNAME, SDEPT,COUNT(*)  FROM STUDENT  GROUP BY SDEPT having SDEPT=&quot;CS&quot;;</span><br><span class=\"line\"># 学生的编号是唯一的所以没有出错</span><br><span class=\"line\">SELECT SAGE FROM STUDENT GROUP BY SAGE;</span><br><span class=\"line\"># (建立视图)  建立计算机系的学生的视图STUDENT_CS。</span><br><span class=\"line\">create view STUDENT_GB  as SELECT * FROM STUDENT WHERE SDEPT=&quot;CS&quot;;</span><br><span class=\"line\">select * from STUDENT_GB;</span><br><span class=\"line\"># (建立视图)  建立由学号和平均成绩两个字段的视图STUDENT_GR\\</span><br><span class=\"line\">select  score from score;</span><br><span class=\"line\">create view STUDENT_GR as select s.sno,avg(s.score) from (select student.sno as sno,ifnull(score,0) score  from student left join score on score.sno=student.sno) as s group by s.sno;</span><br><span class=\"line\"># (视图查询)利用视图STUDENT_GR求平均成绩为88分以上的学生学号和平均成绩。</span><br><span class=\"line\">select * from STUDENT_GR where `avg(s.score)`&gt;88;</span><br><span class=\"line\"># (视图更新)利视图STUDENT_CS，增加学生( ‘96006’, ‘张然’, ‘CS’, ‘02’, ‘男’, 19 )</span><br><span class=\"line\">insert into STUDENT_GB(sno, sname, sdept, sclass, sage, ssex) values (&quot;96006&quot;,&quot;张然&quot;, &quot;CS&quot;, &quot;02&quot;, 19, &quot;男&quot;);</span><br><span class=\"line\"># （视图更新)利用视图STUDENT_CS，将学生年龄增加1岁。观察其结果</span><br><span class=\"line\">select * from student_gb;</span><br><span class=\"line\">update student_gb set sage=sage+1;</span><br><span class=\"line\"># 求年龄在19岁与22岁(含20岁和22岁)之间的学生的学号和年龄。</span><br><span class=\"line\">select sno ,sage from student where sage&gt;=19 and sage&lt;=22;</span><br><span class=\"line\"># 求选修了课程的学生学号。</span><br><span class=\"line\">select distinct sno from score;</span><br><span class=\"line\"># 求各门课程的平均成绩与总成绩</span><br><span class=\"line\">select course.cname,ifnull(avg(score),0),ifnull(sum(score),0) sum from course left join score on course.cno=score.cno group by course.cno;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>if()函数,case when then end 表达式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select employee_id, case when employee_id % 2 = 1 and name not regexp(&#x27;^M&#x27;) then salary else 0 end as bonus</span><br><span class=\"line\">from Employees</span><br><span class=\"line\">;</span><br><span class=\"line\">select employee_id ,(if(employee_id%2=1 and name not like &quot;M%&quot;),salary,0) as  bonus  from employees order by employee_id;</span><br><span class=\"line\">-- 正则限定开头符号 ^</span><br><span class=\"line\">-- 不以M开头的名字</span><br><span class=\"line\">name not regexp/rlike(&#x27;^M&#x27;)</span><br><span class=\"line\">-- 模糊查询</span><br><span class=\"line\"> name not like &quot;M%&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"> sex = 如果case when sex=&#x27;m&#x27; 符合then &#x27;f&#x27; 否则else &#x27;m&#x27; end</span><br><span class=\"line\"> if(条件,返回,否则)</span><br></pre></td></tr></table></figure>\n\n<p>count(),group_concat() 的使用 distinct</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select distinct sell_date,count(distinct product) num_sold,GROUP_CONCAT( distinct product) products  from activities group by sell_date order by sell_date;</span><br></pre></td></tr></table></figure>\n\n<p>两个正则</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONDITIONS REGEXP &#x27;^DIAB1&#x27; 以DIAB1开头的字符</span><br><span class=\"line\">CONDITIONS REGEXP &#x27;\\\\sDIAB1&#x27; 以空格加DIAB1的字符</span><br></pre></td></tr></table></figure>\n\n<p>db表用户对数据库的权限</p>\n<p>dos命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -h 127.0.0.1 -p8080 -uroot -p123 homework</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE `homework` /*!40100 DEFAULT CHARACTER SET utf8 */ |</span><br></pre></td></tr></table></figure>\n\n<p>mysql在命令行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p [要使用的数据库];</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show databases;</span><br><span class=\"line\">show tables;</span><br><span class=\"line\">show create database/table [数据库名/表名];</span><br><span class=\"line\">use mysql ;</span><br><span class=\"line\">-- 查看存在的用户</span><br><span class=\"line\">select user from user;</span><br><span class=\"line\">-- 添加用户注意符号</span><br><span class=\"line\">create user</span><br><span class=\"line\"> text @&quot;127.0.0.1&quot;</span><br><span class=\"line\"> IDENTIFIED by &quot;123&quot;;</span><br><span class=\"line\"> -- 改密码</span><br><span class=\"line\"> SET PASSWORD FOR &#x27;usernamexxx&#x27;@&#x27;hostxxx&#x27; = PASSWORD(&#x27;newpasswordxxx&#x27;);</span><br><span class=\"line\"> -- 当前用户</span><br><span class=\"line\"> SET PASSWORD = PASSWORD(&quot;newpasswordxxx&quot;);</span><br><span class=\"line\"> -- 删除用户</span><br><span class=\"line\"> DROP USER &#x27;usernamexxx&#x27;@&#x27;hostxxx&#x27;;</span><br><span class=\"line\">-- 或者</span><br><span class=\"line\">delete from user where user.user=&quot;用户名&quot;;</span><br></pre></td></tr></table></figure>\n\n<p>union all 关键字和 union </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select employee_id from (</span><br><span class=\"line\">    -- 将两个表的字段合成一个</span><br><span class=\"line\">    select employee_id</span><br><span class=\"line\">    from employees</span><br><span class=\"line\">    union all</span><br><span class=\"line\">    select employee_id</span><br><span class=\"line\">    from salaries</span><br><span class=\"line\">    </span><br><span class=\"line\">) as ans</span><br><span class=\"line\">group by employee_id</span><br><span class=\"line\">having count(employee_id) = 1</span><br><span class=\"line\">order by employee_id</span><br><span class=\"line\">;</span><br><span class=\"line\">union all 关键字和 union </span><br><span class=\"line\">-- 加了all会显示重复的,不加就会过滤掉</span><br></pre></td></tr></table></figure>\n\n<p>limit取第二高薪资</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select (select DISTINCT salary end  from employee order by  salary desc limit 1,1) as SecondHighestSalary ;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql中isnull,ifnull,nullif的用法如下：</span><br><span class=\"line\"></span><br><span class=\"line\">isnull(expr) 的用法： 如expr 为null，那么isnull() 的返回值为 1，否则返回值为 0。 mysql&gt; select isnull(1+1); -&gt; 0 mysql&gt; select isnull(1/0); -&gt; 1 使用= 的null 值对比通常是错误的。</span><br><span class=\"line\">a</span><br><span class=\"line\">isnull() 函数同 is null比较操作符具有一些相同的特性。请参见有关is null 的说明。</span><br><span class=\"line\"></span><br><span class=\"line\">IFNULL(expr1,expr2)的用法：</span><br><span class=\"line\"></span><br><span class=\"line\">假如expr1 不为 NULL，则 IFNULL() 的返回值为 expr1; 否则其返回值为 expr2。IFNULL()的返回值是数字或是字符串，具体情况取决于其所使用的语境。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT IFNULL(1,0);</span><br><span class=\"line\">-&gt; 1</span><br><span class=\"line\">mysql&gt; SELECT IFNULL(NULL,10);</span><br><span class=\"line\">-&gt; 10</span><br><span class=\"line\">mysql&gt; SELECT IFNULL(1/0,10);</span><br><span class=\"line\">-&gt; 10</span><br><span class=\"line\">mysql&gt; SELECT</span><br><span class=\"line\">IFNULL(1/0,&#x27;yes&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">        -&gt;   &#x27;yes</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limit n子句表示查询结果返回前n条数据</span><br><span class=\"line\"></span><br><span class=\"line\">offset n表示跳过x条语句</span><br><span class=\"line\"></span><br><span class=\"line\">limit y offset x 分句表示查询结果跳过 x 条数据，读取前 y 条数据</span><br><span class=\"line\"></span><br><span class=\"line\">使用limit和offset，降序排列再返回第二条记录可以得到第二大的值。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"各种连接\"><a href=\"#各种连接\" class=\"headerlink\" title=\"各种连接\"></a>各种连接</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inner join：2表值都存在</span><br><span class=\"line\"></span><br><span class=\"line\">outer join：附表中值可能存在null的情况。</span><br><span class=\"line\"></span><br><span class=\"line\">总结：</span><br><span class=\"line\"></span><br><span class=\"line\">①A inner join B：取交集</span><br><span class=\"line\"></span><br><span class=\"line\">②A left join B：取A全部，B没有对应的值，则为null</span><br><span class=\"line\"></span><br><span class=\"line\">③A right join B：取B全部，A没有对应的值，则为null</span><br><span class=\"line\"></span><br><span class=\"line\">④A full outer join B：取并集，彼此没有对应的值为null</span><br><span class=\"line\"></span><br><span class=\"line\">上述4种的对应条件，在on后填写。</span><br></pre></td></tr></table></figure>\n\n<p>datediff函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL 使用 DATEDIFF </span><br><span class=\"line\">两个日期间的差值</span><br></pre></td></tr></table></figure>\n\n"},{"title":"ps","date":"2023-05-05T13:30:42.000Z","_content":"ctrl+d 为取消选框\n\nalt + 拖拽 复制图层\n\nctrl + j 复制图层\n\nctrl+{} 上下移动\n\n+shift +{}置顶 底\n\n盖印 ctrl shift alt e\n\nctrl t 自由变化\n\nctri sh i\n\n魔板shift 是+alt是将\n\n可以用套索剪选\n\ncrtl j 复制\n\n魔板选择并遮住\n\n#### 裁剪工具\n\n1. 可以在裁剪里面用拉直工具将图片拉直\n\n   #### 橡皮工具\n\n   可以添加一个蒙版然后在蒙版上用橡皮擦,将橡皮硬度变低画一种效果\n\n   ##### 换天空\n\n   用快速选择工具圈住空间,然后\n\n图片加圆角弧度\n\n可以建立矩形选取然后删除\n\n","source":"_posts/学习笔记/其他/ps.md","raw":"---\ntitle: ps\ndate: 2023-05-05 21:30:42\ntags:  \n---\nctrl+d 为取消选框\n\nalt + 拖拽 复制图层\n\nctrl + j 复制图层\n\nctrl+{} 上下移动\n\n+shift +{}置顶 底\n\n盖印 ctrl shift alt e\n\nctrl t 自由变化\n\nctri sh i\n\n魔板shift 是+alt是将\n\n可以用套索剪选\n\ncrtl j 复制\n\n魔板选择并遮住\n\n#### 裁剪工具\n\n1. 可以在裁剪里面用拉直工具将图片拉直\n\n   #### 橡皮工具\n\n   可以添加一个蒙版然后在蒙版上用橡皮擦,将橡皮硬度变低画一种效果\n\n   ##### 换天空\n\n   用快速选择工具圈住空间,然后\n\n图片加圆角弧度\n\n可以建立矩形选取然后删除\n\n","slug":"学习笔记/其他/ps","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oan000twwvndnzmd9lp","content":"<p>ctrl+d 为取消选框</p>\n<p>alt + 拖拽 复制图层</p>\n<p>ctrl + j 复制图层</p>\n<p>ctrl+{} 上下移动</p>\n<p>+shift +{}置顶 底</p>\n<p>盖印 ctrl shift alt e</p>\n<p>ctrl t 自由变化</p>\n<p>ctri sh i</p>\n<p>魔板shift 是+alt是将</p>\n<p>可以用套索剪选</p>\n<p>crtl j 复制</p>\n<p>魔板选择并遮住</p>\n<h4 id=\"裁剪工具\"><a href=\"#裁剪工具\" class=\"headerlink\" title=\"裁剪工具\"></a>裁剪工具</h4><ol>\n<li><p>可以在裁剪里面用拉直工具将图片拉直</p>\n<h4 id=\"橡皮工具\"><a href=\"#橡皮工具\" class=\"headerlink\" title=\"橡皮工具\"></a>橡皮工具</h4><p>可以添加一个蒙版然后在蒙版上用橡皮擦,将橡皮硬度变低画一种效果</p>\n<h5 id=\"换天空\"><a href=\"#换天空\" class=\"headerlink\" title=\"换天空\"></a>换天空</h5><p>用快速选择工具圈住空间,然后</p>\n</li>\n</ol>\n<p>图片加圆角弧度</p>\n<p>可以建立矩形选取然后删除</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>ctrl+d 为取消选框</p>\n<p>alt + 拖拽 复制图层</p>\n<p>ctrl + j 复制图层</p>\n<p>ctrl+{} 上下移动</p>\n<p>+shift +{}置顶 底</p>\n<p>盖印 ctrl shift alt e</p>\n<p>ctrl t 自由变化</p>\n<p>ctri sh i</p>\n<p>魔板shift 是+alt是将</p>\n<p>可以用套索剪选</p>\n<p>crtl j 复制</p>\n<p>魔板选择并遮住</p>\n<h4 id=\"裁剪工具\"><a href=\"#裁剪工具\" class=\"headerlink\" title=\"裁剪工具\"></a>裁剪工具</h4><ol>\n<li><p>可以在裁剪里面用拉直工具将图片拉直</p>\n<h4 id=\"橡皮工具\"><a href=\"#橡皮工具\" class=\"headerlink\" title=\"橡皮工具\"></a>橡皮工具</h4><p>可以添加一个蒙版然后在蒙版上用橡皮擦,将橡皮硬度变低画一种效果</p>\n<h5 id=\"换天空\"><a href=\"#换天空\" class=\"headerlink\" title=\"换天空\"></a>换天空</h5><p>用快速选择工具圈住空间,然后</p>\n</li>\n</ol>\n<p>图片加圆角弧度</p>\n<p>可以建立矩形选取然后删除</p>\n"},{"title":"javaweb","date":"2023-05-05T13:30:42.000Z","_content":"## javaweb基础\n\n一般项目结构:\n\n```\nweb-src-java-dao 数据库的增删改查\n\t\t\t-pojo/bean 实体类\n\t\t\t-servlet  控制器\n\t\t\t-uilt 工具类\n\t\t\t-filter 过滤器\n\t\t\t-service 业务\n\t\t\t\n```\n\n想做一个模拟登录\n\n# 2. javaweb\n\njsp:java servlet page\n\njsp文件中可以用html代码和java代码以此来构成动态网页\n\n原理:jsp继承httpservlet类,对于普通的java代码原封不动的在java方法中,html页面通过servlet的输出输出并响应html文件的头文件\n\n```xml\n<%@.\n```\n\n","source":"_posts/学习笔记/其他/javaweb.md","raw":"---\ntitle: javaweb\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## javaweb基础\n\n一般项目结构:\n\n```\nweb-src-java-dao 数据库的增删改查\n\t\t\t-pojo/bean 实体类\n\t\t\t-servlet  控制器\n\t\t\t-uilt 工具类\n\t\t\t-filter 过滤器\n\t\t\t-service 业务\n\t\t\t\n```\n\n想做一个模拟登录\n\n# 2. javaweb\n\njsp:java servlet page\n\njsp文件中可以用html代码和java代码以此来构成动态网页\n\n原理:jsp继承httpservlet类,对于普通的java代码原封不动的在java方法中,html页面通过servlet的输出输出并响应html文件的头文件\n\n```xml\n<%@.\n```\n\n","slug":"学习笔记/其他/javaweb","published":1,"updated":"2023-05-19T14:07:31.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oao000uwwvn08kx63h0","content":"<h2 id=\"javaweb基础\"><a href=\"#javaweb基础\" class=\"headerlink\" title=\"javaweb基础\"></a>javaweb基础</h2><p>一般项目结构:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">web-src-java-dao 数据库的增删改查</span><br><span class=\"line\">\t\t\t-pojo/bean 实体类</span><br><span class=\"line\">\t\t\t-servlet  控制器</span><br><span class=\"line\">\t\t\t-uilt 工具类</span><br><span class=\"line\">\t\t\t-filter 过滤器</span><br><span class=\"line\">\t\t\t-service 业务</span><br><span class=\"line\">\t\t\t</span><br></pre></td></tr></table></figure>\n\n<p>想做一个模拟登录</p>\n<h1 id=\"2-javaweb\"><a href=\"#2-javaweb\" class=\"headerlink\" title=\"2. javaweb\"></a>2. javaweb</h1><p>jsp:java servlet page</p>\n<p>jsp文件中可以用html代码和java代码以此来构成动态网页</p>\n<p>原理:jsp继承httpservlet类,对于普通的java代码原封不动的在java方法中,html页面通过servlet的输出输出并响应html文件的头文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@.</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"javaweb基础\"><a href=\"#javaweb基础\" class=\"headerlink\" title=\"javaweb基础\"></a>javaweb基础</h2><p>一般项目结构:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">web-src-java-dao 数据库的增删改查</span><br><span class=\"line\">\t\t\t-pojo/bean 实体类</span><br><span class=\"line\">\t\t\t-servlet  控制器</span><br><span class=\"line\">\t\t\t-uilt 工具类</span><br><span class=\"line\">\t\t\t-filter 过滤器</span><br><span class=\"line\">\t\t\t-service 业务</span><br><span class=\"line\">\t\t\t</span><br></pre></td></tr></table></figure>\n\n<p>想做一个模拟登录</p>\n<h1 id=\"2-javaweb\"><a href=\"#2-javaweb\" class=\"headerlink\" title=\"2. javaweb\"></a>2. javaweb</h1><p>jsp:java servlet page</p>\n<p>jsp文件中可以用html代码和java代码以此来构成动态网页</p>\n<p>原理:jsp继承httpservlet类,对于普通的java代码原封不动的在java方法中,html页面通过servlet的输出输出并响应html文件的头文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@.</span><br></pre></td></tr></table></figure>\n\n"},{"title":"python","date":"2023-05-05T13:30:42.000Z","_content":"# 1. python\n\n```python\nname=input(\"提示:\")\npip install pyinstaller//刷入py文件打包exe\npyinstaller -F -Clean ps.py生成可执行文件\nprint(\"输出\")\n```\n\n\n\n","source":"_posts/学习笔记/其他/python.md","raw":"---\ntitle: python\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# 1. python\n\n```python\nname=input(\"提示:\")\npip install pyinstaller//刷入py文件打包exe\npyinstaller -F -Clean ps.py生成可执行文件\nprint(\"输出\")\n```\n\n\n\n","slug":"学习笔记/其他/python","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oao000vwwvn7ebfd0rl","content":"<h1 id=\"1-python\"><a href=\"#1-python\" class=\"headerlink\" title=\"1. python\"></a>1. python</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name=<span class=\"built_in\">input</span>(<span class=\"string\">&quot;提示:&quot;</span>)</span><br><span class=\"line\">pip install pyinstaller//刷入py文件打包exe</span><br><span class=\"line\">pyinstaller -F -Clean ps.py生成可执行文件</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"1-python\"><a href=\"#1-python\" class=\"headerlink\" title=\"1. python\"></a>1. python</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name=<span class=\"built_in\">input</span>(<span class=\"string\">&quot;提示:&quot;</span>)</span><br><span class=\"line\">pip install pyinstaller//刷入py文件打包exe</span><br><span class=\"line\">pyinstaller -F -Clean ps.py生成可执行文件</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;输出&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"rust知识点","date":"2023-05-05T13:30:42.000Z","_content":"调用c语言的rand数的模块\n\n```rust\nextern \"C\" {\n    fn rand() -> i32;\n}\n\n```\n\nRust中的使用双指针的时候要考虑usize类型小于0的边界情况\n\n#[allow(dead_code)]取消代码警告\n\n```rust\n//结构体sheep\n//trait animal\n//为sheep实现animal的trait\n//sheep就可以用animal的功能\n//trait相当于抽象类\n\n```\n\n#### 包管理\n\n将其它rs文件用pub mod animal 导入\n\n然后用animal 的功能需要 use导入\n\n正则表达式\n\n```rust\n```\n\n#### map\n\n```rust\n//声明\nlet map : HashMap<u32, u32> = HashMap::new();\n//通过insert(k,v);插入数据\n//遍历map\nfor (k,v) in map{\n    todo!\n}\n//map不按顺序排列,需要顺序排列可以使用BtreeMap\n//可以使用[]来取值,但不安全面对没有的值会崩溃程序,推荐使用get来取值\n\n```\n\n\n\n##### 同时用HashMap和BTreeMap 统计数组数字数量\n\n```rust\n let mut map:HashMap<i32, i32>=HashMap::new();\n    let mut btree:BTreeMap<i32, i32>=BTreeMap::new();\n    let nums=vec![1,1,2,3,2,2,4,5,6,5,9];\n    // 用map统计nums中的数字的数量\n    for num in nums{\n        let number=map.entry(num).or_insert(0);\n        let number2=btree.entry(num).or_insert(0);\n        *number+=1;\n        *number2+=1;\n    }\n```\n\n###### 两种树的统计结果\n\n可以看出btreemap是有序的而hashmap无序\n\n```\nk=2     v=3\nk=1     v=2\nk=5     v=2\nk=6     v=1\nk=9     v=1\nk=3     v=1\nk=4     v=1\n-----------\nk=1     v=2\nk=2     v=3\nk=3     v=1\nk=4     v=1\nk=5     v=2\nk=6     v=1\nk=9     v=1\n```\n\n### 函数式编程\n\n```rust\n//迭代1~10通过过滤器选择符合条件x%2==0的数,通过collect收集起来\nlet s=(0..=10).filter(|x|x%2==0).collect::<Vec<i32>>();\n//map对迭代器中的数据进行操作\ns.iter().map(|x|x*2).collect::<Vec<i32>>();\n//take从迭代器中取出指定长度的数据\n\n//join将迭代器元素组合成单个字符串,并且添加一个字符串\n\n//sorted_by(|a,b|(a.1).cmp(b.1))使用指定的排序器进行排序\n```\n\n#### 闭包\n\n```rust\nstruct xx{\n    pub a:i32\n}\nimpl xx {\n    fn new(num:i32)->Self{\n        Self{\n            a:num\n        }\n    }\n    fn cmp<B,F>(x:B,y:B,mut f: F)->bool\n    where\n        F: FnMut(B,B) -> bool,\n    {\n        f(x,y)\n    }\n}\nfn main(){\n\tlet asa=xx::new(3);\n\tlet asa2=xx::new(5);\n   \t// 简单的比较器\n    print!(\"{}\", xx::cmp(asa,asa2,|x,y|x.a<y.a));\n}\n输出结果:true\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/学习笔记/其他/rust知识点.md","raw":"---\ntitle: rust知识点\ndate: 2023-05-05 21:30:42\ntags:  \n---\n调用c语言的rand数的模块\n\n```rust\nextern \"C\" {\n    fn rand() -> i32;\n}\n\n```\n\nRust中的使用双指针的时候要考虑usize类型小于0的边界情况\n\n#[allow(dead_code)]取消代码警告\n\n```rust\n//结构体sheep\n//trait animal\n//为sheep实现animal的trait\n//sheep就可以用animal的功能\n//trait相当于抽象类\n\n```\n\n#### 包管理\n\n将其它rs文件用pub mod animal 导入\n\n然后用animal 的功能需要 use导入\n\n正则表达式\n\n```rust\n```\n\n#### map\n\n```rust\n//声明\nlet map : HashMap<u32, u32> = HashMap::new();\n//通过insert(k,v);插入数据\n//遍历map\nfor (k,v) in map{\n    todo!\n}\n//map不按顺序排列,需要顺序排列可以使用BtreeMap\n//可以使用[]来取值,但不安全面对没有的值会崩溃程序,推荐使用get来取值\n\n```\n\n\n\n##### 同时用HashMap和BTreeMap 统计数组数字数量\n\n```rust\n let mut map:HashMap<i32, i32>=HashMap::new();\n    let mut btree:BTreeMap<i32, i32>=BTreeMap::new();\n    let nums=vec![1,1,2,3,2,2,4,5,6,5,9];\n    // 用map统计nums中的数字的数量\n    for num in nums{\n        let number=map.entry(num).or_insert(0);\n        let number2=btree.entry(num).or_insert(0);\n        *number+=1;\n        *number2+=1;\n    }\n```\n\n###### 两种树的统计结果\n\n可以看出btreemap是有序的而hashmap无序\n\n```\nk=2     v=3\nk=1     v=2\nk=5     v=2\nk=6     v=1\nk=9     v=1\nk=3     v=1\nk=4     v=1\n-----------\nk=1     v=2\nk=2     v=3\nk=3     v=1\nk=4     v=1\nk=5     v=2\nk=6     v=1\nk=9     v=1\n```\n\n### 函数式编程\n\n```rust\n//迭代1~10通过过滤器选择符合条件x%2==0的数,通过collect收集起来\nlet s=(0..=10).filter(|x|x%2==0).collect::<Vec<i32>>();\n//map对迭代器中的数据进行操作\ns.iter().map(|x|x*2).collect::<Vec<i32>>();\n//take从迭代器中取出指定长度的数据\n\n//join将迭代器元素组合成单个字符串,并且添加一个字符串\n\n//sorted_by(|a,b|(a.1).cmp(b.1))使用指定的排序器进行排序\n```\n\n#### 闭包\n\n```rust\nstruct xx{\n    pub a:i32\n}\nimpl xx {\n    fn new(num:i32)->Self{\n        Self{\n            a:num\n        }\n    }\n    fn cmp<B,F>(x:B,y:B,mut f: F)->bool\n    where\n        F: FnMut(B,B) -> bool,\n    {\n        f(x,y)\n    }\n}\nfn main(){\n\tlet asa=xx::new(3);\n\tlet asa2=xx::new(5);\n   \t// 简单的比较器\n    print!(\"{}\", xx::cmp(asa,asa2,|x,y|x.a<y.a));\n}\n输出结果:true\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"学习笔记/其他/rust知识点","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oao000wwwvn0iu285wi","content":"<p>调用c语言的rand数的模块</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">&quot;C&quot;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">rand</span>() <span class=\"punctuation\">-&gt;</span> <span class=\"type\">i32</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Rust中的使用双指针的时候要考虑usize类型小于0的边界情况</p>\n<p>#[allow(dead_code)]取消代码警告</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构体sheep</span></span><br><span class=\"line\"><span class=\"comment\">//trait animal</span></span><br><span class=\"line\"><span class=\"comment\">//为sheep实现animal的trait</span></span><br><span class=\"line\"><span class=\"comment\">//sheep就可以用animal的功能</span></span><br><span class=\"line\"><span class=\"comment\">//trait相当于抽象类</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"包管理\"><a href=\"#包管理\" class=\"headerlink\" title=\"包管理\"></a>包管理</h4><p>将其它rs文件用pub mod animal 导入</p>\n<p>然后用animal 的功能需要 use导入</p>\n<p>正则表达式</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"></span><br><span class=\"line\">#### map</span><br><span class=\"line\"></span><br><span class=\"line\">```rust</span><br><span class=\"line\"><span class=\"comment\">//声明</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">map</span> : HashMap&lt;<span class=\"type\">u32</span>, <span class=\"type\">u32</span>&gt; = HashMap::<span class=\"title function_ invoke__\">new</span>();</span><br><span class=\"line\"><span class=\"comment\">//通过insert(k,v);插入数据</span></span><br><span class=\"line\"><span class=\"comment\">//遍历map</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">for</span> (k,v) <span class=\"keyword\">in</span> map&#123;</span><br><span class=\"line\">    todo!</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//map不按顺序排列,需要顺序排列可以使用BtreeMap</span></span><br><span class=\"line\"><span class=\"comment\">//可以使用[]来取值,但不安全面对没有的值会崩溃程序,推荐使用get来取值</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"同时用HashMap和BTreeMap-统计数组数字数量\"><a href=\"#同时用HashMap和BTreeMap-统计数组数字数量\" class=\"headerlink\" title=\"同时用HashMap和BTreeMap 统计数组数字数量\"></a>同时用HashMap和BTreeMap 统计数组数字数量</h5><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">map</span>:HashMap&lt;<span class=\"type\">i32</span>, <span class=\"type\">i32</span>&gt;=HashMap::<span class=\"title function_ invoke__\">new</span>();</span><br><span class=\"line\">   <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">btree</span>:BTreeMap&lt;<span class=\"type\">i32</span>, <span class=\"type\">i32</span>&gt;=BTreeMap::<span class=\"title function_ invoke__\">new</span>();</span><br><span class=\"line\">   <span class=\"keyword\">let</span> <span class=\"variable\">nums</span>=<span class=\"built_in\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">5</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\">   <span class=\"comment\">// 用map统计nums中的数字的数量</span></span><br><span class=\"line\">   <span class=\"keyword\">for</span> <span class=\"variable\">num</span> <span class=\"keyword\">in</span> nums&#123;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">number</span>=map.<span class=\"title function_ invoke__\">entry</span>(num).<span class=\"title function_ invoke__\">or_insert</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">number2</span>=btree.<span class=\"title function_ invoke__\">entry</span>(num).<span class=\"title function_ invoke__\">or_insert</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">       *number+=<span class=\"number\">1</span>;</span><br><span class=\"line\">       *number2+=<span class=\"number\">1</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"两种树的统计结果\"><a href=\"#两种树的统计结果\" class=\"headerlink\" title=\"两种树的统计结果\"></a>两种树的统计结果</h6><p>可以看出btreemap是有序的而hashmap无序</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k=2     v=3</span><br><span class=\"line\">k=1     v=2</span><br><span class=\"line\">k=5     v=2</span><br><span class=\"line\">k=6     v=1</span><br><span class=\"line\">k=9     v=1</span><br><span class=\"line\">k=3     v=1</span><br><span class=\"line\">k=4     v=1</span><br><span class=\"line\">-----------</span><br><span class=\"line\">k=1     v=2</span><br><span class=\"line\">k=2     v=3</span><br><span class=\"line\">k=3     v=1</span><br><span class=\"line\">k=4     v=1</span><br><span class=\"line\">k=5     v=2</span><br><span class=\"line\">k=6     v=1</span><br><span class=\"line\">k=9     v=1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//迭代1~10通过过滤器选择符合条件x%2==0的数,通过collect收集起来</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">s</span>=(<span class=\"number\">0</span>..=<span class=\"number\">10</span>).<span class=\"title function_ invoke__\">filter</span>(|x|x%<span class=\"number\">2</span>==<span class=\"number\">0</span>).collect::&lt;<span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt;&gt;();</span><br><span class=\"line\"><span class=\"comment\">//map对迭代器中的数据进行操作</span></span><br><span class=\"line\">s.<span class=\"title function_ invoke__\">iter</span>().<span class=\"title function_ invoke__\">map</span>(|x|x*<span class=\"number\">2</span>).collect::&lt;<span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt;&gt;();</span><br><span class=\"line\"><span class=\"comment\">//take从迭代器中取出指定长度的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//join将迭代器元素组合成单个字符串,并且添加一个字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//sorted_by(|a,b|(a.1).cmp(b.1))使用指定的排序器进行排序</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h4><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">xx</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> a:<span class=\"type\">i32</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">xx</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">new</span>(num:<span class=\"type\">i32</span>)<span class=\"punctuation\">-&gt;</span><span class=\"keyword\">Self</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">Self</span>&#123;</span><br><span class=\"line\">            a:num</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">cmp</span>&lt;B,F&gt;(x:B,y:B,<span class=\"keyword\">mut</span> f: F)<span class=\"punctuation\">-&gt;</span><span class=\"type\">bool</span></span><br><span class=\"line\">    <span class=\"keyword\">where</span></span><br><span class=\"line\">        F: <span class=\"title function_ invoke__\">FnMut</span>(B,B) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">bool</span>,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">f</span>(x,y)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">main</span>()&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"variable\">asa</span>=xx::<span class=\"title function_ invoke__\">new</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"variable\">asa2</span>=xx::<span class=\"title function_ invoke__\">new</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">   \t<span class=\"comment\">// 简单的比较器</span></span><br><span class=\"line\">    <span class=\"built_in\">print!</span>(<span class=\"string\">&quot;&#123;&#125;&quot;</span>, xx::<span class=\"title function_ invoke__\">cmp</span>(asa,asa2,|x,y|x.a&lt;y.a));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">输出结果:<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>调用c语言的rand数的模块</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">&quot;C&quot;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">rand</span>() <span class=\"punctuation\">-&gt;</span> <span class=\"type\">i32</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Rust中的使用双指针的时候要考虑usize类型小于0的边界情况</p>\n<p>#[allow(dead_code)]取消代码警告</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//结构体sheep</span></span><br><span class=\"line\"><span class=\"comment\">//trait animal</span></span><br><span class=\"line\"><span class=\"comment\">//为sheep实现animal的trait</span></span><br><span class=\"line\"><span class=\"comment\">//sheep就可以用animal的功能</span></span><br><span class=\"line\"><span class=\"comment\">//trait相当于抽象类</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"包管理\"><a href=\"#包管理\" class=\"headerlink\" title=\"包管理\"></a>包管理</h4><p>将其它rs文件用pub mod animal 导入</p>\n<p>然后用animal 的功能需要 use导入</p>\n<p>正则表达式</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"></span><br><span class=\"line\">#### map</span><br><span class=\"line\"></span><br><span class=\"line\">```rust</span><br><span class=\"line\"><span class=\"comment\">//声明</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">map</span> : HashMap&lt;<span class=\"type\">u32</span>, <span class=\"type\">u32</span>&gt; = HashMap::<span class=\"title function_ invoke__\">new</span>();</span><br><span class=\"line\"><span class=\"comment\">//通过insert(k,v);插入数据</span></span><br><span class=\"line\"><span class=\"comment\">//遍历map</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">for</span> (k,v) <span class=\"keyword\">in</span> map&#123;</span><br><span class=\"line\">    todo!</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//map不按顺序排列,需要顺序排列可以使用BtreeMap</span></span><br><span class=\"line\"><span class=\"comment\">//可以使用[]来取值,但不安全面对没有的值会崩溃程序,推荐使用get来取值</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"同时用HashMap和BTreeMap-统计数组数字数量\"><a href=\"#同时用HashMap和BTreeMap-统计数组数字数量\" class=\"headerlink\" title=\"同时用HashMap和BTreeMap 统计数组数字数量\"></a>同时用HashMap和BTreeMap 统计数组数字数量</h5><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">map</span>:HashMap&lt;<span class=\"type\">i32</span>, <span class=\"type\">i32</span>&gt;=HashMap::<span class=\"title function_ invoke__\">new</span>();</span><br><span class=\"line\">   <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">btree</span>:BTreeMap&lt;<span class=\"type\">i32</span>, <span class=\"type\">i32</span>&gt;=BTreeMap::<span class=\"title function_ invoke__\">new</span>();</span><br><span class=\"line\">   <span class=\"keyword\">let</span> <span class=\"variable\">nums</span>=<span class=\"built_in\">vec!</span>[<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">5</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\">   <span class=\"comment\">// 用map统计nums中的数字的数量</span></span><br><span class=\"line\">   <span class=\"keyword\">for</span> <span class=\"variable\">num</span> <span class=\"keyword\">in</span> nums&#123;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">number</span>=map.<span class=\"title function_ invoke__\">entry</span>(num).<span class=\"title function_ invoke__\">or_insert</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">       <span class=\"keyword\">let</span> <span class=\"variable\">number2</span>=btree.<span class=\"title function_ invoke__\">entry</span>(num).<span class=\"title function_ invoke__\">or_insert</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">       *number+=<span class=\"number\">1</span>;</span><br><span class=\"line\">       *number2+=<span class=\"number\">1</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"两种树的统计结果\"><a href=\"#两种树的统计结果\" class=\"headerlink\" title=\"两种树的统计结果\"></a>两种树的统计结果</h6><p>可以看出btreemap是有序的而hashmap无序</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k=2     v=3</span><br><span class=\"line\">k=1     v=2</span><br><span class=\"line\">k=5     v=2</span><br><span class=\"line\">k=6     v=1</span><br><span class=\"line\">k=9     v=1</span><br><span class=\"line\">k=3     v=1</span><br><span class=\"line\">k=4     v=1</span><br><span class=\"line\">-----------</span><br><span class=\"line\">k=1     v=2</span><br><span class=\"line\">k=2     v=3</span><br><span class=\"line\">k=3     v=1</span><br><span class=\"line\">k=4     v=1</span><br><span class=\"line\">k=5     v=2</span><br><span class=\"line\">k=6     v=1</span><br><span class=\"line\">k=9     v=1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h3><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//迭代1~10通过过滤器选择符合条件x%2==0的数,通过collect收集起来</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">s</span>=(<span class=\"number\">0</span>..=<span class=\"number\">10</span>).<span class=\"title function_ invoke__\">filter</span>(|x|x%<span class=\"number\">2</span>==<span class=\"number\">0</span>).collect::&lt;<span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt;&gt;();</span><br><span class=\"line\"><span class=\"comment\">//map对迭代器中的数据进行操作</span></span><br><span class=\"line\">s.<span class=\"title function_ invoke__\">iter</span>().<span class=\"title function_ invoke__\">map</span>(|x|x*<span class=\"number\">2</span>).collect::&lt;<span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt;&gt;();</span><br><span class=\"line\"><span class=\"comment\">//take从迭代器中取出指定长度的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//join将迭代器元素组合成单个字符串,并且添加一个字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//sorted_by(|a,b|(a.1).cmp(b.1))使用指定的排序器进行排序</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h4><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">xx</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">pub</span> a:<span class=\"type\">i32</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">xx</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">new</span>(num:<span class=\"type\">i32</span>)<span class=\"punctuation\">-&gt;</span><span class=\"keyword\">Self</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">Self</span>&#123;</span><br><span class=\"line\">            a:num</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">cmp</span>&lt;B,F&gt;(x:B,y:B,<span class=\"keyword\">mut</span> f: F)<span class=\"punctuation\">-&gt;</span><span class=\"type\">bool</span></span><br><span class=\"line\">    <span class=\"keyword\">where</span></span><br><span class=\"line\">        F: <span class=\"title function_ invoke__\">FnMut</span>(B,B) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">bool</span>,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">f</span>(x,y)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">main</span>()&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"variable\">asa</span>=xx::<span class=\"title function_ invoke__\">new</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"variable\">asa2</span>=xx::<span class=\"title function_ invoke__\">new</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">   \t<span class=\"comment\">// 简单的比较器</span></span><br><span class=\"line\">    <span class=\"built_in\">print!</span>(<span class=\"string\">&quot;&#123;&#125;&quot;</span>, xx::<span class=\"title function_ invoke__\">cmp</span>(asa,asa2,|x,y|x.a&lt;y.a));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">输出结果:<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"title":"动态规划","date":"2023-05-05T13:30:42.000Z","_content":"# 动态规划\n\n动态规格问题大多都能够穷举求最值,但穷举效率很低,所以需要动态规划,需要dp数组和备忘录优化穷举过程,找到重叠子问题减少不必要的计算.\n\n### 动态规划三要素:重叠子问题,转态转移方程,最优子结构\n\n## 1. 矩阵相乘\n\n### 1.1 矩阵的乘法\n\n矩阵a(2/*3) 和矩阵b(3/*2)相乘变成2*2的矩阵\n\n2116021032\n\n## 2. 最长公共子序列\n\n2.1 \n","source":"_posts/学习笔记/其他/动态规划.md","raw":"---\ntitle: 动态规划\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# 动态规划\n\n动态规格问题大多都能够穷举求最值,但穷举效率很低,所以需要动态规划,需要dp数组和备忘录优化穷举过程,找到重叠子问题减少不必要的计算.\n\n### 动态规划三要素:重叠子问题,转态转移方程,最优子结构\n\n## 1. 矩阵相乘\n\n### 1.1 矩阵的乘法\n\n矩阵a(2/*3) 和矩阵b(3/*2)相乘变成2*2的矩阵\n\n2116021032\n\n## 2. 最长公共子序列\n\n2.1 \n","slug":"学习笔记/其他/动态规划","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oao000xwwvna9z4705g","content":"<h1 id=\"动态规划\"><a href=\"#动态规划\" class=\"headerlink\" title=\"动态规划\"></a>动态规划</h1><p>动态规格问题大多都能够穷举求最值,但穷举效率很低,所以需要动态规划,需要dp数组和备忘录优化穷举过程,找到重叠子问题减少不必要的计算.</p>\n<h3 id=\"动态规划三要素-重叠子问题-转态转移方程-最优子结构\"><a href=\"#动态规划三要素-重叠子问题-转态转移方程-最优子结构\" class=\"headerlink\" title=\"动态规划三要素:重叠子问题,转态转移方程,最优子结构\"></a>动态规划三要素:重叠子问题,转态转移方程,最优子结构</h3><h2 id=\"1-矩阵相乘\"><a href=\"#1-矩阵相乘\" class=\"headerlink\" title=\"1. 矩阵相乘\"></a>1. 矩阵相乘</h2><h3 id=\"1-1-矩阵的乘法\"><a href=\"#1-1-矩阵的乘法\" class=\"headerlink\" title=\"1.1 矩阵的乘法\"></a>1.1 矩阵的乘法</h3><p>矩阵a(2&#x2F;*3) 和矩阵b(3&#x2F;<em>2)相乘变成2</em>2的矩阵</p>\n<p>2116021032</p>\n<h2 id=\"2-最长公共子序列\"><a href=\"#2-最长公共子序列\" class=\"headerlink\" title=\"2. 最长公共子序列\"></a>2. 最长公共子序列</h2><p>2.1 </p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"动态规划\"><a href=\"#动态规划\" class=\"headerlink\" title=\"动态规划\"></a>动态规划</h1><p>动态规格问题大多都能够穷举求最值,但穷举效率很低,所以需要动态规划,需要dp数组和备忘录优化穷举过程,找到重叠子问题减少不必要的计算.</p>\n<h3 id=\"动态规划三要素-重叠子问题-转态转移方程-最优子结构\"><a href=\"#动态规划三要素-重叠子问题-转态转移方程-最优子结构\" class=\"headerlink\" title=\"动态规划三要素:重叠子问题,转态转移方程,最优子结构\"></a>动态规划三要素:重叠子问题,转态转移方程,最优子结构</h3><h2 id=\"1-矩阵相乘\"><a href=\"#1-矩阵相乘\" class=\"headerlink\" title=\"1. 矩阵相乘\"></a>1. 矩阵相乘</h2><h3 id=\"1-1-矩阵的乘法\"><a href=\"#1-1-矩阵的乘法\" class=\"headerlink\" title=\"1.1 矩阵的乘法\"></a>1.1 矩阵的乘法</h3><p>矩阵a(2&#x2F;*3) 和矩阵b(3&#x2F;<em>2)相乘变成2</em>2的矩阵</p>\n<p>2116021032</p>\n<h2 id=\"2-最长公共子序列\"><a href=\"#2-最长公共子序列\" class=\"headerlink\" title=\"2. 最长公共子序列\"></a>2. 最长公共子序列</h2><p>2.1 </p>\n"},{"title":"奇偶数分开","date":"2023-05-05T13:30:42.000Z","_content":"将数组中的数值按奇数偶数分开,奇数在后,偶数在前\n\n考点:双指针\n\n有两种写法\n\n1. 一种是类似快排的左右指针交叉移动,左指针找到奇数,右指针找到偶数,俩指针交换位置,继续查找\n\n```rust\npub fn sort_array_by_parity(mut nums: Vec<i32>) -> Vec<i32> {\n    let is_fun=|num:&i32|{\n        return num%2==0;\n    };\n    let mut left=0;\n    let mut right=nums.len()-1;\n    while left<right {\n        while is_fun(&nums[left])&&left<right {\n            left+=1;\n        }\n        while !is_fun(&nums[right])&&left<right {\n            right-=1;\n        }\n        if left<right {\n            let temp=nums[right];\n            nums[right]=nums[left];\n            nums[left]=temp;\n            left+=1;\n            right-=1;\n        }\n    }\n    nums\n}\n```\n\n2. 第二种是双指针从左往右边寻找,遇见奇数往尾指针交换,继续判断这个位置,尾指针往前移动\n\n```rust\npub fn sort_array_by_parity(mut nums: Vec<i32>) -> Vec<i32> {\n    let mut left=0;\n    let mut right=nums.len()-1;\n    let mut temp=0;\n    while left<right {\n        // 为奇数\n        if nums[left]%2==1 {\n            // 往后换\n            temp=nums[right];\n            nums[right]=nums[left];\n            nums[left]=temp;\n            right-=1;\n        }else{\n            left+=1;\n        }\n    }\n    nums\n}\n```\n\n","source":"_posts/学习笔记/其他/奇偶数分开.md","raw":"---\ntitle: 奇偶数分开\ndate: 2023-05-05 21:30:42\ntags:  \n---\n将数组中的数值按奇数偶数分开,奇数在后,偶数在前\n\n考点:双指针\n\n有两种写法\n\n1. 一种是类似快排的左右指针交叉移动,左指针找到奇数,右指针找到偶数,俩指针交换位置,继续查找\n\n```rust\npub fn sort_array_by_parity(mut nums: Vec<i32>) -> Vec<i32> {\n    let is_fun=|num:&i32|{\n        return num%2==0;\n    };\n    let mut left=0;\n    let mut right=nums.len()-1;\n    while left<right {\n        while is_fun(&nums[left])&&left<right {\n            left+=1;\n        }\n        while !is_fun(&nums[right])&&left<right {\n            right-=1;\n        }\n        if left<right {\n            let temp=nums[right];\n            nums[right]=nums[left];\n            nums[left]=temp;\n            left+=1;\n            right-=1;\n        }\n    }\n    nums\n}\n```\n\n2. 第二种是双指针从左往右边寻找,遇见奇数往尾指针交换,继续判断这个位置,尾指针往前移动\n\n```rust\npub fn sort_array_by_parity(mut nums: Vec<i32>) -> Vec<i32> {\n    let mut left=0;\n    let mut right=nums.len()-1;\n    let mut temp=0;\n    while left<right {\n        // 为奇数\n        if nums[left]%2==1 {\n            // 往后换\n            temp=nums[right];\n            nums[right]=nums[left];\n            nums[left]=temp;\n            right-=1;\n        }else{\n            left+=1;\n        }\n    }\n    nums\n}\n```\n\n","slug":"学习笔记/其他/奇偶数分开","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oap000ywwvng8gf68h1","content":"<p>将数组中的数值按奇数偶数分开,奇数在后,偶数在前</p>\n<p>考点:双指针</p>\n<p>有两种写法</p>\n<ol>\n<li>一种是类似快排的左右指针交叉移动,左指针找到奇数,右指针找到偶数,俩指针交换位置,继续查找</li>\n</ol>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">sort_array_by_parity</span>(<span class=\"keyword\">mut</span> nums: <span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt;) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">is_fun</span>=|num:&amp;<span class=\"type\">i32</span>|&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num%<span class=\"number\">2</span>==<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">left</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">right</span>=nums.<span class=\"title function_ invoke__\">len</span>()-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> left&lt;right &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"title function_ invoke__\">is_fun</span>(&amp;nums[left])&amp;&amp;left&lt;right &#123;</span><br><span class=\"line\">            left+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> !<span class=\"title function_ invoke__\">is_fun</span>(&amp;nums[right])&amp;&amp;left&lt;right &#123;</span><br><span class=\"line\">            right-=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> left&lt;right &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> <span class=\"variable\">temp</span>=nums[right];</span><br><span class=\"line\">            nums[right]=nums[left];</span><br><span class=\"line\">            nums[left]=temp;</span><br><span class=\"line\">            left+=<span class=\"number\">1</span>;</span><br><span class=\"line\">            right-=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    nums</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>第二种是双指针从左往右边寻找,遇见奇数往尾指针交换,继续判断这个位置,尾指针往前移动</li>\n</ol>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">sort_array_by_parity</span>(<span class=\"keyword\">mut</span> nums: <span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt;) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">left</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">right</span>=nums.<span class=\"title function_ invoke__\">len</span>()-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">temp</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> left&lt;right &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 为奇数</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> nums[left]%<span class=\"number\">2</span>==<span class=\"number\">1</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 往后换</span></span><br><span class=\"line\">            temp=nums[right];</span><br><span class=\"line\">            nums[right]=nums[left];</span><br><span class=\"line\">            nums[left]=temp;</span><br><span class=\"line\">            right-=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            left+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    nums</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>将数组中的数值按奇数偶数分开,奇数在后,偶数在前</p>\n<p>考点:双指针</p>\n<p>有两种写法</p>\n<ol>\n<li>一种是类似快排的左右指针交叉移动,左指针找到奇数,右指针找到偶数,俩指针交换位置,继续查找</li>\n</ol>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">sort_array_by_parity</span>(<span class=\"keyword\">mut</span> nums: <span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt;) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">is_fun</span>=|num:&amp;<span class=\"type\">i32</span>|&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num%<span class=\"number\">2</span>==<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">left</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">right</span>=nums.<span class=\"title function_ invoke__\">len</span>()-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> left&lt;right &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"title function_ invoke__\">is_fun</span>(&amp;nums[left])&amp;&amp;left&lt;right &#123;</span><br><span class=\"line\">            left+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> !<span class=\"title function_ invoke__\">is_fun</span>(&amp;nums[right])&amp;&amp;left&lt;right &#123;</span><br><span class=\"line\">            right-=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> left&lt;right &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> <span class=\"variable\">temp</span>=nums[right];</span><br><span class=\"line\">            nums[right]=nums[left];</span><br><span class=\"line\">            nums[left]=temp;</span><br><span class=\"line\">            left+=<span class=\"number\">1</span>;</span><br><span class=\"line\">            right-=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    nums</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>第二种是双指针从左往右边寻找,遇见奇数往尾指针交换,继续判断这个位置,尾指针往前移动</li>\n</ol>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">sort_array_by_parity</span>(<span class=\"keyword\">mut</span> nums: <span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt;) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Vec</span>&lt;<span class=\"type\">i32</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">left</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">right</span>=nums.<span class=\"title function_ invoke__\">len</span>()-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">temp</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> left&lt;right &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 为奇数</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> nums[left]%<span class=\"number\">2</span>==<span class=\"number\">1</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 往后换</span></span><br><span class=\"line\">            temp=nums[right];</span><br><span class=\"line\">            nums[right]=nums[left];</span><br><span class=\"line\">            nums[left]=temp;</span><br><span class=\"line\">            right-=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            left+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    nums</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"无线管理员","date":"2023-05-05T13:30:42.000Z","_content":"811登录无线路由器管理界面密码：102214@tyut\n\n登录无线路由器密码：tyutli19740202\n\n```http\nhttp://172.16.0.1/drcom/login?callback=dr1003&DDDDD=2013093008%40internet&upass=8910jqkA&0MKKey=123456&R1=0&R2=&R3=0&R6=0&para=00&v6ip=&terminal_type=1&lang=zh-cn&jsVersion=4.1.3&v=7843&lang=zh\n```\n\n```\nhttp://172.16.0.1/drcom/login?callback=dr1003&DDDDD=2013093032@internet&upass=621976A*a&0MKKey=123456&R1=0&R2=&R3=0&R6=0&para=00&v6ip=&terminal_type=1&lang=zh-cn&jsVersion=4.1.3&v=3110&lang=zh\n```\n\n立即生效注册表\n\n```\nRunDll32.exe USER32.DLL,UpdatePerUserSystemParameters\nreg add \"hkcu\\control panel\\desktop\" /v wallpaper /d \"C:\\Users\\wrw\\Desktop\\dome\\picture\\2022-04-14-56-43-1.png\"\n\n```\n\n```\n#![allow(dead_code)]\nq警告\n```\n\n","source":"_posts/学习笔记/其他/无线管理员.md","raw":"---\ntitle: 无线管理员\ndate: 2023-05-05 21:30:42\ntags:  \n---\n811登录无线路由器管理界面密码：102214@tyut\n\n登录无线路由器密码：tyutli19740202\n\n```http\nhttp://172.16.0.1/drcom/login?callback=dr1003&DDDDD=2013093008%40internet&upass=8910jqkA&0MKKey=123456&R1=0&R2=&R3=0&R6=0&para=00&v6ip=&terminal_type=1&lang=zh-cn&jsVersion=4.1.3&v=7843&lang=zh\n```\n\n```\nhttp://172.16.0.1/drcom/login?callback=dr1003&DDDDD=2013093032@internet&upass=621976A*a&0MKKey=123456&R1=0&R2=&R3=0&R6=0&para=00&v6ip=&terminal_type=1&lang=zh-cn&jsVersion=4.1.3&v=3110&lang=zh\n```\n\n立即生效注册表\n\n```\nRunDll32.exe USER32.DLL,UpdatePerUserSystemParameters\nreg add \"hkcu\\control panel\\desktop\" /v wallpaper /d \"C:\\Users\\wrw\\Desktop\\dome\\picture\\2022-04-14-56-43-1.png\"\n\n```\n\n```\n#![allow(dead_code)]\nq警告\n```\n\n","slug":"学习笔记/其他/无线管理员","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oap000zwwvn7ez37mq8","content":"<p>811登录无线路由器管理界面密码：102214@tyut</p>\n<p>登录无线路由器密码：tyutli19740202</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://172.16.0.1/drcom/login?callback=dr1003&amp;DDDDD=2013093008%40internet&amp;upass=8910jqkA&amp;0MKKey=123456&amp;R1=0&amp;R2=&amp;R3=0&amp;R6=0&amp;para=00&amp;v6ip=&amp;terminal_type=1&amp;lang=zh-cn&amp;jsVersion=4.1.3&amp;v=7843&amp;lang=zh</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://172.16.0.1/drcom/login?callback=dr1003&amp;DDDDD=2013093032@internet&amp;upass=621976A*a&amp;0MKKey=123456&amp;R1=0&amp;R2=&amp;R3=0&amp;R6=0&amp;para=00&amp;v6ip=&amp;terminal_type=1&amp;lang=zh-cn&amp;jsVersion=4.1.3&amp;v=3110&amp;lang=zh</span><br></pre></td></tr></table></figure>\n\n<p>立即生效注册表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RunDll32.exe USER32.DLL,UpdatePerUserSystemParameters</span><br><span class=\"line\">reg add &quot;hkcu\\control panel\\desktop&quot; /v wallpaper /d &quot;C:\\Users\\wrw\\Desktop\\dome\\picture\\2022-04-14-56-43-1.png&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#![allow(dead_code)]</span><br><span class=\"line\">q警告</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>811登录无线路由器管理界面密码：102214@tyut</p>\n<p>登录无线路由器密码：tyutli19740202</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://172.16.0.1/drcom/login?callback=dr1003&amp;DDDDD=2013093008%40internet&amp;upass=8910jqkA&amp;0MKKey=123456&amp;R1=0&amp;R2=&amp;R3=0&amp;R6=0&amp;para=00&amp;v6ip=&amp;terminal_type=1&amp;lang=zh-cn&amp;jsVersion=4.1.3&amp;v=7843&amp;lang=zh</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://172.16.0.1/drcom/login?callback=dr1003&amp;DDDDD=2013093032@internet&amp;upass=621976A*a&amp;0MKKey=123456&amp;R1=0&amp;R2=&amp;R3=0&amp;R6=0&amp;para=00&amp;v6ip=&amp;terminal_type=1&amp;lang=zh-cn&amp;jsVersion=4.1.3&amp;v=3110&amp;lang=zh</span><br></pre></td></tr></table></figure>\n\n<p>立即生效注册表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RunDll32.exe USER32.DLL,UpdatePerUserSystemParameters</span><br><span class=\"line\">reg add &quot;hkcu\\control panel\\desktop&quot; /v wallpaper /d &quot;C:\\Users\\wrw\\Desktop\\dome\\picture\\2022-04-14-56-43-1.png&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#![allow(dead_code)]</span><br><span class=\"line\">q警告</span><br></pre></td></tr></table></figure>\n\n"},{"title":"日期函数格式化字符","date":"2023-05-05T13:30:42.000Z","_content":"(:)\n\n时间分隔符。在某些区域设置中，可以使用其他字符表示时间分隔符。时间分隔符在格式化时间值时分隔小时、分钟和秒。格式化输出中用作时间分隔符的实际字符由您的应用程序的当前区域性值确定。\n\n(/)\n\n日期分隔符。在某些区域设置中，可以使用其他字符表示日期分隔符。日期分隔符在格式化日期值时分隔日、月和年。格式化输出中用作日期分隔符的实际字符由您的应用程序的当前区域性确定。\n\n(%)\n\n用于表明不论尾随什么字母，随后字符都应该以单字母格式读取。也用于表明单字母格式应以用户定义格式读取。有关更多详细信息，请参见下面的内容。\n\nd\n\n将日显示为不带前导零的数字（如 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %d。\n\ndd\n\n将日显示为带前导零的数字（如 01）。\n\nEEE\n\n将日显示为缩写形式（例如 Sun）。\n\nEEEE\n\n将日显示为全名（例如 Sunday）。\n\nM\n\n将月份显示为不带前导零的数字（如一月表示为 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %M。\n\nMM\n\n将月份显示为带前导零的数字（例如 01/12/01）。\n\nMMM\n\n将月份显示为缩写形式（例如 Jan）。\n\nMMMM\n\n将月份显示为完整月份名（例如 January）。\n\ngg\n\n显示时代/纪元字符串（例如 A.D.）\n\nh\n\n使用 12 小时制将小时显示为不带前导零的数字（例如 1:15:15 PM）。如果这是用户定义的数字格式中的唯一字符，请使用 %h。\n\nhh\n\n使用 12 小时制将小时显示为带前导零的数字（例如 01:15:15 PM）。\n\nH\n\n使用 24 小时制将小时显示为不带前导零的数字（例如 1:15:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %H。\n\nHH\n\n使用 24 小时制将小时显示为带前导零的数字（例如 01:15:15）。\n\nm\n\n将分钟显示为不带前导零的数字（例如 12:1:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %m。\n\nmm\n\n将分钟显示为带前导零的数字（例如 12:01:15）。\n\ns\n\n将秒显示为不带前导零的数字（例如 12:15:5）。如果这是用户定义的数字格式中的唯一字符，请使用 %s。\n\nss\n\n将秒显示为带前导零的数字（例如 12:15:05）。\n\nf\n\n显示秒的小数部分。例如，ff 将精确显示到百分之一秒，而 ffff 将精确显示到万分之一秒。用户定义格式中最多可使用七个 f 符号。如果这是用户定义的数字格式中的唯一字符，请使用 %f。\n\nt\n\n使用 12 小时制，并对中午之前的任一小时显示大写的 A，对中午到 11:59 P.M 之间的任一小时显示大写的 P。如果这是用户定义的数字格式中的唯一字符，请使用 %t。\n\ntt\n\n对于使用 12 小时制的区域设置，对中午之前任一小时显示大写的 AM，对中午到 11:59 P.M 之间的任一小时显示大写的 PM。\n\n对于使用 24 小时制的区域设置，不显示任何字符。\n\ny\n\n将年份 (0-9) 显示为不带前导零的数字。如果这是用户定义的数字格式中的唯一字符，请使用 %y。\n\nyy\n\n以带前导零的两位数字格式显示年份（如果适用）。\n\nyyy\n\n以四位数字格式显示年份。\n\nyyyy\n\n以四位数字格式显示年份。\n\nz\n\n显示不带前导零的时区偏移量（如 -8）。如果这是用户定义的数字格式中的唯一字符，请使用 %z。\n\nzz\n\n显示带前导零的时区偏移量（例如 -08）\n\nzzz\n\n显示完整的时区偏移量（例如 -08:00）","source":"_posts/学习笔记/其他/日期函数格式化字符.md","raw":"---\ntitle: 日期函数格式化字符\ndate: 2023-05-05 21:30:42\ntags:  \n---\n(:)\n\n时间分隔符。在某些区域设置中，可以使用其他字符表示时间分隔符。时间分隔符在格式化时间值时分隔小时、分钟和秒。格式化输出中用作时间分隔符的实际字符由您的应用程序的当前区域性值确定。\n\n(/)\n\n日期分隔符。在某些区域设置中，可以使用其他字符表示日期分隔符。日期分隔符在格式化日期值时分隔日、月和年。格式化输出中用作日期分隔符的实际字符由您的应用程序的当前区域性确定。\n\n(%)\n\n用于表明不论尾随什么字母，随后字符都应该以单字母格式读取。也用于表明单字母格式应以用户定义格式读取。有关更多详细信息，请参见下面的内容。\n\nd\n\n将日显示为不带前导零的数字（如 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %d。\n\ndd\n\n将日显示为带前导零的数字（如 01）。\n\nEEE\n\n将日显示为缩写形式（例如 Sun）。\n\nEEEE\n\n将日显示为全名（例如 Sunday）。\n\nM\n\n将月份显示为不带前导零的数字（如一月表示为 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %M。\n\nMM\n\n将月份显示为带前导零的数字（例如 01/12/01）。\n\nMMM\n\n将月份显示为缩写形式（例如 Jan）。\n\nMMMM\n\n将月份显示为完整月份名（例如 January）。\n\ngg\n\n显示时代/纪元字符串（例如 A.D.）\n\nh\n\n使用 12 小时制将小时显示为不带前导零的数字（例如 1:15:15 PM）。如果这是用户定义的数字格式中的唯一字符，请使用 %h。\n\nhh\n\n使用 12 小时制将小时显示为带前导零的数字（例如 01:15:15 PM）。\n\nH\n\n使用 24 小时制将小时显示为不带前导零的数字（例如 1:15:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %H。\n\nHH\n\n使用 24 小时制将小时显示为带前导零的数字（例如 01:15:15）。\n\nm\n\n将分钟显示为不带前导零的数字（例如 12:1:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %m。\n\nmm\n\n将分钟显示为带前导零的数字（例如 12:01:15）。\n\ns\n\n将秒显示为不带前导零的数字（例如 12:15:5）。如果这是用户定义的数字格式中的唯一字符，请使用 %s。\n\nss\n\n将秒显示为带前导零的数字（例如 12:15:05）。\n\nf\n\n显示秒的小数部分。例如，ff 将精确显示到百分之一秒，而 ffff 将精确显示到万分之一秒。用户定义格式中最多可使用七个 f 符号。如果这是用户定义的数字格式中的唯一字符，请使用 %f。\n\nt\n\n使用 12 小时制，并对中午之前的任一小时显示大写的 A，对中午到 11:59 P.M 之间的任一小时显示大写的 P。如果这是用户定义的数字格式中的唯一字符，请使用 %t。\n\ntt\n\n对于使用 12 小时制的区域设置，对中午之前任一小时显示大写的 AM，对中午到 11:59 P.M 之间的任一小时显示大写的 PM。\n\n对于使用 24 小时制的区域设置，不显示任何字符。\n\ny\n\n将年份 (0-9) 显示为不带前导零的数字。如果这是用户定义的数字格式中的唯一字符，请使用 %y。\n\nyy\n\n以带前导零的两位数字格式显示年份（如果适用）。\n\nyyy\n\n以四位数字格式显示年份。\n\nyyyy\n\n以四位数字格式显示年份。\n\nz\n\n显示不带前导零的时区偏移量（如 -8）。如果这是用户定义的数字格式中的唯一字符，请使用 %z。\n\nzz\n\n显示带前导零的时区偏移量（例如 -08）\n\nzzz\n\n显示完整的时区偏移量（例如 -08:00）","slug":"学习笔记/其他/日期函数格式化字符","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oaq0010wwvn74d5d5nt","content":"<p>(:)</p>\n<p>时间分隔符。在某些区域设置中，可以使用其他字符表示时间分隔符。时间分隔符在格式化时间值时分隔小时、分钟和秒。格式化输出中用作时间分隔符的实际字符由您的应用程序的当前区域性值确定。</p>\n<p>(&#x2F;)</p>\n<p>日期分隔符。在某些区域设置中，可以使用其他字符表示日期分隔符。日期分隔符在格式化日期值时分隔日、月和年。格式化输出中用作日期分隔符的实际字符由您的应用程序的当前区域性确定。</p>\n<p>(%)</p>\n<p>用于表明不论尾随什么字母，随后字符都应该以单字母格式读取。也用于表明单字母格式应以用户定义格式读取。有关更多详细信息，请参见下面的内容。</p>\n<p>d</p>\n<p>将日显示为不带前导零的数字（如 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %d。</p>\n<p>dd</p>\n<p>将日显示为带前导零的数字（如 01）。</p>\n<p>EEE</p>\n<p>将日显示为缩写形式（例如 Sun）。</p>\n<p>EEEE</p>\n<p>将日显示为全名（例如 Sunday）。</p>\n<p>M</p>\n<p>将月份显示为不带前导零的数字（如一月表示为 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %M。</p>\n<p>MM</p>\n<p>将月份显示为带前导零的数字（例如 01&#x2F;12&#x2F;01）。</p>\n<p>MMM</p>\n<p>将月份显示为缩写形式（例如 Jan）。</p>\n<p>MMMM</p>\n<p>将月份显示为完整月份名（例如 January）。</p>\n<p>gg</p>\n<p>显示时代&#x2F;纪元字符串（例如 A.D.）</p>\n<p>h</p>\n<p>使用 12 小时制将小时显示为不带前导零的数字（例如 1:15:15 PM）。如果这是用户定义的数字格式中的唯一字符，请使用 %h。</p>\n<p>hh</p>\n<p>使用 12 小时制将小时显示为带前导零的数字（例如 01:15:15 PM）。</p>\n<p>H</p>\n<p>使用 24 小时制将小时显示为不带前导零的数字（例如 1:15:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %H。</p>\n<p>HH</p>\n<p>使用 24 小时制将小时显示为带前导零的数字（例如 01:15:15）。</p>\n<p>m</p>\n<p>将分钟显示为不带前导零的数字（例如 12:1:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %m。</p>\n<p>mm</p>\n<p>将分钟显示为带前导零的数字（例如 12:01:15）。</p>\n<p>s</p>\n<p>将秒显示为不带前导零的数字（例如 12:15:5）。如果这是用户定义的数字格式中的唯一字符，请使用 %s。</p>\n<p>ss</p>\n<p>将秒显示为带前导零的数字（例如 12:15:05）。</p>\n<p>f</p>\n<p>显示秒的小数部分。例如，ff 将精确显示到百分之一秒，而 ffff 将精确显示到万分之一秒。用户定义格式中最多可使用七个 f 符号。如果这是用户定义的数字格式中的唯一字符，请使用 %f。</p>\n<p>t</p>\n<p>使用 12 小时制，并对中午之前的任一小时显示大写的 A，对中午到 11:59 P.M 之间的任一小时显示大写的 P。如果这是用户定义的数字格式中的唯一字符，请使用 %t。</p>\n<p>tt</p>\n<p>对于使用 12 小时制的区域设置，对中午之前任一小时显示大写的 AM，对中午到 11:59 P.M 之间的任一小时显示大写的 PM。</p>\n<p>对于使用 24 小时制的区域设置，不显示任何字符。</p>\n<p>y</p>\n<p>将年份 (0-9) 显示为不带前导零的数字。如果这是用户定义的数字格式中的唯一字符，请使用 %y。</p>\n<p>yy</p>\n<p>以带前导零的两位数字格式显示年份（如果适用）。</p>\n<p>yyy</p>\n<p>以四位数字格式显示年份。</p>\n<p>yyyy</p>\n<p>以四位数字格式显示年份。</p>\n<p>z</p>\n<p>显示不带前导零的时区偏移量（如 -8）。如果这是用户定义的数字格式中的唯一字符，请使用 %z。</p>\n<p>zz</p>\n<p>显示带前导零的时区偏移量（例如 -08）</p>\n<p>zzz</p>\n<p>显示完整的时区偏移量（例如 -08:00）</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>(:)</p>\n<p>时间分隔符。在某些区域设置中，可以使用其他字符表示时间分隔符。时间分隔符在格式化时间值时分隔小时、分钟和秒。格式化输出中用作时间分隔符的实际字符由您的应用程序的当前区域性值确定。</p>\n<p>(&#x2F;)</p>\n<p>日期分隔符。在某些区域设置中，可以使用其他字符表示日期分隔符。日期分隔符在格式化日期值时分隔日、月和年。格式化输出中用作日期分隔符的实际字符由您的应用程序的当前区域性确定。</p>\n<p>(%)</p>\n<p>用于表明不论尾随什么字母，随后字符都应该以单字母格式读取。也用于表明单字母格式应以用户定义格式读取。有关更多详细信息，请参见下面的内容。</p>\n<p>d</p>\n<p>将日显示为不带前导零的数字（如 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %d。</p>\n<p>dd</p>\n<p>将日显示为带前导零的数字（如 01）。</p>\n<p>EEE</p>\n<p>将日显示为缩写形式（例如 Sun）。</p>\n<p>EEEE</p>\n<p>将日显示为全名（例如 Sunday）。</p>\n<p>M</p>\n<p>将月份显示为不带前导零的数字（如一月表示为 1）。如果这是用户定义的数字格式中的唯一字符，请使用 %M。</p>\n<p>MM</p>\n<p>将月份显示为带前导零的数字（例如 01&#x2F;12&#x2F;01）。</p>\n<p>MMM</p>\n<p>将月份显示为缩写形式（例如 Jan）。</p>\n<p>MMMM</p>\n<p>将月份显示为完整月份名（例如 January）。</p>\n<p>gg</p>\n<p>显示时代&#x2F;纪元字符串（例如 A.D.）</p>\n<p>h</p>\n<p>使用 12 小时制将小时显示为不带前导零的数字（例如 1:15:15 PM）。如果这是用户定义的数字格式中的唯一字符，请使用 %h。</p>\n<p>hh</p>\n<p>使用 12 小时制将小时显示为带前导零的数字（例如 01:15:15 PM）。</p>\n<p>H</p>\n<p>使用 24 小时制将小时显示为不带前导零的数字（例如 1:15:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %H。</p>\n<p>HH</p>\n<p>使用 24 小时制将小时显示为带前导零的数字（例如 01:15:15）。</p>\n<p>m</p>\n<p>将分钟显示为不带前导零的数字（例如 12:1:15）。如果这是用户定义的数字格式中的唯一字符，请使用 %m。</p>\n<p>mm</p>\n<p>将分钟显示为带前导零的数字（例如 12:01:15）。</p>\n<p>s</p>\n<p>将秒显示为不带前导零的数字（例如 12:15:5）。如果这是用户定义的数字格式中的唯一字符，请使用 %s。</p>\n<p>ss</p>\n<p>将秒显示为带前导零的数字（例如 12:15:05）。</p>\n<p>f</p>\n<p>显示秒的小数部分。例如，ff 将精确显示到百分之一秒，而 ffff 将精确显示到万分之一秒。用户定义格式中最多可使用七个 f 符号。如果这是用户定义的数字格式中的唯一字符，请使用 %f。</p>\n<p>t</p>\n<p>使用 12 小时制，并对中午之前的任一小时显示大写的 A，对中午到 11:59 P.M 之间的任一小时显示大写的 P。如果这是用户定义的数字格式中的唯一字符，请使用 %t。</p>\n<p>tt</p>\n<p>对于使用 12 小时制的区域设置，对中午之前任一小时显示大写的 AM，对中午到 11:59 P.M 之间的任一小时显示大写的 PM。</p>\n<p>对于使用 24 小时制的区域设置，不显示任何字符。</p>\n<p>y</p>\n<p>将年份 (0-9) 显示为不带前导零的数字。如果这是用户定义的数字格式中的唯一字符，请使用 %y。</p>\n<p>yy</p>\n<p>以带前导零的两位数字格式显示年份（如果适用）。</p>\n<p>yyy</p>\n<p>以四位数字格式显示年份。</p>\n<p>yyyy</p>\n<p>以四位数字格式显示年份。</p>\n<p>z</p>\n<p>显示不带前导零的时区偏移量（如 -8）。如果这是用户定义的数字格式中的唯一字符，请使用 %z。</p>\n<p>zz</p>\n<p>显示带前导零的时区偏移量（例如 -08）</p>\n<p>zzz</p>\n<p>显示完整的时区偏移量（例如 -08:00）</p>\n"},{"title":"模拟登录","date":"2023-05-05T13:30:42.000Z","_content":"# python的模拟登录\n\n1. 教务系统的post数据有\n\n   ``` js\n   __LASTFOCUS: \n   __VIEWSTATE:X1aGp/trUEb6laqW3/FuFWh8BVJzsr1AhCI4OJ7mm2XEhOT/eeamipogoUG2SzzY5B/na4SmZfNPlLe/2u71EscmFhA=\n   __VIEWSTATEGENERATOR: 9BD98A7D\n   __EVENTTARGET: \n   __EVENTARGUMENT: \n   \n   TextBox1: 2013093040\n   TextBox2:js加密后的密码\n   txtSecretCode: 验证码\n   RadioButtonList1: 学生\n   Button1: 登录\n   txtKeyExponent: 第一次请求中返回的值\n   txtKeyModulus: 请求中返回的值\n   ```\n\n   ```js\n   var key = new RSAKeyPair(txtKeyExponent, \"\", txtKeyModulus);\n   最终密码 = encryptedString(key,password);\n   ```\n\n   ```js\n   function RSAKeyPair(encryptionExponent, decryptionExponent, modulus)\n   {\n   \tthis.e = biFromHex(encryptionExponent);\n   \tthis.d = biFromHex(decryptionExponent);\n   \tthis.m = biFromHex(modulus);\n   \t\n   \t// We can do two bytes per digit, so\n   \t// chunkSize = 2 * (number of digits in modulus - 1).\n   \t// Since biHighIndex returns the high index, not the number of digits, 1 has\n   \t// already been subtracted.\n   \t//this.chunkSize = 2 * biHighIndex(this.m);\n   \t\n   \t////////////////////////////////// TYF\n       \tthis.digitSize = 2 * biHighIndex(this.m) + 2;\n   \tthis.chunkSize = this.digitSize - 11; // maximum, anything lower is fine\n   \t////////////////////////////////// TYF\n   \n   \tthis.radix = 16;\n   \tthis.barrett = new BarrettMu(this.m);\n   }\n   \n   \n   function decryptedString(key, s)\n   {\n   var blocks = s.split(\" \");\n   var result = \"\";\n   var i, j, block;\n   for (i = 0; i < blocks.length; ++i) {\n   var bi;\n   if (key.radix == 16) {\n   bi = biFromHex(blocks[i]);\n   }\n   else {\n   bi = biFromString(blocks[i], key.radix);\n   }\n   block = key.barrett.powMod(bi, key.d);\n   for (j = 0; j <= biHighIndex(block); ++j) {\n   result += String.fromCharCode(block.digits[j] & 255,\n   block.digits[j] >> 8);\n   }\n   }\n   // Remove trailing null, if any.\n   if (result.charCodeAt(result.length - 1) == 0) {\n   result = result.substring(0, result.length - 1);\n   }\n   return result;\n   }\n   ```\n\n   ","source":"_posts/学习笔记/其他/模拟登录.md","raw":"---\ntitle: 模拟登录\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# python的模拟登录\n\n1. 教务系统的post数据有\n\n   ``` js\n   __LASTFOCUS: \n   __VIEWSTATE:X1aGp/trUEb6laqW3/FuFWh8BVJzsr1AhCI4OJ7mm2XEhOT/eeamipogoUG2SzzY5B/na4SmZfNPlLe/2u71EscmFhA=\n   __VIEWSTATEGENERATOR: 9BD98A7D\n   __EVENTTARGET: \n   __EVENTARGUMENT: \n   \n   TextBox1: 2013093040\n   TextBox2:js加密后的密码\n   txtSecretCode: 验证码\n   RadioButtonList1: 学生\n   Button1: 登录\n   txtKeyExponent: 第一次请求中返回的值\n   txtKeyModulus: 请求中返回的值\n   ```\n\n   ```js\n   var key = new RSAKeyPair(txtKeyExponent, \"\", txtKeyModulus);\n   最终密码 = encryptedString(key,password);\n   ```\n\n   ```js\n   function RSAKeyPair(encryptionExponent, decryptionExponent, modulus)\n   {\n   \tthis.e = biFromHex(encryptionExponent);\n   \tthis.d = biFromHex(decryptionExponent);\n   \tthis.m = biFromHex(modulus);\n   \t\n   \t// We can do two bytes per digit, so\n   \t// chunkSize = 2 * (number of digits in modulus - 1).\n   \t// Since biHighIndex returns the high index, not the number of digits, 1 has\n   \t// already been subtracted.\n   \t//this.chunkSize = 2 * biHighIndex(this.m);\n   \t\n   \t////////////////////////////////// TYF\n       \tthis.digitSize = 2 * biHighIndex(this.m) + 2;\n   \tthis.chunkSize = this.digitSize - 11; // maximum, anything lower is fine\n   \t////////////////////////////////// TYF\n   \n   \tthis.radix = 16;\n   \tthis.barrett = new BarrettMu(this.m);\n   }\n   \n   \n   function decryptedString(key, s)\n   {\n   var blocks = s.split(\" \");\n   var result = \"\";\n   var i, j, block;\n   for (i = 0; i < blocks.length; ++i) {\n   var bi;\n   if (key.radix == 16) {\n   bi = biFromHex(blocks[i]);\n   }\n   else {\n   bi = biFromString(blocks[i], key.radix);\n   }\n   block = key.barrett.powMod(bi, key.d);\n   for (j = 0; j <= biHighIndex(block); ++j) {\n   result += String.fromCharCode(block.digits[j] & 255,\n   block.digits[j] >> 8);\n   }\n   }\n   // Remove trailing null, if any.\n   if (result.charCodeAt(result.length - 1) == 0) {\n   result = result.substring(0, result.length - 1);\n   }\n   return result;\n   }\n   ```\n\n   ","slug":"学习笔记/其他/模拟登录","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oaq0011wwvn4gm36ph3","content":"<h1 id=\"python的模拟登录\"><a href=\"#python的模拟登录\" class=\"headerlink\" title=\"python的模拟登录\"></a>python的模拟登录</h1><ol>\n<li><p>教务系统的post数据有</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">__LASTFOCUS</span>: </span><br><span class=\"line\"><span class=\"attr\">__VIEWSTATE</span>:X1aGp/trUEb6laqW3/<span class=\"title class_\">FuFWh8BVJzsr1AhCI4OJ7</span>mm2XEhOT/eeamipogoUG2SzzY5B/na4SmZfNPlLe/2u71EscmFhA=</span><br><span class=\"line\"><span class=\"attr\">__VIEWSTATEGENERATOR</span>: 9BD98A7D</span><br><span class=\"line\"><span class=\"attr\">__EVENTTARGET</span>: </span><br><span class=\"line\"><span class=\"attr\">__EVENTARGUMENT</span>: </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">TextBox1</span>: <span class=\"number\">2013093040</span></span><br><span class=\"line\"><span class=\"title class_\">TextBox2</span>:js加密后的密码</span><br><span class=\"line\"><span class=\"attr\">txtSecretCode</span>: 验证码</span><br><span class=\"line\"><span class=\"title class_\">RadioButtonList1</span>: 学生</span><br><span class=\"line\"><span class=\"title class_\">Button1</span>: 登录</span><br><span class=\"line\"><span class=\"attr\">txtKeyExponent</span>: 第一次请求中返回的值</span><br><span class=\"line\"><span class=\"attr\">txtKeyModulus</span>: 请求中返回的值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> key = <span class=\"keyword\">new</span> <span class=\"title class_\">RSAKeyPair</span>(txtKeyExponent, <span class=\"string\">&quot;&quot;</span>, txtKeyModulus);</span><br><span class=\"line\">最终密码 = <span class=\"title function_\">encryptedString</span>(key,password);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">RSAKeyPair</span>(<span class=\"params\">encryptionExponent, decryptionExponent, modulus</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">e</span> = <span class=\"title function_\">biFromHex</span>(encryptionExponent);</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">d</span> = <span class=\"title function_\">biFromHex</span>(decryptionExponent);</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">m</span> = <span class=\"title function_\">biFromHex</span>(modulus);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// We can do two bytes per digit, so</span></span><br><span class=\"line\">\t<span class=\"comment\">// chunkSize = 2 * (number of digits in modulus - 1).</span></span><br><span class=\"line\">\t<span class=\"comment\">// Since biHighIndex returns the high index, not the number of digits, 1 has</span></span><br><span class=\"line\">\t<span class=\"comment\">// already been subtracted.</span></span><br><span class=\"line\">\t<span class=\"comment\">//this.chunkSize = 2 * biHighIndex(this.m);</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">////////////////////////////////// TYF</span></span><br><span class=\"line\">    \t<span class=\"variable language_\">this</span>.<span class=\"property\">digitSize</span> = <span class=\"number\">2</span> * <span class=\"title function_\">biHighIndex</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">m</span>) + <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">chunkSize</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">digitSize</span> - <span class=\"number\">11</span>; <span class=\"comment\">// maximum, anything lower is fine</span></span><br><span class=\"line\">\t<span class=\"comment\">////////////////////////////////// TYF</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">radix</span> = <span class=\"number\">16</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">barrett</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">BarrettMu</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">m</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">decryptedString</span>(<span class=\"params\">key, s</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> blocks = s.<span class=\"title function_\">split</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> i, j, block;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; blocks.<span class=\"property\">length</span>; ++i) &#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bi;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (key.<span class=\"property\">radix</span> == <span class=\"number\">16</span>) &#123;</span><br><span class=\"line\">bi = <span class=\"title function_\">biFromHex</span>(blocks[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">bi = <span class=\"title function_\">biFromString</span>(blocks[i], key.<span class=\"property\">radix</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">block = key.<span class=\"property\">barrett</span>.<span class=\"title function_\">powMod</span>(bi, key.<span class=\"property\">d</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt;= <span class=\"title function_\">biHighIndex</span>(block); ++j) &#123;</span><br><span class=\"line\">result += <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(block.<span class=\"property\">digits</span>[j] &amp; <span class=\"number\">255</span>,</span><br><span class=\"line\">block.<span class=\"property\">digits</span>[j] &gt;&gt; <span class=\"number\">8</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Remove trailing null, if any.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (result.<span class=\"title function_\">charCodeAt</span>(result.<span class=\"property\">length</span> - <span class=\"number\">1</span>) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">result = result.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, result.<span class=\"property\">length</span> - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"python的模拟登录\"><a href=\"#python的模拟登录\" class=\"headerlink\" title=\"python的模拟登录\"></a>python的模拟登录</h1><ol>\n<li><p>教务系统的post数据有</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">__LASTFOCUS</span>: </span><br><span class=\"line\"><span class=\"attr\">__VIEWSTATE</span>:X1aGp/trUEb6laqW3/<span class=\"title class_\">FuFWh8BVJzsr1AhCI4OJ7</span>mm2XEhOT/eeamipogoUG2SzzY5B/na4SmZfNPlLe/2u71EscmFhA=</span><br><span class=\"line\"><span class=\"attr\">__VIEWSTATEGENERATOR</span>: 9BD98A7D</span><br><span class=\"line\"><span class=\"attr\">__EVENTTARGET</span>: </span><br><span class=\"line\"><span class=\"attr\">__EVENTARGUMENT</span>: </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">TextBox1</span>: <span class=\"number\">2013093040</span></span><br><span class=\"line\"><span class=\"title class_\">TextBox2</span>:js加密后的密码</span><br><span class=\"line\"><span class=\"attr\">txtSecretCode</span>: 验证码</span><br><span class=\"line\"><span class=\"title class_\">RadioButtonList1</span>: 学生</span><br><span class=\"line\"><span class=\"title class_\">Button1</span>: 登录</span><br><span class=\"line\"><span class=\"attr\">txtKeyExponent</span>: 第一次请求中返回的值</span><br><span class=\"line\"><span class=\"attr\">txtKeyModulus</span>: 请求中返回的值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> key = <span class=\"keyword\">new</span> <span class=\"title class_\">RSAKeyPair</span>(txtKeyExponent, <span class=\"string\">&quot;&quot;</span>, txtKeyModulus);</span><br><span class=\"line\">最终密码 = <span class=\"title function_\">encryptedString</span>(key,password);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">RSAKeyPair</span>(<span class=\"params\">encryptionExponent, decryptionExponent, modulus</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">e</span> = <span class=\"title function_\">biFromHex</span>(encryptionExponent);</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">d</span> = <span class=\"title function_\">biFromHex</span>(decryptionExponent);</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">m</span> = <span class=\"title function_\">biFromHex</span>(modulus);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// We can do two bytes per digit, so</span></span><br><span class=\"line\">\t<span class=\"comment\">// chunkSize = 2 * (number of digits in modulus - 1).</span></span><br><span class=\"line\">\t<span class=\"comment\">// Since biHighIndex returns the high index, not the number of digits, 1 has</span></span><br><span class=\"line\">\t<span class=\"comment\">// already been subtracted.</span></span><br><span class=\"line\">\t<span class=\"comment\">//this.chunkSize = 2 * biHighIndex(this.m);</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">////////////////////////////////// TYF</span></span><br><span class=\"line\">    \t<span class=\"variable language_\">this</span>.<span class=\"property\">digitSize</span> = <span class=\"number\">2</span> * <span class=\"title function_\">biHighIndex</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">m</span>) + <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">chunkSize</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">digitSize</span> - <span class=\"number\">11</span>; <span class=\"comment\">// maximum, anything lower is fine</span></span><br><span class=\"line\">\t<span class=\"comment\">////////////////////////////////// TYF</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">radix</span> = <span class=\"number\">16</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">barrett</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">BarrettMu</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">m</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">decryptedString</span>(<span class=\"params\">key, s</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> blocks = s.<span class=\"title function_\">split</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> i, j, block;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; blocks.<span class=\"property\">length</span>; ++i) &#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bi;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (key.<span class=\"property\">radix</span> == <span class=\"number\">16</span>) &#123;</span><br><span class=\"line\">bi = <span class=\"title function_\">biFromHex</span>(blocks[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">bi = <span class=\"title function_\">biFromString</span>(blocks[i], key.<span class=\"property\">radix</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">block = key.<span class=\"property\">barrett</span>.<span class=\"title function_\">powMod</span>(bi, key.<span class=\"property\">d</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt;= <span class=\"title function_\">biHighIndex</span>(block); ++j) &#123;</span><br><span class=\"line\">result += <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(block.<span class=\"property\">digits</span>[j] &amp; <span class=\"number\">255</span>,</span><br><span class=\"line\">block.<span class=\"property\">digits</span>[j] &gt;&gt; <span class=\"number\">8</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Remove trailing null, if any.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (result.<span class=\"title function_\">charCodeAt</span>(result.<span class=\"property\">length</span> - <span class=\"number\">1</span>) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">result = result.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, result.<span class=\"property\">length</span> - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"注册表修改","date":"2023-05-05T13:30:42.000Z","_content":"## 使用代码修改注册表\n\n```toml\nwinapi = { version = \"0.3.9\", features = [\"winnls\", \"sysinfoapi\", \"winreg\", \"winnt\", \"minwindef\", \"winerror\", \"winuser\", \"libloaderapi\"] }\n\n```\n\n\n\n```rust\n//注册表的键的位置\nconst SUB_KEY: &str = \"S-1-5-21-3107748782-1505907129-4070385151-1001\\\\Control Panel\\\\Desktop\";\n//要修改的键\nconst ITEM_KEY: &str = \"WallPaper\";\n//打开注册表\nlet result = reg_open(HKEY_USERS, SUB_KEY);\nif let Ok(s) = result {\n\tunsafe {   \n        //修改后的内容\n\t\tlet val = str_to_lpcwstr(r\"C:\\Users\\wrw\\Desktop\\et\\picture\\wallhaven-3kekj9.jpg\");\n\t\t RegSetValueExW(\n    \t\t s,//打开后的注册表\n\t\t     str_to_lpcwstr(ITEM_KEY).as_ptr(),//修改的key的位置\n\t\t     0,\n    \t\t REG_SZ,//key的类型\n\t\t     val.as_ptr() as *const u8,//修改后的值\n    \t\t (val.len()*2) as u32,//新值的长度\n );\nfn reg_open(main_hkey: HKEY, sub_key: &str) -> Result<HKEY, String> {\n    unsafe {\n        let mut hkey: HKEY = null_mut();\n        let status = RegOpenKeyW(main_hkey, str_to_lpcwstr(sub_key).as_ptr(), &mut hkey);\n        if status == SEC_E_OK {\n            return Result::Ok(hkey);\n        }\n        return Result::Err(format!(\"status == {}\", status));\n    }\n}\n\nunsafe fn str_to_lpcwstr(str: &str) -> Vec<u16> {\n    let result: Vec<u16> = OsStr::new(str).encode_wide().chain(once(0)).collect();\n    return result;\n}\n```\n\n","source":"_posts/学习笔记/其他/注册表修改.md","raw":"---\ntitle: 注册表修改\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 使用代码修改注册表\n\n```toml\nwinapi = { version = \"0.3.9\", features = [\"winnls\", \"sysinfoapi\", \"winreg\", \"winnt\", \"minwindef\", \"winerror\", \"winuser\", \"libloaderapi\"] }\n\n```\n\n\n\n```rust\n//注册表的键的位置\nconst SUB_KEY: &str = \"S-1-5-21-3107748782-1505907129-4070385151-1001\\\\Control Panel\\\\Desktop\";\n//要修改的键\nconst ITEM_KEY: &str = \"WallPaper\";\n//打开注册表\nlet result = reg_open(HKEY_USERS, SUB_KEY);\nif let Ok(s) = result {\n\tunsafe {   \n        //修改后的内容\n\t\tlet val = str_to_lpcwstr(r\"C:\\Users\\wrw\\Desktop\\et\\picture\\wallhaven-3kekj9.jpg\");\n\t\t RegSetValueExW(\n    \t\t s,//打开后的注册表\n\t\t     str_to_lpcwstr(ITEM_KEY).as_ptr(),//修改的key的位置\n\t\t     0,\n    \t\t REG_SZ,//key的类型\n\t\t     val.as_ptr() as *const u8,//修改后的值\n    \t\t (val.len()*2) as u32,//新值的长度\n );\nfn reg_open(main_hkey: HKEY, sub_key: &str) -> Result<HKEY, String> {\n    unsafe {\n        let mut hkey: HKEY = null_mut();\n        let status = RegOpenKeyW(main_hkey, str_to_lpcwstr(sub_key).as_ptr(), &mut hkey);\n        if status == SEC_E_OK {\n            return Result::Ok(hkey);\n        }\n        return Result::Err(format!(\"status == {}\", status));\n    }\n}\n\nunsafe fn str_to_lpcwstr(str: &str) -> Vec<u16> {\n    let result: Vec<u16> = OsStr::new(str).encode_wide().chain(once(0)).collect();\n    return result;\n}\n```\n\n","slug":"学习笔记/其他/注册表修改","published":1,"updated":"2023-05-19T14:07:31.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oar0012wwvn9xs1awb5","content":"<h2 id=\"使用代码修改注册表\"><a href=\"#使用代码修改注册表\" class=\"headerlink\" title=\"使用代码修改注册表\"></a>使用代码修改注册表</h2><figure class=\"highlight toml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">winapi</span> = &#123; version = <span class=\"string\">&quot;0.3.9&quot;</span>, features = [<span class=\"string\">&quot;winnls&quot;</span>, <span class=\"string\">&quot;sysinfoapi&quot;</span>, <span class=\"string\">&quot;winreg&quot;</span>, <span class=\"string\">&quot;winnt&quot;</span>, <span class=\"string\">&quot;minwindef&quot;</span>, <span class=\"string\">&quot;winerror&quot;</span>, <span class=\"string\">&quot;winuser&quot;</span>, <span class=\"string\">&quot;libloaderapi&quot;</span>] &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//注册表的键的位置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> SUB_KEY: &amp;<span class=\"type\">str</span> = <span class=\"string\">&quot;S-1-5-21-3107748782-1505907129-4070385151-1001\\\\Control Panel\\\\Desktop&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//要修改的键</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> ITEM_KEY: &amp;<span class=\"type\">str</span> = <span class=\"string\">&quot;WallPaper&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//打开注册表</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">result</span> = <span class=\"title function_ invoke__\">reg_open</span>(HKEY_USERS, SUB_KEY);</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> <span class=\"variable\">Ok</span>(s) = result &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">unsafe</span> &#123;   </span><br><span class=\"line\">        <span class=\"comment\">//修改后的内容</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> <span class=\"variable\">val</span> = <span class=\"title function_ invoke__\">str_to_lpcwstr</span>(<span class=\"string\">r&quot;C:\\Users\\wrw\\Desktop\\et\\picture\\wallhaven-3kekj9.jpg&quot;</span>);</span><br><span class=\"line\">\t\t <span class=\"title function_ invoke__\">RegSetValueExW</span>(</span><br><span class=\"line\">    \t\t s,<span class=\"comment\">//打开后的注册表</span></span><br><span class=\"line\">\t\t     <span class=\"title function_ invoke__\">str_to_lpcwstr</span>(ITEM_KEY).<span class=\"title function_ invoke__\">as_ptr</span>(),<span class=\"comment\">//修改的key的位置</span></span><br><span class=\"line\">\t\t     <span class=\"number\">0</span>,</span><br><span class=\"line\">    \t\t REG_SZ,<span class=\"comment\">//key的类型</span></span><br><span class=\"line\">\t\t     val.<span class=\"title function_ invoke__\">as_ptr</span>() <span class=\"keyword\">as</span> *<span class=\"keyword\">const</span> <span class=\"type\">u8</span>,<span class=\"comment\">//修改后的值</span></span><br><span class=\"line\">    \t\t (val.<span class=\"title function_ invoke__\">len</span>()*<span class=\"number\">2</span>) <span class=\"keyword\">as</span> <span class=\"type\">u32</span>,<span class=\"comment\">//新值的长度</span></span><br><span class=\"line\"> );</span><br><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">reg_open</span>(main_hkey: HKEY, sub_key: &amp;<span class=\"type\">str</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;HKEY, <span class=\"type\">String</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">unsafe</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">hkey</span>: HKEY = <span class=\"title function_ invoke__\">null_mut</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">status</span> = <span class=\"title function_ invoke__\">RegOpenKeyW</span>(main_hkey, <span class=\"title function_ invoke__\">str_to_lpcwstr</span>(sub_key).<span class=\"title function_ invoke__\">as_ptr</span>(), &amp;<span class=\"keyword\">mut</span> hkey);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> status == SEC_E_OK &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"type\">Result</span>::<span class=\"title function_ invoke__\">Ok</span>(hkey);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">Result</span>::<span class=\"title function_ invoke__\">Err</span>(<span class=\"built_in\">format!</span>(<span class=\"string\">&quot;status == &#123;&#125;&quot;</span>, status));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">str_to_lpcwstr</span>(<span class=\"type\">str</span>: &amp;<span class=\"type\">str</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Vec</span>&lt;<span class=\"type\">u16</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">result</span>: <span class=\"type\">Vec</span>&lt;<span class=\"type\">u16</span>&gt; = OsStr::<span class=\"title function_ invoke__\">new</span>(<span class=\"type\">str</span>).<span class=\"title function_ invoke__\">encode_wide</span>().<span class=\"title function_ invoke__\">chain</span>(<span class=\"title function_ invoke__\">once</span>(<span class=\"number\">0</span>)).<span class=\"title function_ invoke__\">collect</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"使用代码修改注册表\"><a href=\"#使用代码修改注册表\" class=\"headerlink\" title=\"使用代码修改注册表\"></a>使用代码修改注册表</h2><figure class=\"highlight toml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">winapi</span> = &#123; version = <span class=\"string\">&quot;0.3.9&quot;</span>, features = [<span class=\"string\">&quot;winnls&quot;</span>, <span class=\"string\">&quot;sysinfoapi&quot;</span>, <span class=\"string\">&quot;winreg&quot;</span>, <span class=\"string\">&quot;winnt&quot;</span>, <span class=\"string\">&quot;minwindef&quot;</span>, <span class=\"string\">&quot;winerror&quot;</span>, <span class=\"string\">&quot;winuser&quot;</span>, <span class=\"string\">&quot;libloaderapi&quot;</span>] &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//注册表的键的位置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> SUB_KEY: &amp;<span class=\"type\">str</span> = <span class=\"string\">&quot;S-1-5-21-3107748782-1505907129-4070385151-1001\\\\Control Panel\\\\Desktop&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//要修改的键</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> ITEM_KEY: &amp;<span class=\"type\">str</span> = <span class=\"string\">&quot;WallPaper&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//打开注册表</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"variable\">result</span> = <span class=\"title function_ invoke__\">reg_open</span>(HKEY_USERS, SUB_KEY);</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> <span class=\"variable\">Ok</span>(s) = result &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">unsafe</span> &#123;   </span><br><span class=\"line\">        <span class=\"comment\">//修改后的内容</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> <span class=\"variable\">val</span> = <span class=\"title function_ invoke__\">str_to_lpcwstr</span>(<span class=\"string\">r&quot;C:\\Users\\wrw\\Desktop\\et\\picture\\wallhaven-3kekj9.jpg&quot;</span>);</span><br><span class=\"line\">\t\t <span class=\"title function_ invoke__\">RegSetValueExW</span>(</span><br><span class=\"line\">    \t\t s,<span class=\"comment\">//打开后的注册表</span></span><br><span class=\"line\">\t\t     <span class=\"title function_ invoke__\">str_to_lpcwstr</span>(ITEM_KEY).<span class=\"title function_ invoke__\">as_ptr</span>(),<span class=\"comment\">//修改的key的位置</span></span><br><span class=\"line\">\t\t     <span class=\"number\">0</span>,</span><br><span class=\"line\">    \t\t REG_SZ,<span class=\"comment\">//key的类型</span></span><br><span class=\"line\">\t\t     val.<span class=\"title function_ invoke__\">as_ptr</span>() <span class=\"keyword\">as</span> *<span class=\"keyword\">const</span> <span class=\"type\">u8</span>,<span class=\"comment\">//修改后的值</span></span><br><span class=\"line\">    \t\t (val.<span class=\"title function_ invoke__\">len</span>()*<span class=\"number\">2</span>) <span class=\"keyword\">as</span> <span class=\"type\">u32</span>,<span class=\"comment\">//新值的长度</span></span><br><span class=\"line\"> );</span><br><span class=\"line\"><span class=\"keyword\">fn</span> <span class=\"title function_\">reg_open</span>(main_hkey: HKEY, sub_key: &amp;<span class=\"type\">str</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Result</span>&lt;HKEY, <span class=\"type\">String</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">unsafe</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">hkey</span>: HKEY = <span class=\"title function_ invoke__\">null_mut</span>();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"variable\">status</span> = <span class=\"title function_ invoke__\">RegOpenKeyW</span>(main_hkey, <span class=\"title function_ invoke__\">str_to_lpcwstr</span>(sub_key).<span class=\"title function_ invoke__\">as_ptr</span>(), &amp;<span class=\"keyword\">mut</span> hkey);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> status == SEC_E_OK &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"type\">Result</span>::<span class=\"title function_ invoke__\">Ok</span>(hkey);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">Result</span>::<span class=\"title function_ invoke__\">Err</span>(<span class=\"built_in\">format!</span>(<span class=\"string\">&quot;status == &#123;&#125;&quot;</span>, status));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">str_to_lpcwstr</span>(<span class=\"type\">str</span>: &amp;<span class=\"type\">str</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">Vec</span>&lt;<span class=\"type\">u16</span>&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">result</span>: <span class=\"type\">Vec</span>&lt;<span class=\"type\">u16</span>&gt; = OsStr::<span class=\"title function_ invoke__\">new</span>(<span class=\"type\">str</span>).<span class=\"title function_ invoke__\">encode_wide</span>().<span class=\"title function_ invoke__\">chain</span>(<span class=\"title function_ invoke__\">once</span>(<span class=\"number\">0</span>)).<span class=\"title function_ invoke__\">collect</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"移除指定字符使数字最大","date":"2023-05-05T13:30:42.000Z","_content":"### 移除指定字符使数字最大\n\n遍历字符遍历到字符后如果不是字符串最后一位就判断是不是小于后一位的字符\n\n如果大于就可以直接返回index\n\n否则就往后遍历直到最后一个删除\n\n```rust\n// 移除指定字符使得数字最大\npub fn remove_digit(mut number: String, digit: char) -> String {\n    let mut ans_index = 0;\n    // 通过管道将字符串变为字符数组\n    let numbers: Vec<char> = number.chars().collect();\n    //遍历字符数组\n    for s in 0..numbers.len() {\n        if numbers[s] == digit {\n            ans_index = s;\n            if s + 1 < number.len() && numbers[s + 1] > digit {\n                break;\n            }\n        }\n    }\n    number.remove(ans_index);\n    number\n}\n\n```\n\n","source":"_posts/学习笔记/其他/移除指定字符使数字最大.md","raw":"---\ntitle: 移除指定字符使数字最大\ndate: 2023-05-05 21:30:42\ntags:  \n---\n### 移除指定字符使数字最大\n\n遍历字符遍历到字符后如果不是字符串最后一位就判断是不是小于后一位的字符\n\n如果大于就可以直接返回index\n\n否则就往后遍历直到最后一个删除\n\n```rust\n// 移除指定字符使得数字最大\npub fn remove_digit(mut number: String, digit: char) -> String {\n    let mut ans_index = 0;\n    // 通过管道将字符串变为字符数组\n    let numbers: Vec<char> = number.chars().collect();\n    //遍历字符数组\n    for s in 0..numbers.len() {\n        if numbers[s] == digit {\n            ans_index = s;\n            if s + 1 < number.len() && numbers[s + 1] > digit {\n                break;\n            }\n        }\n    }\n    number.remove(ans_index);\n    number\n}\n\n```\n\n","slug":"学习笔记/其他/移除指定字符使数字最大","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oar0013wwvngljz4gju","content":"<h3 id=\"移除指定字符使数字最大\"><a href=\"#移除指定字符使数字最大\" class=\"headerlink\" title=\"移除指定字符使数字最大\"></a>移除指定字符使数字最大</h3><p>遍历字符遍历到字符后如果不是字符串最后一位就判断是不是小于后一位的字符</p>\n<p>如果大于就可以直接返回index</p>\n<p>否则就往后遍历直到最后一个删除</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 移除指定字符使得数字最大</span></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">remove_digit</span>(<span class=\"keyword\">mut</span> number: <span class=\"type\">String</span>, digit: <span class=\"type\">char</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">ans_index</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 通过管道将字符串变为字符数组</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">numbers</span>: <span class=\"type\">Vec</span>&lt;<span class=\"type\">char</span>&gt; = number.<span class=\"title function_ invoke__\">chars</span>().<span class=\"title function_ invoke__\">collect</span>();</span><br><span class=\"line\">    <span class=\"comment\">//遍历字符数组</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"variable\">s</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span>..numbers.<span class=\"title function_ invoke__\">len</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> numbers[s] == digit &#123;</span><br><span class=\"line\">            ans_index = s;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> s + <span class=\"number\">1</span> &lt; number.<span class=\"title function_ invoke__\">len</span>() &amp;&amp; numbers[s + <span class=\"number\">1</span>] &gt; digit &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    number.<span class=\"title function_ invoke__\">remove</span>(ans_index);</span><br><span class=\"line\">    number</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h3 id=\"移除指定字符使数字最大\"><a href=\"#移除指定字符使数字最大\" class=\"headerlink\" title=\"移除指定字符使数字最大\"></a>移除指定字符使数字最大</h3><p>遍历字符遍历到字符后如果不是字符串最后一位就判断是不是小于后一位的字符</p>\n<p>如果大于就可以直接返回index</p>\n<p>否则就往后遍历直到最后一个删除</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 移除指定字符使得数字最大</span></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"title function_\">remove_digit</span>(<span class=\"keyword\">mut</span> number: <span class=\"type\">String</span>, digit: <span class=\"type\">char</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"keyword\">mut </span><span class=\"variable\">ans_index</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 通过管道将字符串变为字符数组</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"variable\">numbers</span>: <span class=\"type\">Vec</span>&lt;<span class=\"type\">char</span>&gt; = number.<span class=\"title function_ invoke__\">chars</span>().<span class=\"title function_ invoke__\">collect</span>();</span><br><span class=\"line\">    <span class=\"comment\">//遍历字符数组</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"variable\">s</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span>..numbers.<span class=\"title function_ invoke__\">len</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> numbers[s] == digit &#123;</span><br><span class=\"line\">            ans_index = s;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> s + <span class=\"number\">1</span> &lt; number.<span class=\"title function_ invoke__\">len</span>() &amp;&amp; numbers[s + <span class=\"number\">1</span>] &gt; digit &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    number.<span class=\"title function_ invoke__\">remove</span>(ans_index);</span><br><span class=\"line\">    number</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"ajax","date":"2023-05-05T13:30:42.000Z","_content":"全局刷新\n浏览器得到服务器请求返回的数据之后,只能得到数据不能同时展示之前的内容\n局部刷新\n浏览器得到服务器的数据之后同时展示原有的数据\n全局刷新的工作原理\n![[Pasted image 20230417102225.png]]\n浏览器负责将请求协议包推送给服务器\n服务器将响应协议包直接推送到浏览器内容\n浏览器中原有数据被覆盖\n此时只能展示响应数据不能展示已有数据\n局部刷新的原理\n![[Pasted image 20230417103003.png]]\n必须禁止尤浏览器向服务端发送请求,不能使用超链接,尤脚本对象代替浏览器发送请求,响应包给脚本对象\n\najax\nasynchronous javascript and xml\nxml 可拓展标记语言\n局部刷新\n在页面加载后向服务器请求数据\n提高交互体验","source":"_posts/学习笔记/前端/ajax.md","raw":"---\ntitle: ajax\ndate: 2023-05-05 21:30:42\ntags:  \n---\n全局刷新\n浏览器得到服务器请求返回的数据之后,只能得到数据不能同时展示之前的内容\n局部刷新\n浏览器得到服务器的数据之后同时展示原有的数据\n全局刷新的工作原理\n![[Pasted image 20230417102225.png]]\n浏览器负责将请求协议包推送给服务器\n服务器将响应协议包直接推送到浏览器内容\n浏览器中原有数据被覆盖\n此时只能展示响应数据不能展示已有数据\n局部刷新的原理\n![[Pasted image 20230417103003.png]]\n必须禁止尤浏览器向服务端发送请求,不能使用超链接,尤脚本对象代替浏览器发送请求,响应包给脚本对象\n\najax\nasynchronous javascript and xml\nxml 可拓展标记语言\n局部刷新\n在页面加载后向服务器请求数据\n提高交互体验","slug":"学习笔记/前端/ajax","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oar0014wwvn7rp1c224","content":"<p>全局刷新<br>浏览器得到服务器请求返回的数据之后,只能得到数据不能同时展示之前的内容<br>局部刷新<br>浏览器得到服务器的数据之后同时展示原有的数据<br>全局刷新的工作原理<br>![[Pasted image 20230417102225.png]]<br>浏览器负责将请求协议包推送给服务器<br>服务器将响应协议包直接推送到浏览器内容<br>浏览器中原有数据被覆盖<br>此时只能展示响应数据不能展示已有数据<br>局部刷新的原理<br>![[Pasted image 20230417103003.png]]<br>必须禁止尤浏览器向服务端发送请求,不能使用超链接,尤脚本对象代替浏览器发送请求,响应包给脚本对象</p>\n<p>ajax<br>asynchronous javascript and xml<br>xml 可拓展标记语言<br>局部刷新<br>在页面加载后向服务器请求数据<br>提高交互体验</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>全局刷新<br>浏览器得到服务器请求返回的数据之后,只能得到数据不能同时展示之前的内容<br>局部刷新<br>浏览器得到服务器的数据之后同时展示原有的数据<br>全局刷新的工作原理<br>![[Pasted image 20230417102225.png]]<br>浏览器负责将请求协议包推送给服务器<br>服务器将响应协议包直接推送到浏览器内容<br>浏览器中原有数据被覆盖<br>此时只能展示响应数据不能展示已有数据<br>局部刷新的原理<br>![[Pasted image 20230417103003.png]]<br>必须禁止尤浏览器向服务端发送请求,不能使用超链接,尤脚本对象代替浏览器发送请求,响应包给脚本对象</p>\n<p>ajax<br>asynchronous javascript and xml<br>xml 可拓展标记语言<br>局部刷新<br>在页面加载后向服务器请求数据<br>提高交互体验</p>\n"},{"title":"axios","date":"2023-05-05T13:30:42.000Z","_content":"axios的封装","source":"_posts/学习笔记/前端/axios.md","raw":"---\ntitle: axios\ndate: 2023-05-05 21:30:42\ntags:  \n---\naxios的封装","slug":"学习笔记/前端/axios","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oar0015wwvn2397aq9b","content":"<p>axios的封装</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>axios的封装</p>\n"},{"title":"css","date":"2023-05-05T13:30:42.000Z","_content":"# css\n\n#### 导入css的三种方法\n\n- 使用style标签添加样式\n\n- 在标签的后面添加css样式\n\n- 使用link标签导入外部css文件\n\n  ```html\n  <!-- 第一种-->\n  <style>h1{\n  \tbackground=\"red\";    \n  } </style>\n  <!-- 第二种-->\n  <p style=\"\"></p>\n  <!-- 第三种-->\n  <link rel=\"stylesheet\" href=\"css位置\">\n  ```\n\n  ## 常用的标签\n\n  ```html\n  <h1></h1>1~6都是标题\n  <p></p> 段落\n  <br>换行\n  <hr>水平线标签\n  <!-- 字体样式标签-->\n  粗体<strong> 1234</strong>\n  斜体<em>1234</em>\n  特殊符号\n  &开头;结尾\n  <!--图片标签-->\n  <img src = \"path\" alt=\"图片加载失败显示的文字\"\n       title=\"悬停时候显示的文字\" width=\"\" height=\"\">\n  <!--链接文本或者图片 _self,_blank-->\n  <a href=\"path\" target=\"目标窗口的位置\">\n  <!--锚链接-->\n  <a name=\"#top\"></a>\n  <a href=\"#top\" >点击回到顶部</a>    \n  <!--列表-->    \n  <!--有序-->\n  <ol>\n      <li>java</li>\n      <li>ja</li>\n  </ol>\n  <!--无序-->\n  <ul>\n      <li>java</li>\n      <li>ja</li>\n  </ul>\n  <!--自定义序-->\n  <dl>\n      <dt>java</dt>\n      <dt>c</dt>\n      <dd>sss</dd>\n      <dt>linux</dt>\n  </dl>    \n  <!--表格-->    \n  <table border=\"1px\" style=\"text-align:center;font-family:verdana,sans-serif;color:red;font-size:20px;\">\n      <tr>\n          <td colspan=\"4\">科目</td>\n      </tr>\n      <tr>行内\n          <td rowspan=\"2\" >班级</td>列内\n          <td>2-2</td>\n          <td>2-3</td>\n          <td>2-4</td>\n      </tr>\n      <tr>\n          <td>2-2</td>\n          <td>2-3</td>\n          <td>2-4</td>\n      </tr>\n  </table>    \n  <label>标签指向输入框,点击字体跳到输入框  \n  placeholder=\"书籍的数量\"输入框提示信息\n  <form  action=\"/h1/addBook\" method=\"get\">表单    \n  ```\n\n  ## css样式\n\n  ```css\n  style{\n  background-color:red;背景图片\n  font-family:arial,sans-serif;color:red;font-size:20px;font-weight:bold; text-align:center;居中\n  background-image: linear-gradient(to right, #6025f5, #ff5555);从左到右渐变\n  /*水平阴影，垂直阴影，模糊的距离，以及阴影的颜色*/\n  text-shadow: 10px 10px 4px grey;    \n  /*盒子阴影*/    \n  box-shadow: 5px 5px 5px grey;\n  text-decoration: None;去掉a链接的下划线    \n  }\n  /* 三列,以及中间的间距*/\n  column-count:3;\n  column-gap:40px;\n  /*列中分割线,以及厚度,颜色*/\n  column-rule-style:dotted;\n  column-rule-width: 1px;\n  column-rule-color: lightblue;\n  /*指定控件跨越几个列*/\n  column-span: all;\n  /*列的宽度*/\n  column-width: 100px;\n  .btn-group button {\n      background-color: #04AA6D; /* 绿色背景 */\n      border: 1px solid green; /* 绿色边框 */\n      color: white; /* 白色文本 */\n      padding: 10px 24px; /* 内边距离、 */\n      cursor: pointer; /* 指针/手形图标 */\n      float: left; /* 并排浮动按钮 */\n  }\n  ```\n  \n  ### 动画\n  \n  ```css\n  @keyframes 规则是创建动画。\n  \n  @keyframes 规则内指定一个 CSS 样式和动画将逐步从目前的样式更改为新的样式。\n  ```\n  \n  \n  \n  \n\n","source":"_posts/学习笔记/前端/css.md","raw":"---\ntitle: css\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# css\n\n#### 导入css的三种方法\n\n- 使用style标签添加样式\n\n- 在标签的后面添加css样式\n\n- 使用link标签导入外部css文件\n\n  ```html\n  <!-- 第一种-->\n  <style>h1{\n  \tbackground=\"red\";    \n  } </style>\n  <!-- 第二种-->\n  <p style=\"\"></p>\n  <!-- 第三种-->\n  <link rel=\"stylesheet\" href=\"css位置\">\n  ```\n\n  ## 常用的标签\n\n  ```html\n  <h1></h1>1~6都是标题\n  <p></p> 段落\n  <br>换行\n  <hr>水平线标签\n  <!-- 字体样式标签-->\n  粗体<strong> 1234</strong>\n  斜体<em>1234</em>\n  特殊符号\n  &开头;结尾\n  <!--图片标签-->\n  <img src = \"path\" alt=\"图片加载失败显示的文字\"\n       title=\"悬停时候显示的文字\" width=\"\" height=\"\">\n  <!--链接文本或者图片 _self,_blank-->\n  <a href=\"path\" target=\"目标窗口的位置\">\n  <!--锚链接-->\n  <a name=\"#top\"></a>\n  <a href=\"#top\" >点击回到顶部</a>    \n  <!--列表-->    \n  <!--有序-->\n  <ol>\n      <li>java</li>\n      <li>ja</li>\n  </ol>\n  <!--无序-->\n  <ul>\n      <li>java</li>\n      <li>ja</li>\n  </ul>\n  <!--自定义序-->\n  <dl>\n      <dt>java</dt>\n      <dt>c</dt>\n      <dd>sss</dd>\n      <dt>linux</dt>\n  </dl>    \n  <!--表格-->    \n  <table border=\"1px\" style=\"text-align:center;font-family:verdana,sans-serif;color:red;font-size:20px;\">\n      <tr>\n          <td colspan=\"4\">科目</td>\n      </tr>\n      <tr>行内\n          <td rowspan=\"2\" >班级</td>列内\n          <td>2-2</td>\n          <td>2-3</td>\n          <td>2-4</td>\n      </tr>\n      <tr>\n          <td>2-2</td>\n          <td>2-3</td>\n          <td>2-4</td>\n      </tr>\n  </table>    \n  <label>标签指向输入框,点击字体跳到输入框  \n  placeholder=\"书籍的数量\"输入框提示信息\n  <form  action=\"/h1/addBook\" method=\"get\">表单    \n  ```\n\n  ## css样式\n\n  ```css\n  style{\n  background-color:red;背景图片\n  font-family:arial,sans-serif;color:red;font-size:20px;font-weight:bold; text-align:center;居中\n  background-image: linear-gradient(to right, #6025f5, #ff5555);从左到右渐变\n  /*水平阴影，垂直阴影，模糊的距离，以及阴影的颜色*/\n  text-shadow: 10px 10px 4px grey;    \n  /*盒子阴影*/    \n  box-shadow: 5px 5px 5px grey;\n  text-decoration: None;去掉a链接的下划线    \n  }\n  /* 三列,以及中间的间距*/\n  column-count:3;\n  column-gap:40px;\n  /*列中分割线,以及厚度,颜色*/\n  column-rule-style:dotted;\n  column-rule-width: 1px;\n  column-rule-color: lightblue;\n  /*指定控件跨越几个列*/\n  column-span: all;\n  /*列的宽度*/\n  column-width: 100px;\n  .btn-group button {\n      background-color: #04AA6D; /* 绿色背景 */\n      border: 1px solid green; /* 绿色边框 */\n      color: white; /* 白色文本 */\n      padding: 10px 24px; /* 内边距离、 */\n      cursor: pointer; /* 指针/手形图标 */\n      float: left; /* 并排浮动按钮 */\n  }\n  ```\n  \n  ### 动画\n  \n  ```css\n  @keyframes 规则是创建动画。\n  \n  @keyframes 规则内指定一个 CSS 样式和动画将逐步从目前的样式更改为新的样式。\n  ```\n  \n  \n  \n  \n\n","slug":"学习笔记/前端/css","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oas0016wwvn6pjc4w7c","content":"<h1 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h1><h4 id=\"导入css的三种方法\"><a href=\"#导入css的三种方法\" class=\"headerlink\" title=\"导入css的三种方法\"></a>导入css的三种方法</h4><ul>\n<li><p>使用style标签添加样式</p>\n</li>\n<li><p>在标签的后面添加css样式</p>\n</li>\n<li><p>使用link标签导入外部css文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 第一种--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span>h1&#123;</span><br><span class=\"line\">\tbackground=&quot;red&quot;;    </span><br><span class=\"line\">&#125; <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第二种--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第三种--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;css位置&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用的标签\"><a href=\"#常用的标签\" class=\"headerlink\" title=\"常用的标签\"></a>常用的标签</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>1~6都是标题</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> 段落</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>换行</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span>水平线标签</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 字体样式标签--&gt;</span></span><br><span class=\"line\">粗体<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span> 1234<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span></span><br><span class=\"line\">斜体<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>1234<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span></span><br><span class=\"line\">特殊符号</span><br><span class=\"line\">&amp;开头;结尾</span><br><span class=\"line\"><span class=\"comment\">&lt;!--图片标签--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span> = <span class=\"string\">&quot;path&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;图片加载失败显示的文字&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">title</span>=<span class=\"string\">&quot;悬停时候显示的文字&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--链接文本或者图片 _self,_blank--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;path&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;目标窗口的位置&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--锚链接--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;#top&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#top&quot;</span> &gt;</span>点击回到顶部<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>    </span><br><span class=\"line\"><span class=\"comment\">&lt;!--列表--&gt;</span>    </span><br><span class=\"line\"><span class=\"comment\">&lt;!--有序--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>java<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>ja<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--无序--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>java<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>ja<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--自定义序--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>java<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>c<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>sss<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>linux<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span>    </span><br><span class=\"line\"><span class=\"comment\">&lt;!--表格--&gt;</span>    </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;1px&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align:center;font-family:verdana,sans-serif;color:red;font-size:20px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span>科目<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span>行内</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">rowspan</span>=<span class=\"string\">&quot;2&quot;</span> &gt;</span>班级<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>列内</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span>    </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>标签指向输入框,点击字体跳到输入框  </span><br><span class=\"line\">placeholder=&quot;书籍的数量&quot;输入框提示信息</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>  <span class=\"attr\">action</span>=<span class=\"string\">&quot;/h1/addBook&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;get&quot;</span>&gt;</span>表单    </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"css样式\"><a href=\"#css样式\" class=\"headerlink\" title=\"css样式\"></a>css样式</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">style&#123;</span><br><span class=\"line\"><span class=\"attribute\">background-color</span>:red;背景图片</span><br><span class=\"line\"><span class=\"attribute\">font-family</span>:arial,sans-serif;<span class=\"attribute\">color</span>:red;<span class=\"attribute\">font-size</span>:<span class=\"number\">20px</span>;<span class=\"attribute\">font-weight</span>:bold; <span class=\"attribute\">text-align</span>:center;居中</span><br><span class=\"line\"><span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(to right, <span class=\"number\">#6025f5</span>, <span class=\"number\">#ff5555</span>);从左到右渐变</span><br><span class=\"line\"><span class=\"comment\">/*水平阴影，垂直阴影，模糊的距离，以及阴影的颜色*/</span></span><br><span class=\"line\"><span class=\"attribute\">text-shadow</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">4px</span> grey;    </span><br><span class=\"line\"><span class=\"comment\">/*盒子阴影*/</span>    </span><br><span class=\"line\"><span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">5px</span> grey;</span><br><span class=\"line\"><span class=\"attribute\">text-decoration</span>: None;去掉<span class=\"selector-tag\">a</span>链接的下划线    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 三列,以及中间的间距*/</span></span><br><span class=\"line\"><span class=\"attribute\">column-count</span>:<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"attribute\">column-gap</span>:<span class=\"number\">40px</span>;</span><br><span class=\"line\"><span class=\"comment\">/*列中分割线,以及厚度,颜色*/</span></span><br><span class=\"line\"><span class=\"attribute\">column-rule-style</span>:dotted;</span><br><span class=\"line\"><span class=\"attribute\">column-rule-width</span>: <span class=\"number\">1px</span>;</span><br><span class=\"line\"><span class=\"attribute\">column-rule-color</span>: lightblue;</span><br><span class=\"line\"><span class=\"comment\">/*指定控件跨越几个列*/</span></span><br><span class=\"line\"><span class=\"attribute\">column-span</span>: all;</span><br><span class=\"line\"><span class=\"comment\">/*列的宽度*/</span></span><br><span class=\"line\"><span class=\"attribute\">column-width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"><span class=\"selector-class\">.btn-group</span> <span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#04AA6D</span>; <span class=\"comment\">/* 绿色背景 */</span></span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid green; <span class=\"comment\">/* 绿色边框 */</span></span><br><span class=\"line\">    <span class=\"attribute\">color</span>: white; <span class=\"comment\">/* 白色文本 */</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">24px</span>; <span class=\"comment\">/* 内边距离、 */</span></span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: pointer; <span class=\"comment\">/* 指针/手形图标 */</span></span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left; <span class=\"comment\">/* 并排浮动按钮 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"动画\"><a href=\"#动画\" class=\"headerlink\" title=\"动画\"></a>动画</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@keyframes</span> 规则是创建动画。</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes 规则内指定一个 CSS 样式和动画将逐步从目前的样式更改为新的样式。</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h1><h4 id=\"导入css的三种方法\"><a href=\"#导入css的三种方法\" class=\"headerlink\" title=\"导入css的三种方法\"></a>导入css的三种方法</h4><ul>\n<li><p>使用style标签添加样式</p>\n</li>\n<li><p>在标签的后面添加css样式</p>\n</li>\n<li><p>使用link标签导入外部css文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 第一种--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span>h1&#123;</span><br><span class=\"line\">\tbackground=&quot;red&quot;;    </span><br><span class=\"line\">&#125; <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第二种--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第三种--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;css位置&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常用的标签\"><a href=\"#常用的标签\" class=\"headerlink\" title=\"常用的标签\"></a>常用的标签</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>1~6都是标题</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span> 段落</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>换行</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span>水平线标签</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 字体样式标签--&gt;</span></span><br><span class=\"line\">粗体<span class=\"tag\">&lt;<span class=\"name\">strong</span>&gt;</span> 1234<span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span></span><br><span class=\"line\">斜体<span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>1234<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span></span><br><span class=\"line\">特殊符号</span><br><span class=\"line\">&amp;开头;结尾</span><br><span class=\"line\"><span class=\"comment\">&lt;!--图片标签--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span> = <span class=\"string\">&quot;path&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;图片加载失败显示的文字&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">title</span>=<span class=\"string\">&quot;悬停时候显示的文字&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--链接文本或者图片 _self,_blank--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;path&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;目标窗口的位置&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--锚链接--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;#top&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#top&quot;</span> &gt;</span>点击回到顶部<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>    </span><br><span class=\"line\"><span class=\"comment\">&lt;!--列表--&gt;</span>    </span><br><span class=\"line\"><span class=\"comment\">&lt;!--有序--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>java<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>ja<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--无序--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>java<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>ja<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--自定义序--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>java<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>c<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>sss<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>linux<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span>    </span><br><span class=\"line\"><span class=\"comment\">&lt;!--表格--&gt;</span>    </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;1px&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align:center;font-family:verdana,sans-serif;color:red;font-size:20px;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span>科目<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span>行内</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">rowspan</span>=<span class=\"string\">&quot;2&quot;</span> &gt;</span>班级<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span>列内</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-2<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-3<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>2-4<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span>    </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>标签指向输入框,点击字体跳到输入框  </span><br><span class=\"line\">placeholder=&quot;书籍的数量&quot;输入框提示信息</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>  <span class=\"attr\">action</span>=<span class=\"string\">&quot;/h1/addBook&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;get&quot;</span>&gt;</span>表单    </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"css样式\"><a href=\"#css样式\" class=\"headerlink\" title=\"css样式\"></a>css样式</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">style&#123;</span><br><span class=\"line\"><span class=\"attribute\">background-color</span>:red;背景图片</span><br><span class=\"line\"><span class=\"attribute\">font-family</span>:arial,sans-serif;<span class=\"attribute\">color</span>:red;<span class=\"attribute\">font-size</span>:<span class=\"number\">20px</span>;<span class=\"attribute\">font-weight</span>:bold; <span class=\"attribute\">text-align</span>:center;居中</span><br><span class=\"line\"><span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(to right, <span class=\"number\">#6025f5</span>, <span class=\"number\">#ff5555</span>);从左到右渐变</span><br><span class=\"line\"><span class=\"comment\">/*水平阴影，垂直阴影，模糊的距离，以及阴影的颜色*/</span></span><br><span class=\"line\"><span class=\"attribute\">text-shadow</span>: <span class=\"number\">10px</span> <span class=\"number\">10px</span> <span class=\"number\">4px</span> grey;    </span><br><span class=\"line\"><span class=\"comment\">/*盒子阴影*/</span>    </span><br><span class=\"line\"><span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">5px</span> grey;</span><br><span class=\"line\"><span class=\"attribute\">text-decoration</span>: None;去掉<span class=\"selector-tag\">a</span>链接的下划线    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 三列,以及中间的间距*/</span></span><br><span class=\"line\"><span class=\"attribute\">column-count</span>:<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"attribute\">column-gap</span>:<span class=\"number\">40px</span>;</span><br><span class=\"line\"><span class=\"comment\">/*列中分割线,以及厚度,颜色*/</span></span><br><span class=\"line\"><span class=\"attribute\">column-rule-style</span>:dotted;</span><br><span class=\"line\"><span class=\"attribute\">column-rule-width</span>: <span class=\"number\">1px</span>;</span><br><span class=\"line\"><span class=\"attribute\">column-rule-color</span>: lightblue;</span><br><span class=\"line\"><span class=\"comment\">/*指定控件跨越几个列*/</span></span><br><span class=\"line\"><span class=\"attribute\">column-span</span>: all;</span><br><span class=\"line\"><span class=\"comment\">/*列的宽度*/</span></span><br><span class=\"line\"><span class=\"attribute\">column-width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"><span class=\"selector-class\">.btn-group</span> <span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#04AA6D</span>; <span class=\"comment\">/* 绿色背景 */</span></span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid green; <span class=\"comment\">/* 绿色边框 */</span></span><br><span class=\"line\">    <span class=\"attribute\">color</span>: white; <span class=\"comment\">/* 白色文本 */</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">24px</span>; <span class=\"comment\">/* 内边距离、 */</span></span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: pointer; <span class=\"comment\">/* 指针/手形图标 */</span></span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left; <span class=\"comment\">/* 并排浮动按钮 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"动画\"><a href=\"#动画\" class=\"headerlink\" title=\"动画\"></a>动画</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@keyframes</span> 规则是创建动画。</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes 规则内指定一个 CSS 样式和动画将逐步从目前的样式更改为新的样式。</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"jsp","date":"2023-05-05T13:30:42.000Z","_content":"```jsp\n<%\n  response.sendRedirect(\"/h1/hello1\");\n%>\n```\n\n可以再html中写网页\n\n实现分页查询数据库\n\n携带参数给链接链接按照前端传递过来值对指定数据库进行访问","source":"_posts/学习笔记/前端/jsp.md","raw":"---\ntitle: jsp\ndate: 2023-05-05 21:30:42\ntags:  \n---\n```jsp\n<%\n  response.sendRedirect(\"/h1/hello1\");\n%>\n```\n\n可以再html中写网页\n\n实现分页查询数据库\n\n携带参数给链接链接按照前端传递过来值对指定数据库进行访问","slug":"学习笔记/前端/jsp","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oas0017wwvn9plp1c3g","content":"<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%</span><br><span class=\"line\">  response.sendRedirect(<span class=\"string\">&quot;/h1/hello1&quot;</span>);</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以再html中写网页</p>\n<p>实现分页查询数据库</p>\n<p>携带参数给链接链接按照前端传递过来值对指定数据库进行访问</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%</span><br><span class=\"line\">  response.sendRedirect(<span class=\"string\">&quot;/h1/hello1&quot;</span>);</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以再html中写网页</p>\n<p>实现分页查询数据库</p>\n<p>携带参数给链接链接按照前端传递过来值对指定数据库进行访问</p>\n"},{"title":"express","date":"2023-05-05T13:30:42.000Z","_content":"初始化node项目\n```shell\n// 初始化命令\nnpm init\n// 安装express,并添加到依赖当中\nnpm install express --save\n// 创建index.js\n\n```\n```javascript\n// 引入模块\n// commonjs的模块引入方式\nconst express = require('express')\n// es6的引入方式\nimport express from 'express'\nconst app = express()\nconst port = 3000\n\n// 接口\napp.get('/', (request, response) => {\n// 设置响应头\nresponse.header(\"Access-Control-Allow-Origin\", \"*\");\n\n// 请求的参数\nrequest.query\n\n// 转为json并发送\nresponse.json(Object对象)\n\n// 发送文本\n  response.send('Hello World!')\n})\n\n// 监听3000端口\napp.listen(port, () => {\n  console.log(`Example app listening on port ${port}`)\n})\n```\n```shell \nnode index.js\n运行\n\n```","source":"_posts/学习笔记/前端/express.md","raw":"---\ntitle: express\ndate: 2023-05-05 21:30:42\ntags:  \n---\n初始化node项目\n```shell\n// 初始化命令\nnpm init\n// 安装express,并添加到依赖当中\nnpm install express --save\n// 创建index.js\n\n```\n```javascript\n// 引入模块\n// commonjs的模块引入方式\nconst express = require('express')\n// es6的引入方式\nimport express from 'express'\nconst app = express()\nconst port = 3000\n\n// 接口\napp.get('/', (request, response) => {\n// 设置响应头\nresponse.header(\"Access-Control-Allow-Origin\", \"*\");\n\n// 请求的参数\nrequest.query\n\n// 转为json并发送\nresponse.json(Object对象)\n\n// 发送文本\n  response.send('Hello World!')\n})\n\n// 监听3000端口\napp.listen(port, () => {\n  console.log(`Example app listening on port ${port}`)\n})\n```\n```shell \nnode index.js\n运行\n\n```","slug":"学习笔记/前端/express","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oas0018wwvn6s4o4ybi","content":"<p>初始化node项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 初始化命令</span><br><span class=\"line\">npm init</span><br><span class=\"line\">// 安装express,并添加到依赖当中</span><br><span class=\"line\">npm install express --save</span><br><span class=\"line\">// 创建index.js</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入模块</span></span><br><span class=\"line\"><span class=\"comment\">// commonjs的模块引入方式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// es6的引入方式</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> express <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">express</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">3000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口</span></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">request, response</span>) =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 设置响应头</span></span><br><span class=\"line\">response.<span class=\"title function_\">header</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 请求的参数</span></span><br><span class=\"line\">request.<span class=\"property\">query</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 转为json并发送</span></span><br><span class=\"line\">response.<span class=\"title function_\">json</span>(<span class=\"title class_\">Object</span>对象)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送文本</span></span><br><span class=\"line\">  response.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Hello World!&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 监听3000端口</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(port, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Example app listening on port <span class=\"subst\">$&#123;port&#125;</span>`</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js</span><br><span class=\"line\">运行</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>初始化node项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 初始化命令</span><br><span class=\"line\">npm init</span><br><span class=\"line\">// 安装express,并添加到依赖当中</span><br><span class=\"line\">npm install express --save</span><br><span class=\"line\">// 创建index.js</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入模块</span></span><br><span class=\"line\"><span class=\"comment\">// commonjs的模块引入方式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// es6的引入方式</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> express <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">express</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">3000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接口</span></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">request, response</span>) =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">// 设置响应头</span></span><br><span class=\"line\">response.<span class=\"title function_\">header</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, <span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 请求的参数</span></span><br><span class=\"line\">request.<span class=\"property\">query</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 转为json并发送</span></span><br><span class=\"line\">response.<span class=\"title function_\">json</span>(<span class=\"title class_\">Object</span>对象)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送文本</span></span><br><span class=\"line\">  response.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Hello World!&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 监听3000端口</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(port, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Example app listening on port <span class=\"subst\">$&#123;port&#125;</span>`</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node index.js</span><br><span class=\"line\">运行</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"node","date":"2023-05-05T13:30:42.000Z","_content":"现在支持es6语法,只需要在配置中设置\n```json\n{\ntype:'module'\n}\n```\n## 引入方式\n```typescript\n// 默认导入,必须指定名字,名字可以随便取\n// commonjs的模块引入方式\nconst express = require('express')\n// es6的引入方式\nimport express from 'express'\n// 加{}的导入\nimport {default as express} from 'express'\n\n// 命名导入\n// 方法一 别名导入\nimport {name as tom} from 'express';\n// 方法二\nimport {name} from 'express'\n// 方法三 全部导入 需要一个集合名 如这里的items,使用时候items.属性名来使用\nimport * as items from 'express'\n// 方法四 同时导入默认导出和命名导出\nimport tom ,{ name} from 'express'\nimport { tom as default ,name} from 'express'\nimport tom , * as items from 'express'\n\n\n```\n对于这种不写具体路径的引入都是从`node_modules`当中 \n## 导出方式\n```typescript\n// 默认导出\n// 一个模块只能有一个default\n// 方法一\nexport default 'Tom';\n// 方法二\nconst name = 'Tom';\nexport default name;\n// 方法三\nconst name = 'Tom';\nexport {name as default}; // 大括号必不可少\n\n// 命名导出\n// 方法一\nexport const name='tom';\n// 方法二\nconst name ='tom'\nexport {name}//哪怕只有一个值都需要{}\n// 使用别名导出\nexport {name as tom}\n\n```","source":"_posts/学习笔记/前端/node.md","raw":"---\ntitle: node\ndate: 2023-05-05 21:30:42\ntags:  \n---\n现在支持es6语法,只需要在配置中设置\n```json\n{\ntype:'module'\n}\n```\n## 引入方式\n```typescript\n// 默认导入,必须指定名字,名字可以随便取\n// commonjs的模块引入方式\nconst express = require('express')\n// es6的引入方式\nimport express from 'express'\n// 加{}的导入\nimport {default as express} from 'express'\n\n// 命名导入\n// 方法一 别名导入\nimport {name as tom} from 'express';\n// 方法二\nimport {name} from 'express'\n// 方法三 全部导入 需要一个集合名 如这里的items,使用时候items.属性名来使用\nimport * as items from 'express'\n// 方法四 同时导入默认导出和命名导出\nimport tom ,{ name} from 'express'\nimport { tom as default ,name} from 'express'\nimport tom , * as items from 'express'\n\n\n```\n对于这种不写具体路径的引入都是从`node_modules`当中 \n## 导出方式\n```typescript\n// 默认导出\n// 一个模块只能有一个default\n// 方法一\nexport default 'Tom';\n// 方法二\nconst name = 'Tom';\nexport default name;\n// 方法三\nconst name = 'Tom';\nexport {name as default}; // 大括号必不可少\n\n// 命名导出\n// 方法一\nexport const name='tom';\n// 方法二\nconst name ='tom'\nexport {name}//哪怕只有一个值都需要{}\n// 使用别名导出\nexport {name as tom}\n\n```","slug":"学习笔记/前端/node","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oat0019wwvn34cvbq4q","content":"<p>现在支持es6语法,只需要在配置中设置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">type<span class=\"punctuation\">:</span>&#x27;module&#x27;</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"引入方式\"><a href=\"#引入方式\" class=\"headerlink\" title=\"引入方式\"></a>引入方式</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认导入,必须指定名字,名字可以随便取</span></span><br><span class=\"line\"><span class=\"comment\">// commonjs的模块引入方式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// es6的引入方式</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> express <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 加&#123;&#125;的导入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"keyword\">default</span> <span class=\"keyword\">as</span> express&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 命名导入</span></span><br><span class=\"line\"><span class=\"comment\">// 方法一 别名导入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;name <span class=\"keyword\">as</span> tom&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 方法二</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;name&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 方法三 全部导入 需要一个集合名 如这里的items,使用时候items.属性名来使用</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> items <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 方法四 同时导入默认导出和命名导出</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> tom ,&#123; name&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; tom <span class=\"keyword\">as</span> <span class=\"keyword\">default</span> ,name&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> tom , * <span class=\"keyword\">as</span> items <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>对于这种不写具体路径的引入都是从<code>node_modules</code>当中 </p>\n<h2 id=\"导出方式\"><a href=\"#导出方式\" class=\"headerlink\" title=\"导出方式\"></a>导出方式</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认导出</span></span><br><span class=\"line\"><span class=\"comment\">// 一个模块只能有一个default</span></span><br><span class=\"line\"><span class=\"comment\">// 方法一</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"string\">&#x27;Tom&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 方法二</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;Tom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> name;</span><br><span class=\"line\"><span class=\"comment\">// 方法三</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;Tom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;name <span class=\"keyword\">as</span> <span class=\"keyword\">default</span>&#125;; <span class=\"comment\">// 大括号必不可少</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 命名导出</span></span><br><span class=\"line\"><span class=\"comment\">// 方法一</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> name=<span class=\"string\">&#x27;tom&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 方法二</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name =<span class=\"string\">&#x27;tom&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;name&#125;<span class=\"comment\">//哪怕只有一个值都需要&#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 使用别名导出</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;name <span class=\"keyword\">as</span> tom&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>现在支持es6语法,只需要在配置中设置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">type<span class=\"punctuation\">:</span>&#x27;module&#x27;</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"引入方式\"><a href=\"#引入方式\" class=\"headerlink\" title=\"引入方式\"></a>引入方式</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认导入,必须指定名字,名字可以随便取</span></span><br><span class=\"line\"><span class=\"comment\">// commonjs的模块引入方式</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// es6的引入方式</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> express <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 加&#123;&#125;的导入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"keyword\">default</span> <span class=\"keyword\">as</span> express&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 命名导入</span></span><br><span class=\"line\"><span class=\"comment\">// 方法一 别名导入</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;name <span class=\"keyword\">as</span> tom&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 方法二</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;name&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 方法三 全部导入 需要一个集合名 如这里的items,使用时候items.属性名来使用</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> items <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 方法四 同时导入默认导出和命名导出</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> tom ,&#123; name&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; tom <span class=\"keyword\">as</span> <span class=\"keyword\">default</span> ,name&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> tom , * <span class=\"keyword\">as</span> items <span class=\"keyword\">from</span> <span class=\"string\">&#x27;express&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>对于这种不写具体路径的引入都是从<code>node_modules</code>当中 </p>\n<h2 id=\"导出方式\"><a href=\"#导出方式\" class=\"headerlink\" title=\"导出方式\"></a>导出方式</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认导出</span></span><br><span class=\"line\"><span class=\"comment\">// 一个模块只能有一个default</span></span><br><span class=\"line\"><span class=\"comment\">// 方法一</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"string\">&#x27;Tom&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 方法二</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;Tom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> name;</span><br><span class=\"line\"><span class=\"comment\">// 方法三</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;Tom&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;name <span class=\"keyword\">as</span> <span class=\"keyword\">default</span>&#125;; <span class=\"comment\">// 大括号必不可少</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 命名导出</span></span><br><span class=\"line\"><span class=\"comment\">// 方法一</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> name=<span class=\"string\">&#x27;tom&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 方法二</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name =<span class=\"string\">&#x27;tom&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;name&#125;<span class=\"comment\">//哪怕只有一个值都需要&#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 使用别名导出</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;name <span class=\"keyword\">as</span> tom&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"npm","date":"2023-05-05T13:30:42.000Z","_content":"## 查看全局包\nnpm list -g\n## 全局安装\nnpm install -g pnpm\n","source":"_posts/学习笔记/前端/npm.md","raw":"---\ntitle: npm\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 查看全局包\nnpm list -g\n## 全局安装\nnpm install -g pnpm\n","slug":"学习笔记/前端/npm","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oat001awwvnf0gv79y3","content":"<h2 id=\"查看全局包\"><a href=\"#查看全局包\" class=\"headerlink\" title=\"查看全局包\"></a>查看全局包</h2><p>npm list -g</p>\n<h2 id=\"全局安装\"><a href=\"#全局安装\" class=\"headerlink\" title=\"全局安装\"></a>全局安装</h2><p>npm install -g pnpm</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"查看全局包\"><a href=\"#查看全局包\" class=\"headerlink\" title=\"查看全局包\"></a>查看全局包</h2><p>npm list -g</p>\n<h2 id=\"全局安装\"><a href=\"#全局安装\" class=\"headerlink\" title=\"全局安装\"></a>全局安装</h2><p>npm install -g pnpm</p>\n"},{"title":"router","date":"2023-05-05T13:30:42.000Z","_content":"## 导入创建路由\n通过createRouter()方法\n```Typescript\nimport s from '../views/s.vue'\n\n// vite的动态匹配,这个将匹配符合规则的模块\n// 匹配到的文件默认是懒加载的，通过动态导入实现，并会在构建时分离为独立的 chunk\n// 通过 modules['./view/ss.vue']() 来加载模块\nconst modules = import.meta.glob('./views/*.vue')\n\n\nconst router = createRouter({\n\t// 路由的模式\n\t// hash路由模式和history路由模式。\n\t// hash模式浏览器有#号,history没有\n  history: createWebHashHistory(),\n  // 路由\n  routes: [{path,\n  // 三种导入方式,推荐第三种\n  component:s.vue,\n  \n  component:()=>import('../*.vue*'),\n  \n  component:()=>modules['./view/ss.vue'](),\n    \n  ,name,children,redirect}],\n  scrollBehavior (to, from, savedPosition) {\n    // return 期望滚动到哪个的位置\n  }\n})\n// 导出router\nexport default router\n```\n\n在main.ts种挂载\n```typescript\n// @是./src的别名 vite提供的别名,在这个项目中都可以使用@\n// 导入router\nimport router from '@/router'\n// 挂载\ncreateApp(App).use(router).mount('#app')\n```\n\n 路由的跳转\n ```vue\n<!-- 类似a标签,点击后会路由跳转,不过不刷新浏览器-->\n<!--  -->\n<!-- 其中to可以是跳转的路由path,也可以是对象 -->\n\n\n <router-link tag=\"div\" to=\"/\">跳转a</router-link>\n <router-link tag=\"div\" :to=\"{name:'login'}\">跳转a</router-link>\n<!-- a标签跳转,有弊端,会刷新浏览器-->\n <a href='/login'>ss</a>\n <!-- 路由匹配到的组件将渲染在这里 -->\n <router-view></router-view>\n<!-- 编程的方式跳转-->\n```\n```typescript\nimport { useRouter } from 'vue-router'\nconst router = useRouter()\nrouter.push('/login')\nrouter.push({name:'login'})\nrouter.push({path:'/login'})\n// 替换原有组件但是不会留下history\nrouter.replace('/main')\n// history 的使用\n// 前进一条history\nrouter.go(1)\n// 后退一条history\nrouter.back()\n\n```\n路由间参数的传递\n```typescript\nimport useRouter from 'vue-router'\nrouter=useRouter()\n\n//通过query传参\n// 参数会在地址栏\nrouter.push({\n\tpath:'/login',\n\tquery:item\n})\n\n// 接收参数\nimport useRoute from 'vue-router'\nconst route=useRoute()\nroute.query.[参数]\n\n// 通过Params传参\nrouter.push({\n\tpath:'/login',\n\tparams:item\n})\n// 通过params接收\nroute.params.[参数]\n\n// 动态传参\n// 路由\n {   \n   //动态路由参数    \n  path:\"/login/:id\",\n  name:\"login\",\n\tcomponent:()=> import('../components/login.vue')\n   }\n   // 在跳转后params携带的参数id会被记录\n```\n区别:\n1. query 传参配置的是 path，而 params 传参配置的是name，在 params中配置 path 无效\n2. query 在路由配置不需要设置参数，而 params 必须设置\n3. query 传递的参数会显示在地址栏中\n4. params传参刷新会无效，但是 query 会保存传递过来的值，刷新不变 ;\n## 同一个路由多个组件\n路由组件中使用components\n视图的默认名称也是 `default`\n```typescript\ncomponents: {\n        default: () => import('../components/layout/menu.vue'),\n        header: () => import('../components/layout/header.vue'),\n        content: () => import('../components/layout/content.vue'),\n}\n// router-view 通过name对应组件\n <router-view></router-view> \n <router-view name=\"header\"></router-view> \n <router-view name=\"content\"></router-view>\n\n```\n## 重定向\n路由的配置中使用`redirect`, 下面的路由地址栏中显示`/` ,内容为`/user`\n```typescript\n   {\n    \n    path:'/',\n     component:()=> import('../components/root.vue'),\n     // 字符串\n     redirect:'/user1',\n     // 对象\n     redirect:{\n       path:'/user'\n    }\n    // 函数 可以传递参数\n      redirect:(to)=>{\n       return {\n       path:'/user'\n       query:to.query\n    }\n    }\n    \n}\n```\n## 别名alias\n给路由添加别名,可以实现不同的名称访问相同的组件\n```typescript\nconst router=[{\npath:'/'\nalias:['/root','/root2'],\ncomponent:()=>import('../components/root.vue')\n}]\n```\n","source":"_posts/学习笔记/前端/router.md","raw":"---\ntitle: router\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 导入创建路由\n通过createRouter()方法\n```Typescript\nimport s from '../views/s.vue'\n\n// vite的动态匹配,这个将匹配符合规则的模块\n// 匹配到的文件默认是懒加载的，通过动态导入实现，并会在构建时分离为独立的 chunk\n// 通过 modules['./view/ss.vue']() 来加载模块\nconst modules = import.meta.glob('./views/*.vue')\n\n\nconst router = createRouter({\n\t// 路由的模式\n\t// hash路由模式和history路由模式。\n\t// hash模式浏览器有#号,history没有\n  history: createWebHashHistory(),\n  // 路由\n  routes: [{path,\n  // 三种导入方式,推荐第三种\n  component:s.vue,\n  \n  component:()=>import('../*.vue*'),\n  \n  component:()=>modules['./view/ss.vue'](),\n    \n  ,name,children,redirect}],\n  scrollBehavior (to, from, savedPosition) {\n    // return 期望滚动到哪个的位置\n  }\n})\n// 导出router\nexport default router\n```\n\n在main.ts种挂载\n```typescript\n// @是./src的别名 vite提供的别名,在这个项目中都可以使用@\n// 导入router\nimport router from '@/router'\n// 挂载\ncreateApp(App).use(router).mount('#app')\n```\n\n 路由的跳转\n ```vue\n<!-- 类似a标签,点击后会路由跳转,不过不刷新浏览器-->\n<!--  -->\n<!-- 其中to可以是跳转的路由path,也可以是对象 -->\n\n\n <router-link tag=\"div\" to=\"/\">跳转a</router-link>\n <router-link tag=\"div\" :to=\"{name:'login'}\">跳转a</router-link>\n<!-- a标签跳转,有弊端,会刷新浏览器-->\n <a href='/login'>ss</a>\n <!-- 路由匹配到的组件将渲染在这里 -->\n <router-view></router-view>\n<!-- 编程的方式跳转-->\n```\n```typescript\nimport { useRouter } from 'vue-router'\nconst router = useRouter()\nrouter.push('/login')\nrouter.push({name:'login'})\nrouter.push({path:'/login'})\n// 替换原有组件但是不会留下history\nrouter.replace('/main')\n// history 的使用\n// 前进一条history\nrouter.go(1)\n// 后退一条history\nrouter.back()\n\n```\n路由间参数的传递\n```typescript\nimport useRouter from 'vue-router'\nrouter=useRouter()\n\n//通过query传参\n// 参数会在地址栏\nrouter.push({\n\tpath:'/login',\n\tquery:item\n})\n\n// 接收参数\nimport useRoute from 'vue-router'\nconst route=useRoute()\nroute.query.[参数]\n\n// 通过Params传参\nrouter.push({\n\tpath:'/login',\n\tparams:item\n})\n// 通过params接收\nroute.params.[参数]\n\n// 动态传参\n// 路由\n {   \n   //动态路由参数    \n  path:\"/login/:id\",\n  name:\"login\",\n\tcomponent:()=> import('../components/login.vue')\n   }\n   // 在跳转后params携带的参数id会被记录\n```\n区别:\n1. query 传参配置的是 path，而 params 传参配置的是name，在 params中配置 path 无效\n2. query 在路由配置不需要设置参数，而 params 必须设置\n3. query 传递的参数会显示在地址栏中\n4. params传参刷新会无效，但是 query 会保存传递过来的值，刷新不变 ;\n## 同一个路由多个组件\n路由组件中使用components\n视图的默认名称也是 `default`\n```typescript\ncomponents: {\n        default: () => import('../components/layout/menu.vue'),\n        header: () => import('../components/layout/header.vue'),\n        content: () => import('../components/layout/content.vue'),\n}\n// router-view 通过name对应组件\n <router-view></router-view> \n <router-view name=\"header\"></router-view> \n <router-view name=\"content\"></router-view>\n\n```\n## 重定向\n路由的配置中使用`redirect`, 下面的路由地址栏中显示`/` ,内容为`/user`\n```typescript\n   {\n    \n    path:'/',\n     component:()=> import('../components/root.vue'),\n     // 字符串\n     redirect:'/user1',\n     // 对象\n     redirect:{\n       path:'/user'\n    }\n    // 函数 可以传递参数\n      redirect:(to)=>{\n       return {\n       path:'/user'\n       query:to.query\n    }\n    }\n    \n}\n```\n## 别名alias\n给路由添加别名,可以实现不同的名称访问相同的组件\n```typescript\nconst router=[{\npath:'/'\nalias:['/root','/root2'],\ncomponent:()=>import('../components/root.vue')\n}]\n```\n","slug":"学习笔记/前端/router","published":1,"updated":"2023-05-19T14:07:31.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oat001bwwvngxydcljq","content":"<h2 id=\"导入创建路由\"><a href=\"#导入创建路由\" class=\"headerlink\" title=\"导入创建路由\"></a>导入创建路由</h2><p>通过createRouter()方法</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> s <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../views/s.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vite的动态匹配,这个将匹配符合规则的模块</span></span><br><span class=\"line\"><span class=\"comment\">// 匹配到的文件默认是懒加载的，通过动态导入实现，并会在构建时分离为独立的 chunk</span></span><br><span class=\"line\"><span class=\"comment\">// 通过 modules[&#x27;./view/ss.vue&#x27;]() 来加载模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> modules = <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"title function_\">glob</span>(<span class=\"string\">&#x27;./views/*.vue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 路由的模式</span></span><br><span class=\"line\">\t<span class=\"comment\">// hash路由模式和history路由模式。</span></span><br><span class=\"line\">\t<span class=\"comment\">// hash模式浏览器有#号,history没有</span></span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHashHistory</span>(),</span><br><span class=\"line\">  <span class=\"comment\">// 路由</span></span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [&#123;path,</span><br><span class=\"line\">  <span class=\"comment\">// 三种导入方式,推荐第三种</span></span><br><span class=\"line\">  <span class=\"attr\">component</span>:s.<span class=\"property\">vue</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span><span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../*.vue*&#x27;</span>),</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span>modules[<span class=\"string\">&#x27;./view/ss.vue&#x27;</span>](),</span><br><span class=\"line\">    </span><br><span class=\"line\">  ,name,children,redirect&#125;],</span><br><span class=\"line\">  scrollBehavior (to, <span class=\"keyword\">from</span>, savedPosition) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// return 期望滚动到哪个的位置</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 导出router</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure>\n\n<p>在main.ts种挂载</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @是./src的别名 vite提供的别名,在这个项目中都可以使用@</span></span><br><span class=\"line\"><span class=\"comment\">// 导入router</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/router&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 挂载</span></span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>).<span class=\"title function_\">use</span>(router).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p> 路由的跳转<br> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 类似a标签,点击后会路由跳转,不过不刷新浏览器--&gt;</span><br><span class=\"line\">&lt;!--  --&gt;</span><br><span class=\"line\">&lt;!-- 其中to可以是跳转的路由path,也可以是对象 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> &lt;router-link tag=&quot;div&quot; to=&quot;/&quot;&gt;跳转a&lt;/router-link&gt;</span><br><span class=\"line\"> &lt;router-link tag=&quot;div&quot; :to=&quot;&#123;name:&#x27;login&#x27;&#125;&quot;&gt;跳转a&lt;/router-link&gt;</span><br><span class=\"line\">&lt;!-- a标签跳转,有弊端,会刷新浏览器--&gt;</span><br><span class=\"line\"> &lt;a href=&#x27;/login&#x27;&gt;ss&lt;/a&gt;</span><br><span class=\"line\"> &lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span><br><span class=\"line\"> &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class=\"line\">&lt;!-- 编程的方式跳转--&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRouter &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">useRouter</span>()</span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;/login&#x27;</span>)</span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;login&#x27;</span>&#125;)</span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(&#123;<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/login&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 替换原有组件但是不会留下history</span></span><br><span class=\"line\">router.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;/main&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// history 的使用</span></span><br><span class=\"line\"><span class=\"comment\">// 前进一条history</span></span><br><span class=\"line\">router.<span class=\"title function_\">go</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"comment\">// 后退一条history</span></span><br><span class=\"line\">router.<span class=\"title function_\">back</span>()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>路由间参数的传递</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> useRouter <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\">router=<span class=\"title function_\">useRouter</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//通过query传参</span></span><br><span class=\"line\"><span class=\"comment\">// 参数会在地址栏</span></span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">query</span>:item</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接收参数</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> useRoute <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> route=<span class=\"title function_\">useRoute</span>()</span><br><span class=\"line\">route.<span class=\"property\">query</span>.[参数]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过Params传参</span></span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">params</span>:item</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 通过params接收</span></span><br><span class=\"line\">route.<span class=\"property\">params</span>.[参数]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 动态传参</span></span><br><span class=\"line\"><span class=\"comment\">// 路由</span></span><br><span class=\"line\"> &#123;   </span><br><span class=\"line\">   <span class=\"comment\">//动态路由参数    </span></span><br><span class=\"line\">  <span class=\"attr\">path</span>:<span class=\"string\">&quot;/login/:id&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>:<span class=\"string\">&quot;login&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/login.vue&#x27;</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">// 在跳转后params携带的参数id会被记录</span></span><br></pre></td></tr></table></figure>\n<p>区别:</p>\n<ol>\n<li>query 传参配置的是 path，而 params 传参配置的是name，在 params中配置 path 无效</li>\n<li>query 在路由配置不需要设置参数，而 params 必须设置</li>\n<li>query 传递的参数会显示在地址栏中</li>\n<li>params传参刷新会无效，但是 query 会保存传递过来的值，刷新不变 ;</li>\n</ol>\n<h2 id=\"同一个路由多个组件\"><a href=\"#同一个路由多个组件\" class=\"headerlink\" title=\"同一个路由多个组件\"></a>同一个路由多个组件</h2><p>路由组件中使用components<br>视图的默认名称也是 <code>default</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/layout/menu.vue&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">header</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/layout/header.vue&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">content</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/layout/content.vue&#x27;</span>),</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// router-view 通过name对应组件</span></span><br><span class=\"line\"> &lt;router-view&gt;&lt;/router-view&gt; </span><br><span class=\"line\"> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span> </span><br><span class=\"line\"> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h2><p>路由的配置中使用<code>redirect</code>, 下面的路由地址栏中显示<code>/</code> ,内容为<code>/user</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">     <span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/root.vue&#x27;</span>),</span><br><span class=\"line\">     <span class=\"comment\">// 字符串</span></span><br><span class=\"line\">     <span class=\"attr\">redirect</span>:<span class=\"string\">&#x27;/user1&#x27;</span>,</span><br><span class=\"line\">     <span class=\"comment\">// 对象</span></span><br><span class=\"line\">     <span class=\"attr\">redirect</span>:&#123;</span><br><span class=\"line\">       <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/user&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 函数 可以传递参数</span></span><br><span class=\"line\">      <span class=\"attr\">redirect</span>:<span class=\"function\">(<span class=\"params\">to</span>)=&gt;</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">       <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/user&#x27;</span></span><br><span class=\"line\">       <span class=\"attr\">query</span>:to.<span class=\"property\">query</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"别名alias\"><a href=\"#别名alias\" class=\"headerlink\" title=\"别名alias\"></a>别名alias</h2><p>给路由添加别名,可以实现不同的名称访问相同的组件</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router=[&#123;</span><br><span class=\"line\"><span class=\"attr\">path</span>:<span class=\"string\">&#x27;/&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">alias</span>:[<span class=\"string\">&#x27;/root&#x27;</span>,<span class=\"string\">&#x27;/root2&#x27;</span>],</span><br><span class=\"line\"><span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span><span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/root.vue&#x27;</span>)</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"导入创建路由\"><a href=\"#导入创建路由\" class=\"headerlink\" title=\"导入创建路由\"></a>导入创建路由</h2><p>通过createRouter()方法</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> s <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../views/s.vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vite的动态匹配,这个将匹配符合规则的模块</span></span><br><span class=\"line\"><span class=\"comment\">// 匹配到的文件默认是懒加载的，通过动态导入实现，并会在构建时分离为独立的 chunk</span></span><br><span class=\"line\"><span class=\"comment\">// 通过 modules[&#x27;./view/ss.vue&#x27;]() 来加载模块</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> modules = <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"title function_\">glob</span>(<span class=\"string\">&#x27;./views/*.vue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 路由的模式</span></span><br><span class=\"line\">\t<span class=\"comment\">// hash路由模式和history路由模式。</span></span><br><span class=\"line\">\t<span class=\"comment\">// hash模式浏览器有#号,history没有</span></span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHashHistory</span>(),</span><br><span class=\"line\">  <span class=\"comment\">// 路由</span></span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [&#123;path,</span><br><span class=\"line\">  <span class=\"comment\">// 三种导入方式,推荐第三种</span></span><br><span class=\"line\">  <span class=\"attr\">component</span>:s.<span class=\"property\">vue</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span><span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../*.vue*&#x27;</span>),</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span>modules[<span class=\"string\">&#x27;./view/ss.vue&#x27;</span>](),</span><br><span class=\"line\">    </span><br><span class=\"line\">  ,name,children,redirect&#125;],</span><br><span class=\"line\">  scrollBehavior (to, <span class=\"keyword\">from</span>, savedPosition) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// return 期望滚动到哪个的位置</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 导出router</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router</span><br></pre></td></tr></table></figure>\n\n<p>在main.ts种挂载</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// @是./src的别名 vite提供的别名,在这个项目中都可以使用@</span></span><br><span class=\"line\"><span class=\"comment\">// 导入router</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/router&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 挂载</span></span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>).<span class=\"title function_\">use</span>(router).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p> 路由的跳转<br> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 类似a标签,点击后会路由跳转,不过不刷新浏览器--&gt;</span><br><span class=\"line\">&lt;!--  --&gt;</span><br><span class=\"line\">&lt;!-- 其中to可以是跳转的路由path,也可以是对象 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> &lt;router-link tag=&quot;div&quot; to=&quot;/&quot;&gt;跳转a&lt;/router-link&gt;</span><br><span class=\"line\"> &lt;router-link tag=&quot;div&quot; :to=&quot;&#123;name:&#x27;login&#x27;&#125;&quot;&gt;跳转a&lt;/router-link&gt;</span><br><span class=\"line\">&lt;!-- a标签跳转,有弊端,会刷新浏览器--&gt;</span><br><span class=\"line\"> &lt;a href=&#x27;/login&#x27;&gt;ss&lt;/a&gt;</span><br><span class=\"line\"> &lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span><br><span class=\"line\"> &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class=\"line\">&lt;!-- 编程的方式跳转--&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useRouter &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">useRouter</span>()</span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;/login&#x27;</span>)</span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;login&#x27;</span>&#125;)</span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(&#123;<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/login&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 替换原有组件但是不会留下history</span></span><br><span class=\"line\">router.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;/main&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// history 的使用</span></span><br><span class=\"line\"><span class=\"comment\">// 前进一条history</span></span><br><span class=\"line\">router.<span class=\"title function_\">go</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"comment\">// 后退一条history</span></span><br><span class=\"line\">router.<span class=\"title function_\">back</span>()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>路由间参数的传递</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> useRouter <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\">router=<span class=\"title function_\">useRouter</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//通过query传参</span></span><br><span class=\"line\"><span class=\"comment\">// 参数会在地址栏</span></span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">query</span>:item</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 接收参数</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> useRoute <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> route=<span class=\"title function_\">useRoute</span>()</span><br><span class=\"line\">route.<span class=\"property\">query</span>.[参数]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过Params传参</span></span><br><span class=\"line\">router.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">params</span>:item</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 通过params接收</span></span><br><span class=\"line\">route.<span class=\"property\">params</span>.[参数]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 动态传参</span></span><br><span class=\"line\"><span class=\"comment\">// 路由</span></span><br><span class=\"line\"> &#123;   </span><br><span class=\"line\">   <span class=\"comment\">//动态路由参数    </span></span><br><span class=\"line\">  <span class=\"attr\">path</span>:<span class=\"string\">&quot;/login/:id&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">name</span>:<span class=\"string\">&quot;login&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/login.vue&#x27;</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">// 在跳转后params携带的参数id会被记录</span></span><br></pre></td></tr></table></figure>\n<p>区别:</p>\n<ol>\n<li>query 传参配置的是 path，而 params 传参配置的是name，在 params中配置 path 无效</li>\n<li>query 在路由配置不需要设置参数，而 params 必须设置</li>\n<li>query 传递的参数会显示在地址栏中</li>\n<li>params传参刷新会无效，但是 query 会保存传递过来的值，刷新不变 ;</li>\n</ol>\n<h2 id=\"同一个路由多个组件\"><a href=\"#同一个路由多个组件\" class=\"headerlink\" title=\"同一个路由多个组件\"></a>同一个路由多个组件</h2><p>路由组件中使用components<br>视图的默认名称也是 <code>default</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/layout/menu.vue&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">header</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/layout/header.vue&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">content</span>: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/layout/content.vue&#x27;</span>),</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// router-view 通过name对应组件</span></span><br><span class=\"line\"> &lt;router-view&gt;&lt;/router-view&gt; </span><br><span class=\"line\"> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;header&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span> </span><br><span class=\"line\"> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h2><p>路由的配置中使用<code>redirect</code>, 下面的路由地址栏中显示<code>/</code> ,内容为<code>/user</code></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">     <span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/root.vue&#x27;</span>),</span><br><span class=\"line\">     <span class=\"comment\">// 字符串</span></span><br><span class=\"line\">     <span class=\"attr\">redirect</span>:<span class=\"string\">&#x27;/user1&#x27;</span>,</span><br><span class=\"line\">     <span class=\"comment\">// 对象</span></span><br><span class=\"line\">     <span class=\"attr\">redirect</span>:&#123;</span><br><span class=\"line\">       <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/user&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 函数 可以传递参数</span></span><br><span class=\"line\">      <span class=\"attr\">redirect</span>:<span class=\"function\">(<span class=\"params\">to</span>)=&gt;</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">       <span class=\"attr\">path</span>:<span class=\"string\">&#x27;/user&#x27;</span></span><br><span class=\"line\">       <span class=\"attr\">query</span>:to.<span class=\"property\">query</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"别名alias\"><a href=\"#别名alias\" class=\"headerlink\" title=\"别名alias\"></a>别名alias</h2><p>给路由添加别名,可以实现不同的名称访问相同的组件</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router=[&#123;</span><br><span class=\"line\"><span class=\"attr\">path</span>:<span class=\"string\">&#x27;/&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">alias</span>:[<span class=\"string\">&#x27;/root&#x27;</span>,<span class=\"string\">&#x27;/root2&#x27;</span>],</span><br><span class=\"line\"><span class=\"attr\">component</span>:<span class=\"function\">()=&gt;</span><span class=\"keyword\">import</span>(<span class=\"string\">&#x27;../components/root.vue&#x27;</span>)</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n"},{"title":"scss","date":"2023-05-05T13:30:42.000Z","_content":"## 在vite项目中导入\n```shell\n# 添加预处理的依赖\nnpm add -D sass\n```\n```vue\n<!-- 在单文件组件中打开设置-->\n<style lang=\"scss\" scoped>\n</style>\n\n```\n```typescript\n// 在vite的配置中添加配置\n// 以便在全局使用定义的scss变量\ncss: {\n    preprocessorOptions: {\n      //define global scss variable\n      scss: {\n        additionalData: `@import \"@/style/_constant.scss\";`\n      }\n    }\n  }\n```\n","source":"_posts/学习笔记/前端/scss.md","raw":"---\ntitle: scss\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 在vite项目中导入\n```shell\n# 添加预处理的依赖\nnpm add -D sass\n```\n```vue\n<!-- 在单文件组件中打开设置-->\n<style lang=\"scss\" scoped>\n</style>\n\n```\n```typescript\n// 在vite的配置中添加配置\n// 以便在全局使用定义的scss变量\ncss: {\n    preprocessorOptions: {\n      //define global scss variable\n      scss: {\n        additionalData: `@import \"@/style/_constant.scss\";`\n      }\n    }\n  }\n```\n","slug":"学习笔记/前端/scss","published":1,"updated":"2023-05-19T14:07:31.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oat001cwwvnc5qe8lff","content":"<h2 id=\"在vite项目中导入\"><a href=\"#在vite项目中导入\" class=\"headerlink\" title=\"在vite项目中导入\"></a>在vite项目中导入</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加预处理的依赖</span></span><br><span class=\"line\">npm add -D sass</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 在单文件组件中打开设置--&gt;</span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在vite的配置中添加配置</span></span><br><span class=\"line\"><span class=\"comment\">// 以便在全局使用定义的scss变量</span></span><br><span class=\"line\"><span class=\"attr\">css</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">preprocessorOptions</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">//define global scss variable</span></span><br><span class=\"line\">      <span class=\"attr\">scss</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">additionalData</span>: <span class=\"string\">`@import &quot;@/style/_constant.scss&quot;;`</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"在vite项目中导入\"><a href=\"#在vite项目中导入\" class=\"headerlink\" title=\"在vite项目中导入\"></a>在vite项目中导入</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加预处理的依赖</span></span><br><span class=\"line\">npm add -D sass</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 在单文件组件中打开设置--&gt;</span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在vite的配置中添加配置</span></span><br><span class=\"line\"><span class=\"comment\">// 以便在全局使用定义的scss变量</span></span><br><span class=\"line\"><span class=\"attr\">css</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">preprocessorOptions</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">//define global scss variable</span></span><br><span class=\"line\">      <span class=\"attr\">scss</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">additionalData</span>: <span class=\"string\">`@import &quot;@/style/_constant.scss&quot;;`</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"typescript","date":"2023-05-05T13:30:42.000Z","_content":"## ts的配置\n```json\n\"compilerOptions\": {\n  \"incremental\": true, // TS编译器在第一次编译之后会生成一个存储编译信息的文件，第二次编译会在第一次的基础上进行增量编译，可以提高编译的速度\n  \"tsBuildInfoFile\": \"./buildFile\", // 增量编译文件的存储位置\n  \"diagnostics\": true, // 打印诊断信息 \n  \"target\": \"ES5\", // 目标语言的版本\n  \"module\": \"CommonJS\", // 生成代码的模板标准\n  \"outFile\": \"./app.js\", // 将多个相互依赖的文件生成一个文件，可以用在AMD模块中，即开启时应设置\"module\": \"AMD\",\n  \"lib\": [\"DOM\", \"ES2015\", \"ScriptHost\", \"ES2019.Array\"], // TS需要引用的库，即声明文件，es5 默认引用dom、es5、scripthost,如需要使用es的高级版本特性，通常都需要配置，如es8的数组新特性需要引入\"ES2019.Array\",\n  \"allowJS\": true, // 允许编译器编译JS，JSX文件\n  \"checkJs\": true, // 允许在JS文件中报错，通常与allowJS一起使用\n  \"outDir\": \"./dist\", // 指定输出目录\n  \"rootDir\": \"./\", // 指定输出文件目录(用于输出)，用于控制输出目录结构\n  \"declaration\": true, // 生成声明文件，开启后会自动生成声明文件\n  \"declarationDir\": \"./file\", // 指定生成声明文件存放目录\n  \"emitDeclarationOnly\": true, // 只生成声明文件，而不会生成js文件\n  \"sourceMap\": true, // 生成目标文件的sourceMap文件\n  \"inlineSourceMap\": true, // 生成目标文件的inline SourceMap，inline SourceMap会包含在生成的js文件中\n  \"declarationMap\": true, // 为声明文件生成sourceMap\n  \"typeRoots\": [], // 声明文件目录，默认时node_modules/@types\n  \"types\": [], // 加载的声明文件包\n  \"removeComments\":true, // 删除注释 \n  \"noEmit\": true, // 不输出文件,即编译后不会生成任何js文件\n  \"noEmitOnError\": true, // 发送错误时不输出任何文件\n  \"noEmitHelpers\": true, // 不生成helper函数，减小体积，需要额外安装，常配合importHelpers一起使用\n  \"importHelpers\": true, // 通过tslib引入helper函数，文件必须是模块\n  \"downlevelIteration\": true, // 降级遍历器实现，如果目标源是es3/5，那么遍历器会有降级的实现\n  \"strict\": true, // 开启所有严格的类型检查\n  \"alwaysStrict\": true, // 在代码中注入'use strict'\n  \"noImplicitAny\": true, // 不允许隐式的any类型\n  \"strictNullChecks\": true, // 不允许把null、undefined赋值给其他类型的变量\n  \"strictFunctionTypes\": true, // 不允许函数参数双向协变\n  \"strictPropertyInitialization\": true, // 类的实例属性必须初始化\n  \"strictBindCallApply\": true, // 严格的bind/call/apply检查\n  \"noImplicitThis\": true, // 不允许this有隐式的any类型\n  \"noUnusedLocals\": true, // 检查只声明、未使用的局部变量(只提示不报错)\n  \"noUnusedParameters\": true, // 检查未使用的函数参数(只提示不报错)\n  \"noFallthroughCasesInSwitch\": true, // 防止switch语句贯穿(即如果没有break语句后面不会执行)\n  \"noImplicitReturns\": true, //每个分支都会有返回值\n  \"esModuleInterop\": true, // 允许export=导出，由import from 导入\n  \"allowUmdGlobalAccess\": true, // 允许在模块中全局变量的方式访问umd模块\n  \"moduleResolution\": \"node\", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入\n  \"baseUrl\": \"./\", // 解析非相对模块的基地址，默认是当前目录\n  \"paths\": { // 路径映射，相对于baseUrl\n    // 如使用jq时不想使用默认版本，而需要手动指定版本，可进行如下配置\n    \"jquery\": [\"node_modules/jquery/dist/jquery.min.js\"]\n  },\n  \"rootDirs\": [\"src\",\"out\"], // 将多个目录放在一个虚拟目录下，用于运行时，即编译后引入文件的位置可能发生变化，这也设置可以虚拟src和out在同一个目录下，不用再去改变路径也不会报错\n  \"listEmittedFiles\": true, // 打印输出文件\n  \"listFiles\": true// 打印编译的文件(包括引用的声明文件)\n}\n \n// 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件）\n\"include\": [\n   \"src/**/*\"\n],\n// 指定一个排除列表（include的反向操作）\n \"exclude\": [\n   \"demo.ts\"\n],\n// 指定哪些文件使用该配置（属于手动一个个指定文件）\n \"files\": [\n   \"demo.ts\"\n]\n```","source":"_posts/学习笔记/前端/typescript.md","raw":"---\ntitle: typescript\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## ts的配置\n```json\n\"compilerOptions\": {\n  \"incremental\": true, // TS编译器在第一次编译之后会生成一个存储编译信息的文件，第二次编译会在第一次的基础上进行增量编译，可以提高编译的速度\n  \"tsBuildInfoFile\": \"./buildFile\", // 增量编译文件的存储位置\n  \"diagnostics\": true, // 打印诊断信息 \n  \"target\": \"ES5\", // 目标语言的版本\n  \"module\": \"CommonJS\", // 生成代码的模板标准\n  \"outFile\": \"./app.js\", // 将多个相互依赖的文件生成一个文件，可以用在AMD模块中，即开启时应设置\"module\": \"AMD\",\n  \"lib\": [\"DOM\", \"ES2015\", \"ScriptHost\", \"ES2019.Array\"], // TS需要引用的库，即声明文件，es5 默认引用dom、es5、scripthost,如需要使用es的高级版本特性，通常都需要配置，如es8的数组新特性需要引入\"ES2019.Array\",\n  \"allowJS\": true, // 允许编译器编译JS，JSX文件\n  \"checkJs\": true, // 允许在JS文件中报错，通常与allowJS一起使用\n  \"outDir\": \"./dist\", // 指定输出目录\n  \"rootDir\": \"./\", // 指定输出文件目录(用于输出)，用于控制输出目录结构\n  \"declaration\": true, // 生成声明文件，开启后会自动生成声明文件\n  \"declarationDir\": \"./file\", // 指定生成声明文件存放目录\n  \"emitDeclarationOnly\": true, // 只生成声明文件，而不会生成js文件\n  \"sourceMap\": true, // 生成目标文件的sourceMap文件\n  \"inlineSourceMap\": true, // 生成目标文件的inline SourceMap，inline SourceMap会包含在生成的js文件中\n  \"declarationMap\": true, // 为声明文件生成sourceMap\n  \"typeRoots\": [], // 声明文件目录，默认时node_modules/@types\n  \"types\": [], // 加载的声明文件包\n  \"removeComments\":true, // 删除注释 \n  \"noEmit\": true, // 不输出文件,即编译后不会生成任何js文件\n  \"noEmitOnError\": true, // 发送错误时不输出任何文件\n  \"noEmitHelpers\": true, // 不生成helper函数，减小体积，需要额外安装，常配合importHelpers一起使用\n  \"importHelpers\": true, // 通过tslib引入helper函数，文件必须是模块\n  \"downlevelIteration\": true, // 降级遍历器实现，如果目标源是es3/5，那么遍历器会有降级的实现\n  \"strict\": true, // 开启所有严格的类型检查\n  \"alwaysStrict\": true, // 在代码中注入'use strict'\n  \"noImplicitAny\": true, // 不允许隐式的any类型\n  \"strictNullChecks\": true, // 不允许把null、undefined赋值给其他类型的变量\n  \"strictFunctionTypes\": true, // 不允许函数参数双向协变\n  \"strictPropertyInitialization\": true, // 类的实例属性必须初始化\n  \"strictBindCallApply\": true, // 严格的bind/call/apply检查\n  \"noImplicitThis\": true, // 不允许this有隐式的any类型\n  \"noUnusedLocals\": true, // 检查只声明、未使用的局部变量(只提示不报错)\n  \"noUnusedParameters\": true, // 检查未使用的函数参数(只提示不报错)\n  \"noFallthroughCasesInSwitch\": true, // 防止switch语句贯穿(即如果没有break语句后面不会执行)\n  \"noImplicitReturns\": true, //每个分支都会有返回值\n  \"esModuleInterop\": true, // 允许export=导出，由import from 导入\n  \"allowUmdGlobalAccess\": true, // 允许在模块中全局变量的方式访问umd模块\n  \"moduleResolution\": \"node\", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入\n  \"baseUrl\": \"./\", // 解析非相对模块的基地址，默认是当前目录\n  \"paths\": { // 路径映射，相对于baseUrl\n    // 如使用jq时不想使用默认版本，而需要手动指定版本，可进行如下配置\n    \"jquery\": [\"node_modules/jquery/dist/jquery.min.js\"]\n  },\n  \"rootDirs\": [\"src\",\"out\"], // 将多个目录放在一个虚拟目录下，用于运行时，即编译后引入文件的位置可能发生变化，这也设置可以虚拟src和out在同一个目录下，不用再去改变路径也不会报错\n  \"listEmittedFiles\": true, // 打印输出文件\n  \"listFiles\": true// 打印编译的文件(包括引用的声明文件)\n}\n \n// 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件）\n\"include\": [\n   \"src/**/*\"\n],\n// 指定一个排除列表（include的反向操作）\n \"exclude\": [\n   \"demo.ts\"\n],\n// 指定哪些文件使用该配置（属于手动一个个指定文件）\n \"files\": [\n   \"demo.ts\"\n]\n```","slug":"学习笔记/前端/typescript","published":1,"updated":"2023-05-19T14:07:31.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oau001dwwvnb2b36wls","content":"<h2 id=\"ts的配置\"><a href=\"#ts的配置\" class=\"headerlink\" title=\"ts的配置\"></a>ts的配置</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;compilerOptions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;incremental&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// TS编译器在第一次编译之后会生成一个存储编译信息的文件，第二次编译会在第一次的基础上进行增量编译，可以提高编译的速度</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;tsBuildInfoFile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./buildFile&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 增量编译文件的存储位置</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;diagnostics&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 打印诊断信息 </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;target&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;ES5&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 目标语言的版本</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;module&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;CommonJS&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 生成代码的模板标准</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;outFile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./app.js&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 将多个相互依赖的文件生成一个文件，可以用在AMD模块中，即开启时应设置&quot;module&quot;: &quot;AMD&quot;,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;lib&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;DOM&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ES2015&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ScriptHost&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ES2019.Array&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// TS需要引用的库，即声明文件，es5 默认引用dom、es5、scripthost,如需要使用es的高级版本特性，通常都需要配置，如es8的数组新特性需要引入&quot;ES2019.Array&quot;,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;allowJS&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 允许编译器编译JS，JSX文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;checkJs&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 允许在JS文件中报错，通常与allowJS一起使用</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;outDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./dist&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 指定输出目录</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;rootDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 指定输出文件目录(用于输出)，用于控制输出目录结构</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;declaration&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 生成声明文件，开启后会自动生成声明文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;declarationDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./file&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 指定生成声明文件存放目录</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;emitDeclarationOnly&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 只生成声明文件，而不会生成js文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;sourceMap&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 生成目标文件的sourceMap文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;inlineSourceMap&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 生成目标文件的inline SourceMap，inline SourceMap会包含在生成的js文件中</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;declarationMap&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 为声明文件生成sourceMap</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;typeRoots&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 声明文件目录，默认时node_modules/@types</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;types&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 加载的声明文件包</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;removeComments&quot;</span><span class=\"punctuation\">:</span><span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 删除注释 </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noEmit&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不输出文件,即编译后不会生成任何js文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noEmitOnError&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 发送错误时不输出任何文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noEmitHelpers&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不生成helper函数，减小体积，需要额外安装，常配合importHelpers一起使用</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;importHelpers&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 通过tslib引入helper函数，文件必须是模块</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;downlevelIteration&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 降级遍历器实现，如果目标源是es3/5，那么遍历器会有降级的实现</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strict&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 开启所有严格的类型检查</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;alwaysStrict&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 在代码中注入&#x27;use strict&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noImplicitAny&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不允许隐式的any类型</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strictNullChecks&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不允许把null、undefined赋值给其他类型的变量</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strictFunctionTypes&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不允许函数参数双向协变</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strictPropertyInitialization&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 类的实例属性必须初始化</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strictBindCallApply&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 严格的bind/call/apply检查</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noImplicitThis&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不允许this有隐式的any类型</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noUnusedLocals&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 检查只声明、未使用的局部变量(只提示不报错)</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noUnusedParameters&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 检查未使用的函数参数(只提示不报错)</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noFallthroughCasesInSwitch&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 防止switch语句贯穿(即如果没有break语句后面不会执行)</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noImplicitReturns&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">//每个分支都会有返回值</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;esModuleInterop&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 允许export=导出，由import from 导入</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;allowUmdGlobalAccess&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 允许在模块中全局变量的方式访问umd模块</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;moduleResolution&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;node&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 模块解析策略，ts默认用node的解析策略，即相对的方式导入</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;baseUrl&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 解析非相对模块的基地址，默认是当前目录</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;paths&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"comment\">// 路径映射，相对于baseUrl</span></span><br><span class=\"line\">    <span class=\"comment\">// 如使用jq时不想使用默认版本，而需要手动指定版本，可进行如下配置</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;jquery&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;node_modules/jquery/dist/jquery.min.js&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;rootDirs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;src&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;out&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 将多个目录放在一个虚拟目录下，用于运行时，即编译后引入文件的位置可能发生变化，这也设置可以虚拟src和out在同一个目录下，不用再去改变路径也不会报错</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;listEmittedFiles&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 打印输出文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;listFiles&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"comment\">// 打印编译的文件(包括引用的声明文件)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件）</span></span><br><span class=\"line\"><span class=\"attr\">&quot;include&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">   <span class=\"string\">&quot;src/**/*&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"comment\">// 指定一个排除列表（include的反向操作）</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;exclude&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">   <span class=\"string\">&quot;demo.ts&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"comment\">// 指定哪些文件使用该配置（属于手动一个个指定文件）</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;files&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">   <span class=\"string\">&quot;demo.ts&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"ts的配置\"><a href=\"#ts的配置\" class=\"headerlink\" title=\"ts的配置\"></a>ts的配置</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;compilerOptions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;incremental&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// TS编译器在第一次编译之后会生成一个存储编译信息的文件，第二次编译会在第一次的基础上进行增量编译，可以提高编译的速度</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;tsBuildInfoFile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./buildFile&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 增量编译文件的存储位置</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;diagnostics&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 打印诊断信息 </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;target&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;ES5&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 目标语言的版本</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;module&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;CommonJS&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 生成代码的模板标准</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;outFile&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./app.js&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 将多个相互依赖的文件生成一个文件，可以用在AMD模块中，即开启时应设置&quot;module&quot;: &quot;AMD&quot;,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;lib&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;DOM&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ES2015&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ScriptHost&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ES2019.Array&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// TS需要引用的库，即声明文件，es5 默认引用dom、es5、scripthost,如需要使用es的高级版本特性，通常都需要配置，如es8的数组新特性需要引入&quot;ES2019.Array&quot;,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;allowJS&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 允许编译器编译JS，JSX文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;checkJs&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 允许在JS文件中报错，通常与allowJS一起使用</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;outDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./dist&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 指定输出目录</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;rootDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 指定输出文件目录(用于输出)，用于控制输出目录结构</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;declaration&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 生成声明文件，开启后会自动生成声明文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;declarationDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./file&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 指定生成声明文件存放目录</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;emitDeclarationOnly&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 只生成声明文件，而不会生成js文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;sourceMap&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 生成目标文件的sourceMap文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;inlineSourceMap&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 生成目标文件的inline SourceMap，inline SourceMap会包含在生成的js文件中</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;declarationMap&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 为声明文件生成sourceMap</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;typeRoots&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 声明文件目录，默认时node_modules/@types</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;types&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 加载的声明文件包</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;removeComments&quot;</span><span class=\"punctuation\">:</span><span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 删除注释 </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noEmit&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不输出文件,即编译后不会生成任何js文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noEmitOnError&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 发送错误时不输出任何文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noEmitHelpers&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不生成helper函数，减小体积，需要额外安装，常配合importHelpers一起使用</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;importHelpers&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 通过tslib引入helper函数，文件必须是模块</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;downlevelIteration&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 降级遍历器实现，如果目标源是es3/5，那么遍历器会有降级的实现</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strict&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 开启所有严格的类型检查</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;alwaysStrict&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 在代码中注入&#x27;use strict&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noImplicitAny&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不允许隐式的any类型</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strictNullChecks&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不允许把null、undefined赋值给其他类型的变量</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strictFunctionTypes&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不允许函数参数双向协变</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strictPropertyInitialization&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 类的实例属性必须初始化</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;strictBindCallApply&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 严格的bind/call/apply检查</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noImplicitThis&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不允许this有隐式的any类型</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noUnusedLocals&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 检查只声明、未使用的局部变量(只提示不报错)</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noUnusedParameters&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 检查未使用的函数参数(只提示不报错)</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noFallthroughCasesInSwitch&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 防止switch语句贯穿(即如果没有break语句后面不会执行)</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;noImplicitReturns&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">//每个分支都会有返回值</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;esModuleInterop&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 允许export=导出，由import from 导入</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;allowUmdGlobalAccess&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 允许在模块中全局变量的方式访问umd模块</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;moduleResolution&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;node&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 模块解析策略，ts默认用node的解析策略，即相对的方式导入</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;baseUrl&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 解析非相对模块的基地址，默认是当前目录</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;paths&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"comment\">// 路径映射，相对于baseUrl</span></span><br><span class=\"line\">    <span class=\"comment\">// 如使用jq时不想使用默认版本，而需要手动指定版本，可进行如下配置</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;jquery&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;node_modules/jquery/dist/jquery.min.js&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;rootDirs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;src&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;out&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 将多个目录放在一个虚拟目录下，用于运行时，即编译后引入文件的位置可能发生变化，这也设置可以虚拟src和out在同一个目录下，不用再去改变路径也不会报错</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;listEmittedFiles&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> <span class=\"comment\">// 打印输出文件</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;listFiles&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"comment\">// 打印编译的文件(包括引用的声明文件)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件）</span></span><br><span class=\"line\"><span class=\"attr\">&quot;include&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">   <span class=\"string\">&quot;src/**/*&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"comment\">// 指定一个排除列表（include的反向操作）</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;exclude&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">   <span class=\"string\">&quot;demo.ts&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"comment\">// 指定哪些文件使用该配置（属于手动一个个指定文件）</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;files&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">   <span class=\"string\">&quot;demo.ts&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>"},{"title":"vite","date":"2023-05-05T13:30:42.000Z","_content":"## 路径别名\n```typescript\n// 在vite配置中\n// 需要导入依赖 import { fileURLToPath, URL } from \"node:url\";\n\n resolve: {\n    alias: {\n      \"@\": fileURLToPath(new URL(\"./src\", import.meta.url)),\n    },\n  },\n```","source":"_posts/学习笔记/前端/vite.md","raw":"---\ntitle: vite\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 路径别名\n```typescript\n// 在vite配置中\n// 需要导入依赖 import { fileURLToPath, URL } from \"node:url\";\n\n resolve: {\n    alias: {\n      \"@\": fileURLToPath(new URL(\"./src\", import.meta.url)),\n    },\n  },\n```","slug":"学习笔记/前端/vite","published":1,"updated":"2023-05-19T14:07:31.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oau001ewwvnh44k2ba9","content":"<h2 id=\"路径别名\"><a href=\"#路径别名\" class=\"headerlink\" title=\"路径别名\"></a>路径别名</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在vite配置中</span></span><br><span class=\"line\"><span class=\"comment\">// 需要导入依赖 import &#123; fileURLToPath, URL &#125; from &quot;node:url&quot;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;@&quot;</span>: <span class=\"title function_\">fileURLToPath</span>(<span class=\"keyword\">new</span> <span class=\"title function_\">URL</span>(<span class=\"string\">&quot;./src&quot;</span>, <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>)),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"路径别名\"><a href=\"#路径别名\" class=\"headerlink\" title=\"路径别名\"></a>路径别名</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在vite配置中</span></span><br><span class=\"line\"><span class=\"comment\">// 需要导入依赖 import &#123; fileURLToPath, URL &#125; from &quot;node:url&quot;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;@&quot;</span>: <span class=\"title function_\">fileURLToPath</span>(<span class=\"keyword\">new</span> <span class=\"title function_\">URL</span>(<span class=\"string\">&quot;./src&quot;</span>, <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>)),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>"},{"title":"vue3","date":"2023-05-05T13:30:42.000Z","_content":"## createVNode与h函数\ncreateVNode与h函数都是用来创建虚拟节点的.\ncreateVNode();\n第一个参数是要创建的节点 如'div'\n第二个为动态属性{ class:{active,list},id:'dd'}\n第三个参数为节点中的内容,可以往里面继续添加节点\n创建出来的虚拟节点使用render()来渲染\n```typescript\nimport {App, createVNode, Directive, render} from \"vue\";  \nimport loadingBar from '@/components/MLoading/index.vue'  \nimport router from \"@/router\";\n// 创建虚拟节点\nconst node = createVNode(loadingBar)  \n// 挂载到body上并渲染\nrender(node, document.body)  \n\n// 导入路由,将不同的函数挂载在路由的钩子上\nrouter.beforeEach(()=>{  \n    node.component?.exposed?.startLoading()  \n})  \nrouter.afterEach(()=>{  \n    node.component?.exposed?.endLoading()  \n  \n})\n```\nelementUI的全局导入,应该也是使用了插件,通过插件来将其中的组件全部注册为全局组件\n\n\n## vue插件\n这是一个ts文件,可以导入vue组件,然后通过app.component(\"组件名\",组件)来全局挂载组件,这样就可以在任意的单文件组件中使用这个组件\n```typescript\nimport {App, Directive} from \"vue\";  \n// vue插件  \n// 可以导出一个对像和函数,如果是对象的话需要install函数  \nexport  default {  \n    install(app:App){  \n       //可以挂一个全局组件在app上\n       //通过 `app.component()` 和 `app.directive()` 注册一到多个全局组件或自定义指令\n       // 挂载全局的$translate() 方法\n       app.config.globalProperties.$translate = (key) => { }\n       \n    }  \n}\n// 导入后在app.use(..)挂载\n\n```\n## hook\n介绍：通过组合式API可以把复杂或常用的逻辑封装成一个个hook来进行调用，简介优雅，方便维护。\nhooks 本质是一个函数，是对 setup 中使用的 composition API的封装，通俗来讲：抽出一部分代码单独放一个js里，在setup里就可直接用hook中的函数，不是父子组件的关系。\nhooks 复用率高，使setup中逻辑更清晰\n`vueuse`很多hook函数\n```typescript\n// 使用组合式api的watch函数,在需要使用的直接调用就好\n// 其实就相当于utils库,只不过这种库中用到的watch只能在vue中使用,不像其他工具类库,不受框架限制,使用原生api开发\nexport function useHistory() {  \n    const route=useRoute();  \n    // history.state对于没有后一个和前一个的记录返回null  \n    const backPath = ref<string>(history.state.back);  \n    const forwardPath = ref<string>(history.state.forward);  \n  \n    watch(()=>route.path,()=>{  \n        backPath.value = history.state.back;  \n        forwardPath.value = history.state.forward;  \n    })  \n    return{  \n        backPath,  \n        forwardPath  \n    }  \n}\n```\n\n## 自定义指令\n<template>  \n<div v-lsls=\"1\">你好,我是风吹麦浪</div>  \n</template>  \n  ```vue\n<template>  \n<!-- 调用自定义指令 -->\n<div v-lsls=\"1\">你好,我是风吹麦浪</div>  \n</template>\n\n```\n```typescript\n<script setup lang=\"ts\">  \nimport {Directive,onMounted} from \"vue\";  \n// 定义自定义指令 名字需要v开头\nconst vLsls:Directive={  \n  mounted: (el,binding) => {  \n    el.innerText=el.innerText+'hello,我是自定义指令'  \n    console.log('这里',el)  \n    console.log('这里',binding.value)  \n  }  \n  \n}  \n</script>\n```\n### 自定义指令的生命周期\n```typescript\nconst myDirective = {\n  // 在绑定元素的 attribute 前\n  // 或事件监听器应用前调用\n  created(el, binding, vnode, prevVnode) {\n    // 下面会介绍各个参数的细节\n  },\n  // 在元素被插入到 DOM 前调用\n  beforeMount(el, binding, vnode, prevVnode) {},\n  // 在绑定元素的父组件\n  // 及他自己的所有子节点都挂载完成后调用\n  mounted(el, binding, vnode, prevVnode) {},\n  // 绑定元素的父组件更新前调用\n  beforeUpdate(el, binding, vnode, prevVnode) {},\n  // 在绑定元素的父组件\n  // 及他自己的所有子节点都更新后调用\n  updated(el, binding, vnode, prevVnode) {},\n  // 绑定元素的父组件卸载前调用\n  beforeUnmount(el, binding, vnode, prevVnode) {},\n  // 绑定元素的父组件卸载后调用\n  unmounted(el, binding, vnode, prevVnode) {}\n}\n```\n### 全局自定义指令\n```typescript\nimport {App, Directive} from \"vue\";\n// 自定义指令的名字 和directive对象或者函数,不过函数写法只在`mounted` 和 `updated` 时触发并且行为相同\napp.directive('lazy',vLazy)\napp.directive('lazy',(el)=>{\n\tconsole.log(el)\n})\n```\n## 一个将img转为base64的指令\n\n\n## 批量注册插件\n```typescript\n\nimport {App, createVNode, Directive, render} from \"vue\";  \nimport loadingBar from '@/components/MLoading/index.vue'  \nimport router from \"@/router\";  \n \nexport  default {  \n    install(app:App){  \n        // 批量注册组件  \n        // vite的glob导入组件\n        const modules = import.meta.glob('../*/*.ts',)  \n        \n        for (const path in modules) {  \n            modules[path]().then((mod: any) => {  \n                let temp=path.split('/')  \n                temp.pop()  \n                console.log(temp.pop(),mod)  \n                //注册插件\n                app.use(mod.default)  \n            })  \n        }  \n        // 批量注册组件同理\n        // 扫描所以组件\n        // 使用app注册就好了\n    }  \n}\n```\n\n## vue事件修饰符\n1. prevent：阻止默认事件 \n2. stop：阻止事件冒泡\n3. once：事件只触发一次  \n4. capture：使用事件的捕获模式\n5. self：只有event.target是当前操作的元素时才触发事件\n6. passive：事件的默认行为立即执行，无需等待事件回调执行完毕\n![[Pasted image 20230414214056.png]]\n事件冒泡:点击按钮后会先打印按钮,box2,box1从内到外,从当前节点往上,直到根节点\n事件捕获:跟事件冒泡正好相反,是从box1->box2->btn,从根节点出发到目标节点\n\npassive修饰如滚动默认是先执行函数在滚动,添加修饰符之后是先滚动在执行事件函数\n### @wheel\n滚轮事件","source":"_posts/学习笔记/前端/vue3.md","raw":"---\ntitle: vue3\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## createVNode与h函数\ncreateVNode与h函数都是用来创建虚拟节点的.\ncreateVNode();\n第一个参数是要创建的节点 如'div'\n第二个为动态属性{ class:{active,list},id:'dd'}\n第三个参数为节点中的内容,可以往里面继续添加节点\n创建出来的虚拟节点使用render()来渲染\n```typescript\nimport {App, createVNode, Directive, render} from \"vue\";  \nimport loadingBar from '@/components/MLoading/index.vue'  \nimport router from \"@/router\";\n// 创建虚拟节点\nconst node = createVNode(loadingBar)  \n// 挂载到body上并渲染\nrender(node, document.body)  \n\n// 导入路由,将不同的函数挂载在路由的钩子上\nrouter.beforeEach(()=>{  \n    node.component?.exposed?.startLoading()  \n})  \nrouter.afterEach(()=>{  \n    node.component?.exposed?.endLoading()  \n  \n})\n```\nelementUI的全局导入,应该也是使用了插件,通过插件来将其中的组件全部注册为全局组件\n\n\n## vue插件\n这是一个ts文件,可以导入vue组件,然后通过app.component(\"组件名\",组件)来全局挂载组件,这样就可以在任意的单文件组件中使用这个组件\n```typescript\nimport {App, Directive} from \"vue\";  \n// vue插件  \n// 可以导出一个对像和函数,如果是对象的话需要install函数  \nexport  default {  \n    install(app:App){  \n       //可以挂一个全局组件在app上\n       //通过 `app.component()` 和 `app.directive()` 注册一到多个全局组件或自定义指令\n       // 挂载全局的$translate() 方法\n       app.config.globalProperties.$translate = (key) => { }\n       \n    }  \n}\n// 导入后在app.use(..)挂载\n\n```\n## hook\n介绍：通过组合式API可以把复杂或常用的逻辑封装成一个个hook来进行调用，简介优雅，方便维护。\nhooks 本质是一个函数，是对 setup 中使用的 composition API的封装，通俗来讲：抽出一部分代码单独放一个js里，在setup里就可直接用hook中的函数，不是父子组件的关系。\nhooks 复用率高，使setup中逻辑更清晰\n`vueuse`很多hook函数\n```typescript\n// 使用组合式api的watch函数,在需要使用的直接调用就好\n// 其实就相当于utils库,只不过这种库中用到的watch只能在vue中使用,不像其他工具类库,不受框架限制,使用原生api开发\nexport function useHistory() {  \n    const route=useRoute();  \n    // history.state对于没有后一个和前一个的记录返回null  \n    const backPath = ref<string>(history.state.back);  \n    const forwardPath = ref<string>(history.state.forward);  \n  \n    watch(()=>route.path,()=>{  \n        backPath.value = history.state.back;  \n        forwardPath.value = history.state.forward;  \n    })  \n    return{  \n        backPath,  \n        forwardPath  \n    }  \n}\n```\n\n## 自定义指令\n<template>  \n<div v-lsls=\"1\">你好,我是风吹麦浪</div>  \n</template>  \n  ```vue\n<template>  \n<!-- 调用自定义指令 -->\n<div v-lsls=\"1\">你好,我是风吹麦浪</div>  \n</template>\n\n```\n```typescript\n<script setup lang=\"ts\">  \nimport {Directive,onMounted} from \"vue\";  \n// 定义自定义指令 名字需要v开头\nconst vLsls:Directive={  \n  mounted: (el,binding) => {  \n    el.innerText=el.innerText+'hello,我是自定义指令'  \n    console.log('这里',el)  \n    console.log('这里',binding.value)  \n  }  \n  \n}  \n</script>\n```\n### 自定义指令的生命周期\n```typescript\nconst myDirective = {\n  // 在绑定元素的 attribute 前\n  // 或事件监听器应用前调用\n  created(el, binding, vnode, prevVnode) {\n    // 下面会介绍各个参数的细节\n  },\n  // 在元素被插入到 DOM 前调用\n  beforeMount(el, binding, vnode, prevVnode) {},\n  // 在绑定元素的父组件\n  // 及他自己的所有子节点都挂载完成后调用\n  mounted(el, binding, vnode, prevVnode) {},\n  // 绑定元素的父组件更新前调用\n  beforeUpdate(el, binding, vnode, prevVnode) {},\n  // 在绑定元素的父组件\n  // 及他自己的所有子节点都更新后调用\n  updated(el, binding, vnode, prevVnode) {},\n  // 绑定元素的父组件卸载前调用\n  beforeUnmount(el, binding, vnode, prevVnode) {},\n  // 绑定元素的父组件卸载后调用\n  unmounted(el, binding, vnode, prevVnode) {}\n}\n```\n### 全局自定义指令\n```typescript\nimport {App, Directive} from \"vue\";\n// 自定义指令的名字 和directive对象或者函数,不过函数写法只在`mounted` 和 `updated` 时触发并且行为相同\napp.directive('lazy',vLazy)\napp.directive('lazy',(el)=>{\n\tconsole.log(el)\n})\n```\n## 一个将img转为base64的指令\n\n\n## 批量注册插件\n```typescript\n\nimport {App, createVNode, Directive, render} from \"vue\";  \nimport loadingBar from '@/components/MLoading/index.vue'  \nimport router from \"@/router\";  \n \nexport  default {  \n    install(app:App){  \n        // 批量注册组件  \n        // vite的glob导入组件\n        const modules = import.meta.glob('../*/*.ts',)  \n        \n        for (const path in modules) {  \n            modules[path]().then((mod: any) => {  \n                let temp=path.split('/')  \n                temp.pop()  \n                console.log(temp.pop(),mod)  \n                //注册插件\n                app.use(mod.default)  \n            })  \n        }  \n        // 批量注册组件同理\n        // 扫描所以组件\n        // 使用app注册就好了\n    }  \n}\n```\n\n## vue事件修饰符\n1. prevent：阻止默认事件 \n2. stop：阻止事件冒泡\n3. once：事件只触发一次  \n4. capture：使用事件的捕获模式\n5. self：只有event.target是当前操作的元素时才触发事件\n6. passive：事件的默认行为立即执行，无需等待事件回调执行完毕\n![[Pasted image 20230414214056.png]]\n事件冒泡:点击按钮后会先打印按钮,box2,box1从内到外,从当前节点往上,直到根节点\n事件捕获:跟事件冒泡正好相反,是从box1->box2->btn,从根节点出发到目标节点\n\npassive修饰如滚动默认是先执行函数在滚动,添加修饰符之后是先滚动在执行事件函数\n### @wheel\n滚轮事件","slug":"学习笔记/前端/vue3","published":1,"updated":"2023-05-19T14:07:31.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oau001fwwvncgd15ipe","content":"<h2 id=\"createVNode与h函数\"><a href=\"#createVNode与h函数\" class=\"headerlink\" title=\"createVNode与h函数\"></a>createVNode与h函数</h2><p>createVNode与h函数都是用来创建虚拟节点的.<br>createVNode();<br>第一个参数是要创建的节点 如’div’<br>第二个为动态属性{ class:{active,list},id:’dd’}<br>第三个参数为节点中的内容,可以往里面继续添加节点<br>创建出来的虚拟节点使用render()来渲染</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">App</span>, createVNode, <span class=\"title class_\">Directive</span>, render&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> loadingBar <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/MLoading/index.vue&#x27;</span>  </span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/router&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 创建虚拟节点</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> node = <span class=\"title function_\">createVNode</span>(loadingBar)  </span><br><span class=\"line\"><span class=\"comment\">// 挂载到body上并渲染</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>(node, <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 导入路由,将不同的函数挂载在路由的钩子上</span></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">()=&gt;</span>&#123;  </span><br><span class=\"line\">    node.<span class=\"property\">component</span>?.<span class=\"property\">exposed</span>?.<span class=\"title function_\">startLoading</span>()  </span><br><span class=\"line\">&#125;)  </span><br><span class=\"line\">router.<span class=\"title function_\">afterEach</span>(<span class=\"function\">()=&gt;</span>&#123;  </span><br><span class=\"line\">    node.<span class=\"property\">component</span>?.<span class=\"property\">exposed</span>?.<span class=\"title function_\">endLoading</span>()  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>elementUI的全局导入,应该也是使用了插件,通过插件来将其中的组件全部注册为全局组件</p>\n<h2 id=\"vue插件\"><a href=\"#vue插件\" class=\"headerlink\" title=\"vue插件\"></a>vue插件</h2><p>这是一个ts文件,可以导入vue组件,然后通过app.component(“组件名”,组件)来全局挂载组件,这样就可以在任意的单文件组件中使用这个组件</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">App</span>, <span class=\"title class_\">Directive</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  </span><br><span class=\"line\"><span class=\"comment\">// vue插件  </span></span><br><span class=\"line\"><span class=\"comment\">// 可以导出一个对像和函数,如果是对象的话需要install函数  </span></span><br><span class=\"line\"><span class=\"keyword\">export</span>  <span class=\"keyword\">default</span> &#123;  </span><br><span class=\"line\">    <span class=\"title function_\">install</span>(<span class=\"params\">app:App</span>)&#123;  </span><br><span class=\"line\">       <span class=\"comment\">//可以挂一个全局组件在app上</span></span><br><span class=\"line\">       <span class=\"comment\">//通过 `app.component()` 和 `app.directive()` 注册一到多个全局组件或自定义指令</span></span><br><span class=\"line\">       <span class=\"comment\">// 挂载全局的$translate() 方法</span></span><br><span class=\"line\">       app.<span class=\"property\">config</span>.<span class=\"property\">globalProperties</span>.<span class=\"property\">$translate</span> = <span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123; &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 导入后在app.use(..)挂载</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"hook\"><a href=\"#hook\" class=\"headerlink\" title=\"hook\"></a>hook</h2><p>介绍：通过组合式API可以把复杂或常用的逻辑封装成一个个hook来进行调用，简介优雅，方便维护。<br>hooks 本质是一个函数，是对 setup 中使用的 composition API的封装，通俗来讲：抽出一部分代码单独放一个js里，在setup里就可直接用hook中的函数，不是父子组件的关系。<br>hooks 复用率高，使setup中逻辑更清晰<br><code>vueuse</code>很多hook函数</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用组合式api的watch函数,在需要使用的直接调用就好</span></span><br><span class=\"line\"><span class=\"comment\">// 其实就相当于utils库,只不过这种库中用到的watch只能在vue中使用,不像其他工具类库,不受框架限制,使用原生api开发</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">useHistory</span>(<span class=\"params\"></span>) &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">const</span> route=<span class=\"title function_\">useRoute</span>();  </span><br><span class=\"line\">    <span class=\"comment\">// history.state对于没有后一个和前一个的记录返回null  </span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> backPath = ref&lt;<span class=\"built_in\">string</span>&gt;(history.<span class=\"property\">state</span>.<span class=\"property\">back</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">const</span> forwardPath = ref&lt;<span class=\"built_in\">string</span>&gt;(history.<span class=\"property\">state</span>.<span class=\"property\">forward</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">watch</span>(<span class=\"function\">()=&gt;</span>route.<span class=\"property\">path</span>,<span class=\"function\">()=&gt;</span>&#123;  </span><br><span class=\"line\">        backPath.<span class=\"property\">value</span> = history.<span class=\"property\">state</span>.<span class=\"property\">back</span>;  </span><br><span class=\"line\">        forwardPath.<span class=\"property\">value</span> = history.<span class=\"property\">state</span>.<span class=\"property\">forward</span>;  </span><br><span class=\"line\">    &#125;)  </span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;  </span><br><span class=\"line\">        backPath,  </span><br><span class=\"line\">        forwardPath  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义指令\"><a href=\"#自定义指令\" class=\"headerlink\" title=\"自定义指令\"></a>自定义指令</h2><template>  \n<div v-lsls=\"1\">你好,我是风吹麦浪</div>  \n</template>  \n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;  </span><br><span class=\"line\">&lt;!-- 调用自定义指令 --&gt;</span><br><span class=\"line\">&lt;div v-lsls=&quot;1&quot;&gt;你好,我是风吹麦浪&lt;/div&gt;  </span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script setup lang=<span class=\"string\">&quot;ts&quot;</span>&gt;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">Directive</span>,onMounted&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  </span><br><span class=\"line\"><span class=\"comment\">// 定义自定义指令 名字需要v开头</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">vLsls</span>:<span class=\"title class_\">Directive</span>=&#123;  </span><br><span class=\"line\">  <span class=\"attr\">mounted</span>: <span class=\"function\">(<span class=\"params\">el,binding</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">    el.<span class=\"property\">innerText</span>=el.<span class=\"property\">innerText</span>+<span class=\"string\">&#x27;hello,我是自定义指令&#x27;</span>  </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;这里&#x27;</span>,el)  </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;这里&#x27;</span>,binding.<span class=\"property\">value</span>)  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n### 自定义指令的生命周期\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myDirective = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在绑定元素的 attribute 前</span></span><br><span class=\"line\">  <span class=\"comment\">// 或事件监听器应用前调用</span></span><br><span class=\"line\">  <span class=\"title function_\">created</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 下面会介绍各个参数的细节</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在元素被插入到 DOM 前调用</span></span><br><span class=\"line\">  <span class=\"title function_\">beforeMount</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在绑定元素的父组件</span></span><br><span class=\"line\">  <span class=\"comment\">// 及他自己的所有子节点都挂载完成后调用</span></span><br><span class=\"line\">  <span class=\"title function_\">mounted</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 绑定元素的父组件更新前调用</span></span><br><span class=\"line\">  <span class=\"title function_\">beforeUpdate</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在绑定元素的父组件</span></span><br><span class=\"line\">  <span class=\"comment\">// 及他自己的所有子节点都更新后调用</span></span><br><span class=\"line\">  <span class=\"title function_\">updated</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 绑定元素的父组件卸载前调用</span></span><br><span class=\"line\">  <span class=\"title function_\">beforeUnmount</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 绑定元素的父组件卸载后调用</span></span><br><span class=\"line\">  <span class=\"title function_\">unmounted</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n### 全局自定义指令\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">App</span>, <span class=\"title class_\">Directive</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 自定义指令的名字 和directive对象或者函数,不过函数写法只在`mounted` 和 `updated` 时触发并且行为相同</span></span><br><span class=\"line\">app.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;lazy&#x27;</span>,vLazy)</span><br><span class=\"line\">app.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;lazy&#x27;</span>,<span class=\"function\">(<span class=\"params\">el</span>)=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(el)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n## 一个将img转为base64的指令\n\n\n<h2 id=\"批量注册插件\"><a href=\"#批量注册插件\" class=\"headerlink\" title=\"批量注册插件\"></a>批量注册插件</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">App</span>, createVNode, <span class=\"title class_\">Directive</span>, render&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> loadingBar <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/MLoading/index.vue&#x27;</span>  </span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/router&quot;</span>;  </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">export</span>  <span class=\"keyword\">default</span> &#123;  </span><br><span class=\"line\">    <span class=\"title function_\">install</span>(<span class=\"params\">app:App</span>)&#123;  </span><br><span class=\"line\">        <span class=\"comment\">// 批量注册组件  </span></span><br><span class=\"line\">        <span class=\"comment\">// vite的glob导入组件</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> modules = <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"title function_\">glob</span>(<span class=\"string\">&#x27;../*/*.ts&#x27;</span>,)  </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> path <span class=\"keyword\">in</span> modules) &#123;  </span><br><span class=\"line\">            modules[path]().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">mod: <span class=\"built_in\">any</span></span>) =&gt;</span> &#123;  </span><br><span class=\"line\">                <span class=\"keyword\">let</span> temp=path.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)  </span><br><span class=\"line\">                temp.<span class=\"title function_\">pop</span>()  </span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(temp.<span class=\"title function_\">pop</span>(),mod)  </span><br><span class=\"line\">                <span class=\"comment\">//注册插件</span></span><br><span class=\"line\">                app.<span class=\"title function_\">use</span>(mod.<span class=\"property\">default</span>)  </span><br><span class=\"line\">            &#125;)  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"comment\">// 批量注册组件同理</span></span><br><span class=\"line\">        <span class=\"comment\">// 扫描所以组件</span></span><br><span class=\"line\">        <span class=\"comment\">// 使用app注册就好了</span></span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vue事件修饰符\"><a href=\"#vue事件修饰符\" class=\"headerlink\" title=\"vue事件修饰符\"></a>vue事件修饰符</h2><ol>\n<li>prevent：阻止默认事件 </li>\n<li>stop：阻止事件冒泡</li>\n<li>once：事件只触发一次  </li>\n<li>capture：使用事件的捕获模式</li>\n<li>self：只有event.target是当前操作的元素时才触发事件</li>\n<li>passive：事件的默认行为立即执行，无需等待事件回调执行完毕<br>![[Pasted image 20230414214056.png]]<br>事件冒泡:点击按钮后会先打印按钮,box2,box1从内到外,从当前节点往上,直到根节点<br>事件捕获:跟事件冒泡正好相反,是从box1-&gt;box2-&gt;btn,从根节点出发到目标节点</li>\n</ol>\n<p>passive修饰如滚动默认是先执行函数在滚动,添加修饰符之后是先滚动在执行事件函数</p>\n<h3 id=\"wheel\"><a href=\"#wheel\" class=\"headerlink\" title=\"@wheel\"></a>@wheel</h3><p>滚轮事件</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"createVNode与h函数\"><a href=\"#createVNode与h函数\" class=\"headerlink\" title=\"createVNode与h函数\"></a>createVNode与h函数</h2><p>createVNode与h函数都是用来创建虚拟节点的.<br>createVNode();<br>第一个参数是要创建的节点 如’div’<br>第二个为动态属性{ class:{active,list},id:’dd’}<br>第三个参数为节点中的内容,可以往里面继续添加节点<br>创建出来的虚拟节点使用render()来渲染</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">App</span>, createVNode, <span class=\"title class_\">Directive</span>, render&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> loadingBar <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/MLoading/index.vue&#x27;</span>  </span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/router&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 创建虚拟节点</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> node = <span class=\"title function_\">createVNode</span>(loadingBar)  </span><br><span class=\"line\"><span class=\"comment\">// 挂载到body上并渲染</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>(node, <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 导入路由,将不同的函数挂载在路由的钩子上</span></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">()=&gt;</span>&#123;  </span><br><span class=\"line\">    node.<span class=\"property\">component</span>?.<span class=\"property\">exposed</span>?.<span class=\"title function_\">startLoading</span>()  </span><br><span class=\"line\">&#125;)  </span><br><span class=\"line\">router.<span class=\"title function_\">afterEach</span>(<span class=\"function\">()=&gt;</span>&#123;  </span><br><span class=\"line\">    node.<span class=\"property\">component</span>?.<span class=\"property\">exposed</span>?.<span class=\"title function_\">endLoading</span>()  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>elementUI的全局导入,应该也是使用了插件,通过插件来将其中的组件全部注册为全局组件</p>\n<h2 id=\"vue插件\"><a href=\"#vue插件\" class=\"headerlink\" title=\"vue插件\"></a>vue插件</h2><p>这是一个ts文件,可以导入vue组件,然后通过app.component(“组件名”,组件)来全局挂载组件,这样就可以在任意的单文件组件中使用这个组件</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">App</span>, <span class=\"title class_\">Directive</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  </span><br><span class=\"line\"><span class=\"comment\">// vue插件  </span></span><br><span class=\"line\"><span class=\"comment\">// 可以导出一个对像和函数,如果是对象的话需要install函数  </span></span><br><span class=\"line\"><span class=\"keyword\">export</span>  <span class=\"keyword\">default</span> &#123;  </span><br><span class=\"line\">    <span class=\"title function_\">install</span>(<span class=\"params\">app:App</span>)&#123;  </span><br><span class=\"line\">       <span class=\"comment\">//可以挂一个全局组件在app上</span></span><br><span class=\"line\">       <span class=\"comment\">//通过 `app.component()` 和 `app.directive()` 注册一到多个全局组件或自定义指令</span></span><br><span class=\"line\">       <span class=\"comment\">// 挂载全局的$translate() 方法</span></span><br><span class=\"line\">       app.<span class=\"property\">config</span>.<span class=\"property\">globalProperties</span>.<span class=\"property\">$translate</span> = <span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123; &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 导入后在app.use(..)挂载</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"hook\"><a href=\"#hook\" class=\"headerlink\" title=\"hook\"></a>hook</h2><p>介绍：通过组合式API可以把复杂或常用的逻辑封装成一个个hook来进行调用，简介优雅，方便维护。<br>hooks 本质是一个函数，是对 setup 中使用的 composition API的封装，通俗来讲：抽出一部分代码单独放一个js里，在setup里就可直接用hook中的函数，不是父子组件的关系。<br>hooks 复用率高，使setup中逻辑更清晰<br><code>vueuse</code>很多hook函数</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用组合式api的watch函数,在需要使用的直接调用就好</span></span><br><span class=\"line\"><span class=\"comment\">// 其实就相当于utils库,只不过这种库中用到的watch只能在vue中使用,不像其他工具类库,不受框架限制,使用原生api开发</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">useHistory</span>(<span class=\"params\"></span>) &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">const</span> route=<span class=\"title function_\">useRoute</span>();  </span><br><span class=\"line\">    <span class=\"comment\">// history.state对于没有后一个和前一个的记录返回null  </span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> backPath = ref&lt;<span class=\"built_in\">string</span>&gt;(history.<span class=\"property\">state</span>.<span class=\"property\">back</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">const</span> forwardPath = ref&lt;<span class=\"built_in\">string</span>&gt;(history.<span class=\"property\">state</span>.<span class=\"property\">forward</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"title function_\">watch</span>(<span class=\"function\">()=&gt;</span>route.<span class=\"property\">path</span>,<span class=\"function\">()=&gt;</span>&#123;  </span><br><span class=\"line\">        backPath.<span class=\"property\">value</span> = history.<span class=\"property\">state</span>.<span class=\"property\">back</span>;  </span><br><span class=\"line\">        forwardPath.<span class=\"property\">value</span> = history.<span class=\"property\">state</span>.<span class=\"property\">forward</span>;  </span><br><span class=\"line\">    &#125;)  </span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;  </span><br><span class=\"line\">        backPath,  </span><br><span class=\"line\">        forwardPath  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义指令\"><a href=\"#自定义指令\" class=\"headerlink\" title=\"自定义指令\"></a>自定义指令</h2><template>  \n<div v-lsls=\"1\">你好,我是风吹麦浪</div>  \n</template>  \n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;  </span><br><span class=\"line\">&lt;!-- 调用自定义指令 --&gt;</span><br><span class=\"line\">&lt;div v-lsls=&quot;1&quot;&gt;你好,我是风吹麦浪&lt;/div&gt;  </span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script setup lang=<span class=\"string\">&quot;ts&quot;</span>&gt;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">Directive</span>,onMounted&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  </span><br><span class=\"line\"><span class=\"comment\">// 定义自定义指令 名字需要v开头</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">vLsls</span>:<span class=\"title class_\">Directive</span>=&#123;  </span><br><span class=\"line\">  <span class=\"attr\">mounted</span>: <span class=\"function\">(<span class=\"params\">el,binding</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">    el.<span class=\"property\">innerText</span>=el.<span class=\"property\">innerText</span>+<span class=\"string\">&#x27;hello,我是自定义指令&#x27;</span>  </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;这里&#x27;</span>,el)  </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;这里&#x27;</span>,binding.<span class=\"property\">value</span>)  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n### 自定义指令的生命周期\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myDirective = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在绑定元素的 attribute 前</span></span><br><span class=\"line\">  <span class=\"comment\">// 或事件监听器应用前调用</span></span><br><span class=\"line\">  <span class=\"title function_\">created</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 下面会介绍各个参数的细节</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在元素被插入到 DOM 前调用</span></span><br><span class=\"line\">  <span class=\"title function_\">beforeMount</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在绑定元素的父组件</span></span><br><span class=\"line\">  <span class=\"comment\">// 及他自己的所有子节点都挂载完成后调用</span></span><br><span class=\"line\">  <span class=\"title function_\">mounted</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 绑定元素的父组件更新前调用</span></span><br><span class=\"line\">  <span class=\"title function_\">beforeUpdate</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 在绑定元素的父组件</span></span><br><span class=\"line\">  <span class=\"comment\">// 及他自己的所有子节点都更新后调用</span></span><br><span class=\"line\">  <span class=\"title function_\">updated</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 绑定元素的父组件卸载前调用</span></span><br><span class=\"line\">  <span class=\"title function_\">beforeUnmount</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 绑定元素的父组件卸载后调用</span></span><br><span class=\"line\">  <span class=\"title function_\">unmounted</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n### 全局自定义指令\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">App</span>, <span class=\"title class_\">Directive</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 自定义指令的名字 和directive对象或者函数,不过函数写法只在`mounted` 和 `updated` 时触发并且行为相同</span></span><br><span class=\"line\">app.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;lazy&#x27;</span>,vLazy)</span><br><span class=\"line\">app.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;lazy&#x27;</span>,<span class=\"function\">(<span class=\"params\">el</span>)=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(el)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n## 一个将img转为base64的指令\n\n\n<h2 id=\"批量注册插件\"><a href=\"#批量注册插件\" class=\"headerlink\" title=\"批量注册插件\"></a>批量注册插件</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">App</span>, createVNode, <span class=\"title class_\">Directive</span>, render&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> loadingBar <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/MLoading/index.vue&#x27;</span>  </span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/router&quot;</span>;  </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">export</span>  <span class=\"keyword\">default</span> &#123;  </span><br><span class=\"line\">    <span class=\"title function_\">install</span>(<span class=\"params\">app:App</span>)&#123;  </span><br><span class=\"line\">        <span class=\"comment\">// 批量注册组件  </span></span><br><span class=\"line\">        <span class=\"comment\">// vite的glob导入组件</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> modules = <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"title function_\">glob</span>(<span class=\"string\">&#x27;../*/*.ts&#x27;</span>,)  </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> path <span class=\"keyword\">in</span> modules) &#123;  </span><br><span class=\"line\">            modules[path]().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">mod: <span class=\"built_in\">any</span></span>) =&gt;</span> &#123;  </span><br><span class=\"line\">                <span class=\"keyword\">let</span> temp=path.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>)  </span><br><span class=\"line\">                temp.<span class=\"title function_\">pop</span>()  </span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(temp.<span class=\"title function_\">pop</span>(),mod)  </span><br><span class=\"line\">                <span class=\"comment\">//注册插件</span></span><br><span class=\"line\">                app.<span class=\"title function_\">use</span>(mod.<span class=\"property\">default</span>)  </span><br><span class=\"line\">            &#125;)  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"comment\">// 批量注册组件同理</span></span><br><span class=\"line\">        <span class=\"comment\">// 扫描所以组件</span></span><br><span class=\"line\">        <span class=\"comment\">// 使用app注册就好了</span></span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vue事件修饰符\"><a href=\"#vue事件修饰符\" class=\"headerlink\" title=\"vue事件修饰符\"></a>vue事件修饰符</h2><ol>\n<li>prevent：阻止默认事件 </li>\n<li>stop：阻止事件冒泡</li>\n<li>once：事件只触发一次  </li>\n<li>capture：使用事件的捕获模式</li>\n<li>self：只有event.target是当前操作的元素时才触发事件</li>\n<li>passive：事件的默认行为立即执行，无需等待事件回调执行完毕<br>![[Pasted image 20230414214056.png]]<br>事件冒泡:点击按钮后会先打印按钮,box2,box1从内到外,从当前节点往上,直到根节点<br>事件捕获:跟事件冒泡正好相反,是从box1-&gt;box2-&gt;btn,从根节点出发到目标节点</li>\n</ol>\n<p>passive修饰如滚动默认是先执行函数在滚动,添加修饰符之后是先滚动在执行事件函数</p>\n<h3 id=\"wheel\"><a href=\"#wheel\" class=\"headerlink\" title=\"@wheel\"></a>@wheel</h3><p>滚轮事件</p>\n"},{"title":"mongoDB","date":"2023-05-05T13:30:42.000Z","_content":"# mongoDB的安装\n\n## 配置文件mongod.cfg\n```yaml\n \nstorage:\n\t数据库的路径\n  dbPath: D:\\software\\mongodb-win32-x86_64-windows-6.0.4\\data\\db\n  journal:\n    enabled: true\n \nsystemLog:\n  destination: file\n  logAppend: true\n\t  日志的路径\n  path:  D:\\software\\mongodb-win32-x86_64-windows-6.0.4\\log\\mongod.log\nnet:\n  port: 27017\n  bindIp: 127.0.0.1\n```\n目录的创建 \n创建数据库路径和log路径\n```shell\nmongod --dbpath 上面的数据库路径\n刷入MongoDB服务\nmongod --config '绝对路径的配置文件' --install \nnet start MongoDB 开启服务\nnet stop MongoDB 关闭服务\nmongod --remove 删除服务\n```\n\n## MongoDB的使用\n```shell\n全部数据库\nshow dbs/databases\n当前数据库\ndb\n创建和使用数据库\nuse db \n当前数据库中的表\nshow collocation\n查看指定表中的数据\ndb.getCollection(\"指定表\").find({name:\"sss\"}).pretty()\n等同于\ndb.users.find({}).pretty()\npretty()一行打印\n\n更新数据库\ndb.users.update({\"查询的条件\"},{$set{'更新的内容'}})\ndb.users.update({username:'admin'},{$set:{ isAdmin : true }})\n\n插入数据\ndb.users.insert({}) //如果主键重复抛出异常,提示主键重复,数据不被保存\ndb.users.save({}) // 如果主键存在更新数据,否则插入数据,已废弃可以使用 insertOne()或者replaceOne()替换\n\n删除数据\ndb.users.deleteOne({条件})\n删除所有\ndb.users.deleteMany({})\n查看所有\ndb.users.find()\n\n逻辑运算符 与或非\nand 的话就是多个条件\ndb.users.find({条件1,条件2})\n\nor\ndb.users.find($or:[{条件1},{条件2}])\n\nand or\ndn.users.find({like:'ss',$or:[{条件1},{条件2}]})\n\n```\n","source":"_posts/学习笔记/数据库/mongoDB.md","raw":"---\ntitle: mongoDB\ndate: 2023-05-05 21:30:42\ntags:  \n---\n# mongoDB的安装\n\n## 配置文件mongod.cfg\n```yaml\n \nstorage:\n\t数据库的路径\n  dbPath: D:\\software\\mongodb-win32-x86_64-windows-6.0.4\\data\\db\n  journal:\n    enabled: true\n \nsystemLog:\n  destination: file\n  logAppend: true\n\t  日志的路径\n  path:  D:\\software\\mongodb-win32-x86_64-windows-6.0.4\\log\\mongod.log\nnet:\n  port: 27017\n  bindIp: 127.0.0.1\n```\n目录的创建 \n创建数据库路径和log路径\n```shell\nmongod --dbpath 上面的数据库路径\n刷入MongoDB服务\nmongod --config '绝对路径的配置文件' --install \nnet start MongoDB 开启服务\nnet stop MongoDB 关闭服务\nmongod --remove 删除服务\n```\n\n## MongoDB的使用\n```shell\n全部数据库\nshow dbs/databases\n当前数据库\ndb\n创建和使用数据库\nuse db \n当前数据库中的表\nshow collocation\n查看指定表中的数据\ndb.getCollection(\"指定表\").find({name:\"sss\"}).pretty()\n等同于\ndb.users.find({}).pretty()\npretty()一行打印\n\n更新数据库\ndb.users.update({\"查询的条件\"},{$set{'更新的内容'}})\ndb.users.update({username:'admin'},{$set:{ isAdmin : true }})\n\n插入数据\ndb.users.insert({}) //如果主键重复抛出异常,提示主键重复,数据不被保存\ndb.users.save({}) // 如果主键存在更新数据,否则插入数据,已废弃可以使用 insertOne()或者replaceOne()替换\n\n删除数据\ndb.users.deleteOne({条件})\n删除所有\ndb.users.deleteMany({})\n查看所有\ndb.users.find()\n\n逻辑运算符 与或非\nand 的话就是多个条件\ndb.users.find({条件1,条件2})\n\nor\ndb.users.find($or:[{条件1},{条件2}])\n\nand or\ndn.users.find({like:'ss',$or:[{条件1},{条件2}]})\n\n```\n","slug":"学习笔记/数据库/mongoDB","published":1,"updated":"2023-05-19T14:07:31.057Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oau001gwwvncphacldn","content":"<h1 id=\"mongoDB的安装\"><a href=\"#mongoDB的安装\" class=\"headerlink\" title=\"mongoDB的安装\"></a>mongoDB的安装</h1><h2 id=\"配置文件mongod-cfg\"><a href=\"#配置文件mongod-cfg\" class=\"headerlink\" title=\"配置文件mongod.cfg\"></a>配置文件mongod.cfg</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"attr\">storage:</span></span><br><span class=\"line\">\t<span class=\"string\">数据库的路径</span></span><br><span class=\"line\">  <span class=\"attr\">dbPath:</span> <span class=\"string\">D:\\software\\mongodb-win32-x86_64-windows-6.0.4\\data\\db</span></span><br><span class=\"line\">  <span class=\"attr\">journal:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"attr\">systemLog:</span></span><br><span class=\"line\">  <span class=\"attr\">destination:</span> <span class=\"string\">file</span></span><br><span class=\"line\">  <span class=\"attr\">logAppend:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t  <span class=\"string\">日志的路径</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span>  <span class=\"string\">D:\\software\\mongodb-win32-x86_64-windows-6.0.4\\log\\mongod.log</span></span><br><span class=\"line\"><span class=\"attr\">net:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">27017</span></span><br><span class=\"line\">  <span class=\"attr\">bindIp:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br></pre></td></tr></table></figure>\n<p>目录的创建<br>创建数据库路径和log路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --dbpath 上面的数据库路径</span><br><span class=\"line\">刷入MongoDB服务</span><br><span class=\"line\">mongod --config &#x27;绝对路径的配置文件&#x27; --install </span><br><span class=\"line\">net start MongoDB 开启服务</span><br><span class=\"line\">net stop MongoDB 关闭服务</span><br><span class=\"line\">mongod --remove 删除服务</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"MongoDB的使用\"><a href=\"#MongoDB的使用\" class=\"headerlink\" title=\"MongoDB的使用\"></a>MongoDB的使用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全部数据库</span><br><span class=\"line\">show dbs/databases</span><br><span class=\"line\">当前数据库</span><br><span class=\"line\">db</span><br><span class=\"line\">创建和使用数据库</span><br><span class=\"line\">use db </span><br><span class=\"line\">当前数据库中的表</span><br><span class=\"line\">show collocation</span><br><span class=\"line\">查看指定表中的数据</span><br><span class=\"line\">db.getCollection(&quot;指定表&quot;).find(&#123;name:&quot;sss&quot;&#125;).pretty()</span><br><span class=\"line\">等同于</span><br><span class=\"line\">db.users.find(&#123;&#125;).pretty()</span><br><span class=\"line\">pretty()一行打印</span><br><span class=\"line\"></span><br><span class=\"line\">更新数据库</span><br><span class=\"line\">db.users.update(&#123;&quot;查询的条件&quot;&#125;,&#123;$set&#123;&#x27;更新的内容&#x27;&#125;&#125;)</span><br><span class=\"line\">db.users.update(&#123;username:&#x27;admin&#x27;&#125;,&#123;$set:&#123; isAdmin : true &#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">插入数据</span><br><span class=\"line\">db.users.insert(&#123;&#125;) //如果主键重复抛出异常,提示主键重复,数据不被保存</span><br><span class=\"line\">db.users.save(&#123;&#125;) // 如果主键存在更新数据,否则插入数据,已废弃可以使用 insertOne()或者replaceOne()替换</span><br><span class=\"line\"></span><br><span class=\"line\">删除数据</span><br><span class=\"line\">db.users.deleteOne(&#123;条件&#125;)</span><br><span class=\"line\">删除所有</span><br><span class=\"line\">db.users.deleteMany(&#123;&#125;)</span><br><span class=\"line\">查看所有</span><br><span class=\"line\">db.users.find()</span><br><span class=\"line\"></span><br><span class=\"line\">逻辑运算符 与或非</span><br><span class=\"line\">and 的话就是多个条件</span><br><span class=\"line\">db.users.find(&#123;条件1,条件2&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">or</span><br><span class=\"line\">db.users.find($or:[&#123;条件1&#125;,&#123;条件2&#125;])</span><br><span class=\"line\"></span><br><span class=\"line\">and or</span><br><span class=\"line\">dn.users.find(&#123;like:&#x27;ss&#x27;,$or:[&#123;条件1&#125;,&#123;条件2&#125;]&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"mongoDB的安装\"><a href=\"#mongoDB的安装\" class=\"headerlink\" title=\"mongoDB的安装\"></a>mongoDB的安装</h1><h2 id=\"配置文件mongod-cfg\"><a href=\"#配置文件mongod-cfg\" class=\"headerlink\" title=\"配置文件mongod.cfg\"></a>配置文件mongod.cfg</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"attr\">storage:</span></span><br><span class=\"line\">\t<span class=\"string\">数据库的路径</span></span><br><span class=\"line\">  <span class=\"attr\">dbPath:</span> <span class=\"string\">D:\\software\\mongodb-win32-x86_64-windows-6.0.4\\data\\db</span></span><br><span class=\"line\">  <span class=\"attr\">journal:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"attr\">systemLog:</span></span><br><span class=\"line\">  <span class=\"attr\">destination:</span> <span class=\"string\">file</span></span><br><span class=\"line\">  <span class=\"attr\">logAppend:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t  <span class=\"string\">日志的路径</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span>  <span class=\"string\">D:\\software\\mongodb-win32-x86_64-windows-6.0.4\\log\\mongod.log</span></span><br><span class=\"line\"><span class=\"attr\">net:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">27017</span></span><br><span class=\"line\">  <span class=\"attr\">bindIp:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br></pre></td></tr></table></figure>\n<p>目录的创建<br>创建数据库路径和log路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --dbpath 上面的数据库路径</span><br><span class=\"line\">刷入MongoDB服务</span><br><span class=\"line\">mongod --config &#x27;绝对路径的配置文件&#x27; --install </span><br><span class=\"line\">net start MongoDB 开启服务</span><br><span class=\"line\">net stop MongoDB 关闭服务</span><br><span class=\"line\">mongod --remove 删除服务</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"MongoDB的使用\"><a href=\"#MongoDB的使用\" class=\"headerlink\" title=\"MongoDB的使用\"></a>MongoDB的使用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全部数据库</span><br><span class=\"line\">show dbs/databases</span><br><span class=\"line\">当前数据库</span><br><span class=\"line\">db</span><br><span class=\"line\">创建和使用数据库</span><br><span class=\"line\">use db </span><br><span class=\"line\">当前数据库中的表</span><br><span class=\"line\">show collocation</span><br><span class=\"line\">查看指定表中的数据</span><br><span class=\"line\">db.getCollection(&quot;指定表&quot;).find(&#123;name:&quot;sss&quot;&#125;).pretty()</span><br><span class=\"line\">等同于</span><br><span class=\"line\">db.users.find(&#123;&#125;).pretty()</span><br><span class=\"line\">pretty()一行打印</span><br><span class=\"line\"></span><br><span class=\"line\">更新数据库</span><br><span class=\"line\">db.users.update(&#123;&quot;查询的条件&quot;&#125;,&#123;$set&#123;&#x27;更新的内容&#x27;&#125;&#125;)</span><br><span class=\"line\">db.users.update(&#123;username:&#x27;admin&#x27;&#125;,&#123;$set:&#123; isAdmin : true &#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">插入数据</span><br><span class=\"line\">db.users.insert(&#123;&#125;) //如果主键重复抛出异常,提示主键重复,数据不被保存</span><br><span class=\"line\">db.users.save(&#123;&#125;) // 如果主键存在更新数据,否则插入数据,已废弃可以使用 insertOne()或者replaceOne()替换</span><br><span class=\"line\"></span><br><span class=\"line\">删除数据</span><br><span class=\"line\">db.users.deleteOne(&#123;条件&#125;)</span><br><span class=\"line\">删除所有</span><br><span class=\"line\">db.users.deleteMany(&#123;&#125;)</span><br><span class=\"line\">查看所有</span><br><span class=\"line\">db.users.find()</span><br><span class=\"line\"></span><br><span class=\"line\">逻辑运算符 与或非</span><br><span class=\"line\">and 的话就是多个条件</span><br><span class=\"line\">db.users.find(&#123;条件1,条件2&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">or</span><br><span class=\"line\">db.users.find($or:[&#123;条件1&#125;,&#123;条件2&#125;])</span><br><span class=\"line\"></span><br><span class=\"line\">and or</span><br><span class=\"line\">dn.users.find(&#123;like:&#x27;ss&#x27;,$or:[&#123;条件1&#125;,&#123;条件2&#125;]&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"mysql","date":"2023-05-05T13:30:42.000Z","_content":"\n```mysql\n// 创建用户\ncreate user \"用户名\"@\"localhost\" identified by \"123\";\n// 查看全部用户\nselect user from user;\n// 删除用户\ndelete from user where user = \"user1\"\n \n\n\n```\n\n```mysql\n// 设置权限\nGRANT ALL ON *.* TO 'user'@'host';  # *.* 表示数据库库的所有库和表，对应权限存储在mysql.user表中\n```\n![[Pasted image 20230428183455.png]]\n然后就可以使用用户创建数据库\n```mysql\ncreate database informatrion_management;\n```\n![[Pasted image 20230428183536.png]]\n查看全部数据库\n```mysql\nshow databases;\n```\n![[Pasted image 20230428183606.png]]\n","source":"_posts/学习笔记/数据库/mysql.md","raw":"---\ntitle: mysql\ndate: 2023-05-05 21:30:42\ntags:  \n---\n\n```mysql\n// 创建用户\ncreate user \"用户名\"@\"localhost\" identified by \"123\";\n// 查看全部用户\nselect user from user;\n// 删除用户\ndelete from user where user = \"user1\"\n \n\n\n```\n\n```mysql\n// 设置权限\nGRANT ALL ON *.* TO 'user'@'host';  # *.* 表示数据库库的所有库和表，对应权限存储在mysql.user表中\n```\n![[Pasted image 20230428183455.png]]\n然后就可以使用用户创建数据库\n```mysql\ncreate database informatrion_management;\n```\n![[Pasted image 20230428183536.png]]\n查看全部数据库\n```mysql\nshow databases;\n```\n![[Pasted image 20230428183606.png]]\n","slug":"学习笔记/数据库/mysql","published":1,"updated":"2023-05-19T14:07:31.057Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oav001hwwvnft7oajsv","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 创建用户</span><br><span class=\"line\">create user &quot;用户名&quot;@&quot;localhost&quot; identified by &quot;123&quot;;</span><br><span class=\"line\">// 查看全部用户</span><br><span class=\"line\">select user from user;</span><br><span class=\"line\">// 删除用户</span><br><span class=\"line\">delete from user where user = &quot;user1&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 设置权限</span><br><span class=\"line\">GRANT ALL ON *.* TO &#x27;user&#x27;@&#x27;host&#x27;;  # *.* 表示数据库库的所有库和表，对应权限存储在mysql.user表中</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230428183455.png]]<br>然后就可以使用用户创建数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database informatrion_management;</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230428183536.png]]<br>查看全部数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show databases;</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230428183606.png]]</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 创建用户</span><br><span class=\"line\">create user &quot;用户名&quot;@&quot;localhost&quot; identified by &quot;123&quot;;</span><br><span class=\"line\">// 查看全部用户</span><br><span class=\"line\">select user from user;</span><br><span class=\"line\">// 删除用户</span><br><span class=\"line\">delete from user where user = &quot;user1&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 设置权限</span><br><span class=\"line\">GRANT ALL ON *.* TO &#x27;user&#x27;@&#x27;host&#x27;;  # *.* 表示数据库库的所有库和表，对应权限存储在mysql.user表中</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230428183455.png]]<br>然后就可以使用用户创建数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database informatrion_management;</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230428183536.png]]<br>查看全部数据库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show databases;</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230428183606.png]]</p>\n"},{"title":"抽象工厂模式","date":"2023-05-05T13:30:42.000Z","_content":"## 类图\n![[Pasted image 20230203181128.png]]\n## 代码实现\n工厂类需要实现抽象工厂接口,用抽象工厂接口约束工厂类\n### 抽象工厂接口\n```java\npackage mode.AbstractFactoryMode.factory.abstractFactory;  \n  \nimport mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  \n  \npublic interface abstractFactory {  \n    IRouterProduction ROUTER_PRODUCTION();  \n    IPhoneProduction PHONE_PRODUCTION();  \n}\n```\n### 抽象路由器生产接口\n```java\npublic interface IRouterProduction {  \n    void openWifi();  \n    void closeWifi();  \n  \n}\n```\n### 抽象手机生产接口\n```java\npackage mode.AbstractFactoryMode.product.abstractProduct;  \n  \npublic interface IPhoneProduction {  \n    void call();  \n    void sendMsg();  \n}\n```\n### 手机生产接口的实现类\n```java\npackage mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct;  \n  \nimport mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  \n  \npublic class HuaWeiPhoneProduction implements IPhoneProduction {  \n    @Override  \n    public void call() {  \n        System.out.println(\"华为打电话\");  \n    }  \n  \n    @Override  \n    public void sendMsg() {  \n        System.out.println(\"华为发短信\");  \n    }  \n}\n```\n### 路由器生产接口的实现\n```java\npackage mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct;  \n  \nimport mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  \n  \npublic class HuaWeiRouterProduction implements IRouterProduction {  \n    @Override  \n    public void openWifi() {  \n        System.out.println(\"华为路由器打开了wifi\");  \n    }  \n  \n    @Override  \n    public void closeWifi() {  \n        System.out.println(\"华为路由器关闭了wifi\");  \n    }  \n}\n```\n### 产品工厂实现\n```java\npackage mode.AbstractFactoryMode.factory.implFactory;  \n  \nimport mode.AbstractFactoryMode.factory.abstractFactory.abstractFactory;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  \nimport mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct.HuaWeiPhoneProduction;  \nimport mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct.HuaWeiRouterProduction;  \n  \npublic class HuaWeiFactory implements abstractFactory {  \n    @Override  \n    public IRouterProduction ROUTER_PRODUCTION() {  \n        return new HuaWeiRouterProduction();  \n    }  \n  \n    @Override  \n    public IPhoneProduction PHONE_PRODUCTION() {  \n        return new HuaWeiPhoneProduction();  \n    }  \n}\n```\n### 测试\n```java\npackage mode.AbstractFactoryMode;  \n  \nimport mode.AbstractFactoryMode.factory.implFactory.HuaWeiFactory;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  \n  \npublic class Client {  \n    public static void main(String[] args) {  \n       \n        HuaWeiFactory huaWeiFactory = new HuaWeiFactory();  \n        IRouterProduction iRouterProduction = huaWeiFactory.ROUTER_PRODUCTION();  \n        IPhoneProduction iPhoneProduction1 = huaWeiFactory.PHONE_PRODUCTION();  \n        iRouterProduction.closeWifi();  \n        iPhoneProduction1.call();  \n    }  \n}\n```","source":"_posts/学习笔记/设计模式/抽象工厂模式.md","raw":"---\ntitle: 抽象工厂模式\ndate: 2023-05-05 21:30:42\ntags:  \n---\n## 类图\n![[Pasted image 20230203181128.png]]\n## 代码实现\n工厂类需要实现抽象工厂接口,用抽象工厂接口约束工厂类\n### 抽象工厂接口\n```java\npackage mode.AbstractFactoryMode.factory.abstractFactory;  \n  \nimport mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  \n  \npublic interface abstractFactory {  \n    IRouterProduction ROUTER_PRODUCTION();  \n    IPhoneProduction PHONE_PRODUCTION();  \n}\n```\n### 抽象路由器生产接口\n```java\npublic interface IRouterProduction {  \n    void openWifi();  \n    void closeWifi();  \n  \n}\n```\n### 抽象手机生产接口\n```java\npackage mode.AbstractFactoryMode.product.abstractProduct;  \n  \npublic interface IPhoneProduction {  \n    void call();  \n    void sendMsg();  \n}\n```\n### 手机生产接口的实现类\n```java\npackage mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct;  \n  \nimport mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  \n  \npublic class HuaWeiPhoneProduction implements IPhoneProduction {  \n    @Override  \n    public void call() {  \n        System.out.println(\"华为打电话\");  \n    }  \n  \n    @Override  \n    public void sendMsg() {  \n        System.out.println(\"华为发短信\");  \n    }  \n}\n```\n### 路由器生产接口的实现\n```java\npackage mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct;  \n  \nimport mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  \n  \npublic class HuaWeiRouterProduction implements IRouterProduction {  \n    @Override  \n    public void openWifi() {  \n        System.out.println(\"华为路由器打开了wifi\");  \n    }  \n  \n    @Override  \n    public void closeWifi() {  \n        System.out.println(\"华为路由器关闭了wifi\");  \n    }  \n}\n```\n### 产品工厂实现\n```java\npackage mode.AbstractFactoryMode.factory.implFactory;  \n  \nimport mode.AbstractFactoryMode.factory.abstractFactory.abstractFactory;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  \nimport mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct.HuaWeiPhoneProduction;  \nimport mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct.HuaWeiRouterProduction;  \n  \npublic class HuaWeiFactory implements abstractFactory {  \n    @Override  \n    public IRouterProduction ROUTER_PRODUCTION() {  \n        return new HuaWeiRouterProduction();  \n    }  \n  \n    @Override  \n    public IPhoneProduction PHONE_PRODUCTION() {  \n        return new HuaWeiPhoneProduction();  \n    }  \n}\n```\n### 测试\n```java\npackage mode.AbstractFactoryMode;  \n  \nimport mode.AbstractFactoryMode.factory.implFactory.HuaWeiFactory;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  \nimport mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  \n  \npublic class Client {  \n    public static void main(String[] args) {  \n       \n        HuaWeiFactory huaWeiFactory = new HuaWeiFactory();  \n        IRouterProduction iRouterProduction = huaWeiFactory.ROUTER_PRODUCTION();  \n        IPhoneProduction iPhoneProduction1 = huaWeiFactory.PHONE_PRODUCTION();  \n        iRouterProduction.closeWifi();  \n        iPhoneProduction1.call();  \n    }  \n}\n```","slug":"学习笔记/设计模式/抽象工厂模式","published":1,"updated":"2023-05-19T14:07:31.057Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhun1oav001iwwvnfnz2g09a","content":"<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p>![[Pasted image 20230203181128.png]]</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>工厂类需要实现抽象工厂接口,用抽象工厂接口约束工厂类</p>\n<h3 id=\"抽象工厂接口\"><a href=\"#抽象工厂接口\" class=\"headerlink\" title=\"抽象工厂接口\"></a>抽象工厂接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.factory.abstractFactory;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">abstractFactory</span> &#123;  </span><br><span class=\"line\">    IRouterProduction <span class=\"title function_\">ROUTER_PRODUCTION</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">    IPhoneProduction <span class=\"title function_\">PHONE_PRODUCTION</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"抽象路由器生产接口\"><a href=\"#抽象路由器生产接口\" class=\"headerlink\" title=\"抽象路由器生产接口\"></a>抽象路由器生产接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IRouterProduction</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">openWifi</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">closeWifi</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"抽象手机生产接口\"><a href=\"#抽象手机生产接口\" class=\"headerlink\" title=\"抽象手机生产接口\"></a>抽象手机生产接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.product.abstractProduct;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IPhoneProduction</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">call</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">sendMsg</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"手机生产接口的实现类\"><a href=\"#手机生产接口的实现类\" class=\"headerlink\" title=\"手机生产接口的实现类\"></a>手机生产接口的实现类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HuaWeiPhoneProduction</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IPhoneProduction</span> &#123;  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">call</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;华为打电话&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMsg</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;华为发短信&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"路由器生产接口的实现\"><a href=\"#路由器生产接口的实现\" class=\"headerlink\" title=\"路由器生产接口的实现\"></a>路由器生产接口的实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HuaWeiRouterProduction</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IRouterProduction</span> &#123;  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">openWifi</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;华为路由器打开了wifi&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">closeWifi</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;华为路由器关闭了wifi&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"产品工厂实现\"><a href=\"#产品工厂实现\" class=\"headerlink\" title=\"产品工厂实现\"></a>产品工厂实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.factory.implFactory;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.factory.abstractFactory.abstractFactory;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct.HuaWeiPhoneProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct.HuaWeiRouterProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HuaWeiFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">abstractFactory</span> &#123;  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> IRouterProduction <span class=\"title function_\">ROUTER_PRODUCTION</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HuaWeiRouterProduction</span>();  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> IPhoneProduction <span class=\"title function_\">PHONE_PRODUCTION</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HuaWeiPhoneProduction</span>();  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.factory.implFactory.HuaWeiFactory;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;  </span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"type\">HuaWeiFactory</span> <span class=\"variable\">huaWeiFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HuaWeiFactory</span>();  </span><br><span class=\"line\">        <span class=\"type\">IRouterProduction</span> <span class=\"variable\">iRouterProduction</span> <span class=\"operator\">=</span> huaWeiFactory.ROUTER_PRODUCTION();  </span><br><span class=\"line\">        <span class=\"type\">IPhoneProduction</span> <span class=\"variable\">iPhoneProduction1</span> <span class=\"operator\">=</span> huaWeiFactory.PHONE_PRODUCTION();  </span><br><span class=\"line\">        iRouterProduction.closeWifi();  </span><br><span class=\"line\">        iPhoneProduction1.call();  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p>![[Pasted image 20230203181128.png]]</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>工厂类需要实现抽象工厂接口,用抽象工厂接口约束工厂类</p>\n<h3 id=\"抽象工厂接口\"><a href=\"#抽象工厂接口\" class=\"headerlink\" title=\"抽象工厂接口\"></a>抽象工厂接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.factory.abstractFactory;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">abstractFactory</span> &#123;  </span><br><span class=\"line\">    IRouterProduction <span class=\"title function_\">ROUTER_PRODUCTION</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">    IPhoneProduction <span class=\"title function_\">PHONE_PRODUCTION</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"抽象路由器生产接口\"><a href=\"#抽象路由器生产接口\" class=\"headerlink\" title=\"抽象路由器生产接口\"></a>抽象路由器生产接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IRouterProduction</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">openWifi</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">closeWifi</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"抽象手机生产接口\"><a href=\"#抽象手机生产接口\" class=\"headerlink\" title=\"抽象手机生产接口\"></a>抽象手机生产接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.product.abstractProduct;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">IPhoneProduction</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">call</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">sendMsg</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"手机生产接口的实现类\"><a href=\"#手机生产接口的实现类\" class=\"headerlink\" title=\"手机生产接口的实现类\"></a>手机生产接口的实现类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HuaWeiPhoneProduction</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IPhoneProduction</span> &#123;  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">call</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;华为打电话&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMsg</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;华为发短信&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"路由器生产接口的实现\"><a href=\"#路由器生产接口的实现\" class=\"headerlink\" title=\"路由器生产接口的实现\"></a>路由器生产接口的实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HuaWeiRouterProduction</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">IRouterProduction</span> &#123;  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">openWifi</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;华为路由器打开了wifi&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">closeWifi</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;华为路由器关闭了wifi&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"产品工厂实现\"><a href=\"#产品工厂实现\" class=\"headerlink\" title=\"产品工厂实现\"></a>产品工厂实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode.factory.implFactory;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.factory.abstractFactory.abstractFactory;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct.HuaWeiPhoneProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.implProduct.HuaWeiProduct.HuaWeiRouterProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HuaWeiFactory</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">abstractFactory</span> &#123;  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> IRouterProduction <span class=\"title function_\">ROUTER_PRODUCTION</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HuaWeiRouterProduction</span>();  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> IPhoneProduction <span class=\"title function_\">PHONE_PRODUCTION</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HuaWeiPhoneProduction</span>();  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mode.AbstractFactoryMode;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.factory.implFactory.HuaWeiFactory;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IPhoneProduction;  </span><br><span class=\"line\"><span class=\"keyword\">import</span> mode.AbstractFactoryMode.product.abstractProduct.IRouterProduction;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;  </span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"type\">HuaWeiFactory</span> <span class=\"variable\">huaWeiFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HuaWeiFactory</span>();  </span><br><span class=\"line\">        <span class=\"type\">IRouterProduction</span> <span class=\"variable\">iRouterProduction</span> <span class=\"operator\">=</span> huaWeiFactory.ROUTER_PRODUCTION();  </span><br><span class=\"line\">        <span class=\"type\">IPhoneProduction</span> <span class=\"variable\">iPhoneProduction1</span> <span class=\"operator\">=</span> huaWeiFactory.PHONE_PRODUCTION();  </span><br><span class=\"line\">        iRouterProduction.closeWifi();  </span><br><span class=\"line\">        iPhoneProduction1.call();  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clhun1oab0000wwvn3z147o3r","tag_id":"clhun1oad0002wwvndllb2c32","_id":"clhun1oah0009wwvnakvobdam"},{"post_id":"clhun1oab0000wwvn3z147o3r","tag_id":"clhun1oaf0005wwvn4fbhfyrd","_id":"clhun1oai000bwwvndb72dgqn"}],"Tag":[{"name":"git","_id":"clhallgkc0001zg5f5tuedkk5"},{"name":"win,powershell","_id":"clhbggx9e0000a8vn5uh2afn3"},{"name":"win","_id":"clhun1oad0002wwvndllb2c32"},{"name":"powershell","_id":"clhun1oaf0005wwvn4fbhfyrd"}]}}